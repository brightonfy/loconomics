@*
    Read, create and change the logged user payment plan (membership).

    EXAMPLES {
        "Payment plan (get active plan and create first one)": {
            "url": "/api/v1/en-US/me/payment-plan",
            "get": { },
            "post": {
                "paymentPlan": "MonthlyLite",
                "paymentMethodToken": "fake-valid-nonce"
            }
        },
        "Payment plan: user history": {
            "url": "/api/v1/en-US/me/payment-plan/history",
            "get": { }
        }
    }
*@
@functions{
    public class RestPaymentPlan : RestWebPage
    {
        private dynamic GetActive()
        {
            return LcRest.UserPaymentPlan.GetUserActivePlan(WebSecurity.CurrentUserId);
        }

        public override dynamic Get()
        {
            if (UrlData.Count == 0) {
                return GetActive();
            }
            else if (UrlData.Count == 1 && UrlData[0] == "history")
            {
                return LcRest.UserPaymentPlan.GetByUser(WebSecurity.CurrentUserId);
            }
            throw new HttpException(404, "Not found");
        }

        public override dynamic Post()
        {
            if (UrlData.Count > 0) {
                throw new HttpException(404, "Not found");
            }

            var userId = WebSecurity.CurrentUserId;

            // Validation
            Validation.RequireField("paymentPlan", "Choose a plan");
            Validation.RequireField("paymentMethodToken", "Provide a payment method");

            if (!Validation.IsValid())
            {
                throw new HttpException(400, LcRessources.ValidationSummaryTitle);
            }

            var plan = (LcPayment.Membership.SubscriptionPlan)Enum.Parse(
                typeof(LcPayment.Membership.SubscriptionPlan), Request.Form["paymentPlan"]);
            var token = Request.Form["paymentMethodToken"];
            LcRest.UserPaymentPlan.CreateSubscription(userId, plan, token);

            return GetActive();
        }
    }
}
@{   
    Response.RestRequiresUser(LcData.UserInfo.UserType.User);
    new RestPaymentPlan().JsonResponse(this);
}
