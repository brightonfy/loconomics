@using WebMatrix.WebData;
@*
    Fetchs owner payment methods, that comes from Braintree with
    sensitive data as a hint but still hidden (like card number, only last digits returned).
    Actually, payment methods are just 'saved credit cards' on Braintree, but name is kept
    more generic.

    The data 

    The target of this API is to let a customer to reuse previous saved methods 
    when in a booking checkout.

    Options:
    
    - GET /
        No params, it returns ever a list (even an empty list) of saved payment methods.

        @result [{
            paymentMethodID:string ID of the payment method for the user.
                Its generated by Braintree, so is not an integer number as usual but a string code 'token'.
            uid:string UID or Unique Number Identifier. Braintree generates this long string as a global ID, in opposite
                to the token that is related to the customer.
            cardType:string Name of the credit card type, like Mastercard, Visa, etc.
            bin:string Is a string containing the first digits of the card. Full number is protected, but this is a hint for
                the owner
            lastFour:string Is a string containing the last 4 digits of the card. Full number is protected, but this is a hint for
                the owner
            maskedNumber:string Is a string with the bin plus some asterisks plus lastFour, so can be displayed to the owner as a hint
                or build another way to display it just using the specific fields, or just one part.
            expirationDate:string Display the month and year of expiration, in the format 'mm/yyyy' like '01/2013'
            expirationMonth:string Is the month number as a two digits string, prefixed with 0 when lower than 10
            expirationYear:string Is the year number as four digits string.
            cardholderName:string Name as in the card of the owner.
        }]
        
    EXAMPLES {
        "My payment methods": {
            "url": "/api/v1/en-US/me/payment-methods",
            "get": {}
        }
    }
*@
@functions{
    public class RestMePaymentMethods : RestWebPage
    {
        public override dynamic Get()
        {
            var userID = WebSecurity.CurrentUserId;
            
            var data = LcPayment.GetSavedCreditCards(userID);
            if (data == null)
                return new List<object>();

            return data.Select(d => {
                return new {
                    paymentMethodID = d.Token,
                    uid = d.UniqueNumberIdentifier,
                    cardType = d.CardType.ToString(),
                    bin = d.Bin,
                    lastFour = d.LastFour,
                    maskedNumer = d.MaskedNumber,
                    expirationDate = d.ExpirationDate,
                    expirationMonth = d.ExpirationMonth,
                    expirationYear = d.ExpirationYear,
                    cardholderName = d.CardholderName
                };
            });
        }
    }
}
@{
    Response.RestRequiresUser(LcData.UserInfo.UserType.User);
    new RestMePaymentMethods().JsonResponse(this);
}
