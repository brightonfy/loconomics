@*
    Sign-up a user, getting logged if success and returns the same
    result as the Login method. If the user and password exists
    already and match, it just get logged (exception: if the user
    was a customer as is requesting the 'freelancer' type, will become
    a freelance and get logged).

    TODO Coordinate with login about changes in things like old redirectUrl

    - POST:
        - email:string
        - password:string
        - firstName:string
        - lastName:string,
        - phone:string,
        - referralCode:string,
        - device:string,
        - facebookUserID:string Allows to sign-in without password but with a valid Facebook Account
        - facebookAccessToken:string If facebookUserID is used, the access token is required to validate the account
        - returnProfile:bool as in Login
        - profileType:string Enumeration: 'service-professional', 'client'
            NOTE: Currently allowed: 'freelancer', 'freelance', 'provider' as aliases,
                any other value or not value will create a 'client' profile.

    - POST /facebook:
        - accessToken:string Given by the Facebook API on the browser/app
            Currently, as of implementation, is supported too: signed_request and 'Facebook App cookie'
        - returnProfile:bool as in normal Signup
        - profileType:string as in normal Signup

    - return: same as Login, or 400 with validation errors.

    EXAMPLES {
        "Signup": {
            "url": "/api/v1/en-US/auth/signup",
            "post": {
                 "email": "some user email",
                 "password": "",
                 "firstName": "John",
                 "lastName": "Smith",
                 "phone": "1234",
                 "postalCode": "90001",
                 "referralCode": "",
                 "device": "ios",
                 "profileType": "service-professional",
                 "facebookUserID": "",
                 "facebookAccessToken": "",
                 "returnProfile": false,
                 "api comment": "Same returned data as in Login, and returnProfile behaves the same too. The returned 'redirectUrl' on success must be mandatory when there is a value since sometimes will be different from the given 'redirect', as for providers in the Onboarding, they must continue that at the step given in 'redirectUrl'. This is the fact for current Website, what rules we will manage on mobile?."
            }
        },
        "Facebook Signup (quick signup that will retrieve basic user data from Facebook, server2server)": {
            "url": "/api/v1/en-US/auth/signup/facebook",
            "post": {
                "accessToken": "Facebook Access Token",
                "profileType": "service-professional",
                "returnProfile": true
            }
        }
    }
*@
@functions{
    public class RestSignup : RestWebPage
    {
        public override dynamic Post()
        {
            if (UrlData.Count > 0 ) {
                if (UrlData[0] == "facebook") {
                    return LcAuthHelper.FacebookSignup(this.WebPage);
                }
                else {
                    throw new HttpException(404, "Not Found");
                }
            }
            else {
                return LcAuthHelper.Signup(this.WebPage);
            }
        }
    }
}
@{   
    new RestSignup().JsonResponse(this);
}
