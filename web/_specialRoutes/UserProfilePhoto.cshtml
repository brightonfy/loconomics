@using System.Drawing.Imaging;
@{
    const int fixedSizeWidth = 112;
    const int fixedSizeHeight = 118;
    var sizeName = fixedSizeWidth.ToString() + "x" + fixedSizeHeight.ToString();
    // To fix #558, because the change of size (so file name changed too), we do double try
    // for a while
    // TODO FUTURE: When there are no more oldSize (or a few, convert it manually), remove this and its use
    const string oldSizeName = "176x184";
    
    var userId = Context.GetRouteValue("userID").AsInt();
    
    if (userId == 0 &&
        WebSecurity.IsAuthenticated) {
        userId = WebSecurity.CurrentUserId;
    }

    var type = Context.GetRouteValue("type");    
    if (type == "2x") {
        type = "@2x";
    } else if (!String.IsNullOrWhiteSpace(type)) {
        type = "-" + type;
    }
    
    string userFolder = "img/userphotos/u" + userId.ToString() + "/";
    
    bool imageAdapted = false;
    
    // "$avatar"
    // Standard name of pre-adapted image, just
    // serve ever the profile adapted photo for now instead the big colored original:
    var userPhoto = "$avatar-" + sizeName + "-gray" + type + ".jpg";
    imageAdapted = true;
    // Physical image path to userPhoto
    var path = HttpContext.Current.Request.MapPath(LcUrl.RenderAppPath + userFolder + userPhoto);
        
    // Try the old size if it doesn't exists the new:
    if (!System.IO.File.Exists(path)) {
        // Update name and path
        userPhoto = "$avatar-" + oldSizeName + "-gray" + type + ".jpg";
        path = HttpContext.Current.Request.MapPath(LcUrl.RenderAppPath + userFolder + userPhoto);
    }

    if (!System.IO.File.Exists(path)){
        imageAdapted = true;
        path = Server.MapPath(LcUrl.RenderAppPath + "img/userphotos/u0/avatar.png");
    }

    try {
        if (imageAdapted){
            new WebImage(path).Write();
        } else {
            // Transform image to Grayscale and profile photo size to avoid big images:
            // Is inside a using block because ensure close the image ressources and the file
            
            using (var img = LcImaging.Grayscale(LcImaging.Resize(new System.Drawing.Bitmap(path), fixedSizeWidth, fixedSizeHeight, LcImaging.SizeMode.Cover, LcImaging.AnchorPosition.Center))) {
                // Telling to the browser that this is a JPG image
                Response.ContentType = "image/jpg";
                // Send the transformed image to the browser
                img.Save(Response.OutputStream, ImageFormat.Jpeg);
            }
        }
    } catch {}
}