@using WebMatrix.Data;
@{
    LcHelpers.SecurePage();
    
    var u = LcData.UserInfo.GetUserRow();
    int bID = PageData["BookingID"] ?? Request["BookingID"].AsInt();
    string redirectUrl = PageData["RedirectUrl"];
    
    var sqlCheckBooking = @"
        SELECT  TOP 1 B.BookingID
        FROM    BookingRequest As R
                 INNER JOIN Booking As B
                  ON R.BookingRequestID = B.BookingRequestID
        WHERE   R.CustomerUserID = @0
                 AND
                B.BookingID = @1
                -- Only confirmed bookings, other states are finished, cancelled or locked in some way
                 AND
                B.BookingStatusID = 1
    ";

    using (var db = Database.Open("sqlloco")) {
        var checkID = db.QueryValue(sqlCheckBooking, u.UserID, bID);
        if (checkID != null && (int)checkID == bID) {
            var result = LcData.Booking.InvalidateBooking(bID, 6); // 6:Cancelled

            if (result.Error == 0) {
                // Send message: to notify provider and customer copy
                LcMessaging.SendBookingUpdate(bID, 'c');
                // To system: notify Loconomics Staff Users requesting 
                // the manual payment to provider by the price less refunded:
                LcMessaging.SendProviderPaymentRequestToLoconomics(bID);

                if (redirectUrl == null) {
                    redirectUrl = LcUrl.LangPath + (
                        Request.IsAjaxRequest() ?
                        "Booking/$BookingDetailsWidget/?BookingID={0}" :
                        "Dashboard/Bookings/#!Booking-{0}");
                }
                redirectUrl = String.Format(redirectUrl, bID);
                
                if (Request.IsAjaxRequest()){
                    LcHelpers.ReturnJsonResult(3, redirectUrl);
                } else {
                    Response.Redirect(redirectUrl);
                }
            } else {
                
                var fullmsg = "Error cancelling the booking: " + result.ErrorMessage;
                
                if (PageData["UseRenderReturns"]) {
                    LcHelpers.RenderPageReturns = fullmsg;
                    return;
                }
                
                if (Request.IsAjaxRequest()){
                    // Return JSON result:
                    // We need negative numbers to indicate an error (is our convention for json 'Code')
                    LcHelpers.ReturnJsonError(0 - result.Error, fullmsg);
                } else {
                    throw new HttpException(500, fullmsg);
                }
            }
        } else {
            
            var fullmsg = "Impossible to cancel that Booking. Is already cancelled?";
                
            if (PageData["UseRenderReturns"]) {
                LcHelpers.RenderPageReturns = fullmsg;
                return;
            }
            
            if (Request.IsAjaxRequest()){
                /* What? 
                 * - BookingID and UserID (as CustomerUserID) don't match?
                 * - Booking is already cancelled?
                 */
                LcHelpers.ReturnJsonError(-1, fullmsg);
            } else {
                throw new HttpException(500, fullmsg);
            }
        }
    }
}