@using Braintree;
@using WebMatrix.Data;
@{
    LcHelpers.ProviderPage();
    
    var PageState = PageData["PageState"] ?? ModelState;
    var doReturn = PageState == ModelState;

    var userId = WebSecurity.CurrentUserId;
    
    var isInOnboarding = (bool)(PageData["IsInOnboarding"] ?? false);
    var isInstantSaving = Request["instantSaving"].AsBool(false);
    
    // Request specific to only Reset private url
    if (!IsPost & Request["reset-private-url"].AsBool()) {

        var newToken = LcCalendar.ResetIcalendarExportUrl(userId);

        if (Request.IsAjaxRequest()) {
            LcHelpers.ReturnJsonResult(0, LcCalendar.BuildIcalendarExportUrl(userId, newToken));
        } else {
            var url = LcUrl.LangUrl + "NewDasboard/availability/";
            if (Request.UrlReferrer != null) {
                url = Request.UrlReferrer.ToString();
            }
            Response.Redirect(url);
        }
    }
    
    // Data
    var programURL = "";
    var privateUrlToken = "";
  
    Validation.Add("program-url", Validator.StringLength(500, 0, "Calendar URL must be fewer than 500 characters."));
    Validation.Add("program-url", Validator.Url("Calendar URL is not valid"));
    
    if (IsPost && Validation.IsValid()) {
        
        if (PageState.IsValid) {
            
            programURL = Request["program-url"];
            
            // Generate a new token if requested, else left null to
            // maintain current one:
            // NOTE: right now the reset action happens in a specific
            // request and form doesn't get this field added then this
            // code will not run ever;
            // BUT its simple and can be useful if the UI is changed
            // and a checkbox or similar is added for this.
            privateUrlToken = Request["reset-private-url"].AsBool() ?
                LcEncryptor.GenerateRandomToken(userId.ToString()) :
                null;

            // Testing the alert
            using (var db = Database.Open("sqlloco")) {
                db.Execute("SetCalendarProviderAttributes @0, null, null, @1, @2", userId, 
                    programURL,
                    privateUrlToken
                );
                
                db.Execute("EXEC TestAlertAvailability @0", userId);
            }
            
            // Do a calendar import for this user, to get inmediate results instead of wait for ScheduleTask
            if (LcValidators.IsUrl(programURL)) {
                // TODO: Do the task in asynchronous way to be quickly returning the result to the user
                //var async = new PageAsyncTask(new EventHandler(LcCalendar.Import), null, null, null, true);
                try{
                    LcCalendar.Import(userId, programURL);
                }catch{}
            } else {
                LcCalendar.RemoveImportedEventsForUser(userId);
            }
            
            if (doReturn) {
                LcHelpers.ReturnJsonResult(5, LcRessources.ShortDataSaved);
            }
        }
    }
    
    if (isInstantSaving) {
        // Avoid unneed processing, instant saving does not require output, just placeholder
        @("<div/>")
        return;
    }

    var syncOptions = LcCalendar.GetRestCalendarSyncingOptions(userId);

    programURL      = syncOptions.icalImportUrl;
    var privateUrl  = syncOptions.icalExportUrl;

    var idprefix = "DashboardCalendarSync";
}
<p class="DashboardSection-page-section-introduction">Do you use a calendar already?
    We can both import your availability and export your Loconomics bookings to ensure
    you never miss an appointment.
</p>
<fieldset class="DashboardCalendarSync has-confirm" data-ajax-fieldset-action="@(LcUrl.LangPath)$Dashboard/Availability/$CalendarSync/?instantSaving=True" @Html.Raw(isInOnboarding ? "data-instant-saving='true'" : "")>
    <ul>
        <li>
            <label for="@idprefix-program-url">Please paste the URL from your iCal-supported calendar to import your free/busy information here:</label>
            <input class="BasicForm-fill" type="text" name="program-url" value="@programURL" id="@idprefix-program-url"/>
        </li>
        <li>
            <label for="@idprefix-private-url">Please copy this URL and paste it into your iCal-supported calendar to sync all your Loconomics appointments:</label>
            <input class="BasicForm-fill DashboardCalendarSync-privateUrlField" placeholder="Reseting.." data-error-message="An error happen, please try again" id="@idprefix-private-url" readonly="readonly" type="text" value="@(privateUrl)" />
        </li>
        <li>
            <a class="DashboardCalendarSync-reset-action action" target="_blank" href="@(LcUrl.LangPath)$dashboard/Availability/$CalendarSync/?reset-private-url=true">Reset Private URL</a>
        	<p>
                This URL is private to ensure only you can access your appointments.
                You may reset this URL at any time by clicking the button above and copying and pasting the new URL into your calendar program.
            </p>
        </li>
        <li>
            <h2 class="BasicForm-section-header">If you need help, click on your calendar program below:</h2>
            <ul>
                <li><a href="https://loconomics.zendesk.com/entries/24018953-Syncing-to-your-Google-calendar" target="_blank" >Google</a></li>
                <li><a href="https://loconomics.zendesk.com/entries/24007941-Syncing-to-your-Android-calendar" target="_blank" >Android</a></li>
                <li><a href="https://loconomics.zendesk.com/entries/24006092-Syncing-to-your-Apple-iOS-iCal-calendar" target="_blank" >Apple iPhone/iPad</a></li>
                <li><a href="https://loconomics.zendesk.com/entries/24018963-Syncing-to-your-Apple-iCal-desktop-calendar" target="_blank" >Apple iCal desktop</a></li>
                <li><a href="https://loconomics.zendesk.com/entries/24006082-Syncing-to-your-Yahoo-calendar" target="_blank" >Yahoo!</a></li>
                <li><a href="https://loconomics.zendesk.com/entries/24028398-Syncing-to-your-Windows-Live-calendar" target="_blank" >Outlook/Windows Live</a></li>
            </ul>
        </li>
    </ul>
</fieldset>