@using WebMatrix.Data;
@{
    LcHelpers.SecurePage();
    
    Braintree.WebhookNotification notification = null;
    dynamic account = LcData.GetProviderPaymentAccount(WebSecurity.CurrentUserId);

    if (account != null) {    
        var gw = LcPayment.NewBraintreeGateway();
            
        try {
            notification = gw.WebhookNotification.Parse(account.bt_signature, account.bt_payload);
        } catch {}
    }
}
<div data-source-url="@(LcUrl.LangPath)$Dashboard/$AccountPaymentAccount/">
@if (account == null)
{
    @RenderPage("$AccountPaymentAccountForm.cshtml")
}
else
{
    <p class="setting-instructions">
        Getting paid is the easy part.
        We accept payments on your behalf, and Braintree processes them with a deposit directly to your bank account.  A @(LcPayment.MarketplaceProviderFee)% fee is subtracted from your payment to cover processing costs.
        Easy, right?
    </p>
    <div>
    <h4>Status</h4>
    @switch ((string)account.Status)
    {
        case "active": //Braintree.MerchantAccountStatus.ACTIVE:
            <p>You're all set up with Braintree payments</p>
            <p>If you need to update your personal or bank account information, please contact Braintree at 877.434.2894.</p>
            break;
        case "pending": //Braintree.MerchantAccountStatus.PENDING.ToString():
            <p>Braintree is working on creating your account.</p>
            break;
        case "suspended": //Braintree.MerchantAccountStatus.SUSPENDED.ToString():
            <p>There was an error in processing your Braintree application. Please contact Braintree at 877.434.2894.</p>
            if (!String.IsNullOrEmpty(account.Message) || (notification != null && notification.Errors.Count > 0))
            {
            <p>Error(s) communicated by Braintree:</p>
            <ul>
                @if (!string.IsNullOrEmpty(account.Message)) {
                    <li>@account.Message</li>
                }
                @if (notification != null) {
                    foreach(var err in notification.Errors.All()) {
                        <li><span>(@(err.Code))</span> @err.Message</li>
                    }
                }
            </ul>
            }
            break;
    }
    </div>
}
</div>