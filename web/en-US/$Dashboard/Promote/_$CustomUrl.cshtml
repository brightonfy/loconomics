@{
    LcHelpers.ProviderPage();
    
    var u = LcData.UserInfo.GetUserRowWithContactData();
    var ProfileUrl = Request["profile-url"] ?? u.ProviderProfileURL;
    var PageState = PageData["PageState"] ?? ModelState;
    var doReturn = PageState == ModelState;

    Validation.Add("profile-url", Validator.Regex(@"\w*", "The custom URL you've entered is invalid"));

    if (IsPost && Validation.IsValid()) {
        using (var db = Database.Open("sqlloco")){
            if (PageState.IsValid) {
                // Check that profile-url is not in use by other provider, but discarding in the check the own provider
                if (!String.IsNullOrEmpty(ProfileUrl) && 
                    db.QueryValue(@"
                    SELECT  count(*)
                    FROM    users
                    WHERE   UserID <> @0
                            AND ProviderProfileURL like @1
                ", u.UserID, ProfileUrl) > 0) {
                    PageState.AddError("profile-url", "We're sorry, that URL is unavailable, please choose other.");
                }
            }
            if (PageState.IsValid) {
                // Check what data changes to revoke verifications and update data:
                db.Execute(@"
                    DECLARE 
                    @UserID int
                    ,@ProfileUrl varchar(2078)

                    SET @UserID = @0
                    SET @ProfileUrl = @1

                    BEGIN TRAN

                    UPDATE	Users
                    SET     
                            ProviderProfileURL = @ProfileUrl

                            ,UpdatedDate = getdate()
                            ,ModifiedBy = 'sys'
                    WHERE   UserId = @UserID

                    COMMIT TRAN
                ",
                 u.UserID,
                 (u.IsProvider ? ProfileUrl : null));

                if (doReturn) {
                    LcHelpers.ReturnJsonResult(5, LcRessources.ShortDataSaved);
                }
            }
        }
    }
}

<fieldset class="DashboardCustomUrl">
    <p class="DashboardSection-page-section-introduction">
        Create your own personal brand by customizing your profile's URL. Be original! You can share it with anyone you want to book your services.
    </p>
    <ul>
        <li>
            <fieldset>
                <legend>Enter a URL:</legend>https://loconomics.com/<input type="text" name="profile-url" value="@ProfileUrl" @Validation.GetHtml("profile-url") />
                @Html.ValidationMessage("profile-url")
            </fieldset>
        </li>
    </ul>
</fieldset>