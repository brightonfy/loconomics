@**
    This page is used to process responses from 'Connect With Facebook' buttons.

    IMPORTANT:
    NEEDSREVIEW NEEDSREFACTOR    
    Currently the account creation here is not being used, superseed by latest changes
    on WelcomePopup that uses the Javascript API for most of the things synchronized with the normal
    form back-end of that page to create account, with LcAuth to link Facebook and Loconomics accounts.
    
    THIS IS STILL USED for Login and for Verification, that connects to Facebook with account/_FacebookConnectButton
    and redirects here to complete operation, all in a 'popup' that reloads the page on success.
    It could be simplified with some Javascript, deprecating this, FacebookConnectButton, and the global app.js link
    with the module facebookUtils.js
**@
@using WebMatrix.Data;
@using WebMatrix.WebData;
@{
    {
        /* Page to be redirected from Facebook Login, with next syntax if OK:
            YOUR_REDIRECT_URI?
                state=YOUR_STATE_VALUE
               &code=CODE_GENERATED_BY_FACEBOOK
         
         * or next if FAILS (user don't grant the application)
            YOUR_REDIRECT_URI?
                error_reason=user_denied
               &error=access_denied
               &error_description=The+user+denied+your+request.
               &state=YOUR_STATE_VALUE
         */
        // First at all, validate the state value to verify the authenticity of the request.
        if (UrlData.Count == 0 && Request["state"] != (string)Session["facebookState"])
        {
            // BAD request, return to home silently and stop request:
            Response.Redirect(LcUrl.LangPath, true);
        }

        // If there is not an error (error means that user don't grant our application, or cancel login or facebook login fails)
        if (Request["error"] == null)
        {
            var user = LcFacebook.GetUserFromCurrentRequest();

            bool asProvider = 
                UrlData.Count > 1 && UrlData[1] == "Provider" ||
                Request.QueryString["profile"] == "provider";

            // If we have user info
            if (user != null && user["username"] != null && user["id"] != null)
            {
                var doVerify = UrlData.Count > 0 && UrlData[0] == "Verify";
                
                //string facebookemail = N.W(user.email) ?? user.username + "@facebook.com";

                if (doVerify) {
                    verifyAccount(user);
                }
                else {
                    var lcUser = LcAuth.GetFacebookUser(((string)user.id).AsLong());
                    if (lcUser != null) {
                        // Login into the Loconomics account:
                        FormsAuthentication.SetAuthCookie(lcUser.Email, false);
                        LcData.UserInfo.RegisterLastLoginTime(lcUser.UserID);
                    }
                }
                
                /*
                 * NOTE: Account creation disabled from this page
                else if (!WebSecurity.UserExists(facebookemail)){
                    createAccount(user, facebookemail, asProvider);
                }
                 * */
            }
        }
    }
    
    // Redirect the user to the page:
    // If we are on /Callback/Provider/, go to the provider sign-up to continue the wizard.
    string redirectUrl = null;

    if (UrlData.Count > 1 && 
        UrlData[0] == "Callback" && 
        UrlData[1] == "Provider") {
        redirectUrl = LcUrl.LangPath + "Account/ProviderWelcome/";
    } else {
        // Redirect to the desired page or to home:
        redirectUrl = N.W(Request.QueryString["Redirect"]) ?? LcUrl.LangPath;
    }

    if (Request.IsAjaxRequest()){
        LcHelpers.ReturnJsonResult(1, redirectUrl);
    } else {
        Response.Redirect(redirectUrl);
    }

    // FACEBOOK LOGIN using the Microsoft Helper: EVER RETURN FALSE, doesn't work!
    /*if (!Facebook.IsFacebookUserAuthenticated) {
        //Response.Redirect(LcUrl.LangPath);
        Response.Write("NO isfacebook user authen");
    } else if (Facebook.MembershipLogin()) {
        //Context.RedirectLocal(Request["returnUrl"]);
        Response.Write("YES membershiplogin: " + Request["returnUrl"]);
    } else {
        //Context.RedirectLocal(Request["registerUrl"]);
        //Facebook.AssociateMembershipAccount(Facebook.GetFacebookUserProfile().Email);
        Response.Write("NO membershiplogin: associating: " + Request["registerUrl"]);
    }*/
}
@functions{

    /// <summary>
    /// Create account for the given Facebook @user and @facebookemail
    /// </summary>
    /// <param name="user"></param>
    /// <param name="facebookemail"></param>
    /// <param name="asProvider"></param>
    void createAccount(dynamic user, string facebookemail, bool asProvider){
        // If user don't exists, create it
        try{
            string autopassword = Membership.GeneratePassword(14, 5);
            var genderID = (user.gender == "female" ? 1 : 2);
            string aboutme = null;
            try {
                aboutme = (string)user.about;
            } catch {}

            var registeredUser = 
            LcAuth.RegisterUser(
                facebookemail,
                user.first_name,
                user.last_name,
                autopassword,
                asProvider,
                null,
                genderID,
                aboutme
            );
            //LcData.SetHomeAddress(user.UserID, "", "", "", stateProvinceID, postalCodeID, LcData.GetCurrentCountryID(), LcData.GetCurrentLanguageID());
            //LcAuth.SendRegisterUserEmail(user);

            int userid = registeredUser.UserID;
            LcAuth.ConnectWithFacebookAccount(userid, user.id);

        } catch {}
    }
    
    /// <summary>
    /// Verify current logged account with the Facebook
    /// credentials/info given at @user.
    /// </summary>
    /// <param name="user"></param>
    void verifyAccount(dynamic user) {
        // User already exists, is requesting a Facebook verification:
        LcHelpers.SecurePage();
        int userID = WebSecurity.CurrentUserId;
        /*
        // First, check facebook email with current user id (user must be logged to verify)
        int userID = WebSecurity.GetUserId(facebookemail);
        if (userID != WebSecurity.CurrentUserId) {
            LcHelpers.ReturnJsonResult(2801, "Facebook verification failed: Facebook email don't match current Loconomics user email", true);
        }*/
        // Compare email and full name
        using (var db = Database.Open("sqlloco")) {
            var c = (int)db.QueryValue(@"
                SELECT  count(*)
                FROM    Users As U
                            INNER JOIN
                        UserProfile As P
                            ON U.UserID = P.UserID
                WHERE   U.UserID = @0
                            AND
                        (
                        dbo.fx_concat(dbo.fx_concat(dbo.fx_concat(U.FirstName, dbo.fx_concatBothOrNothing(U.MiddleIn, '.', ''), ' '), U.LastName, ' '), U.SecondLastName, ' ') = @1
                            OR
                        dbo.fx_concat(U.FirstName, U.LastName, ' ') = @1
                        )
            ", userID, ((string)user.name ?? "").Trim());
            if (c == 1) {
                // Verified, save verification record
                db.Execute(@"EXEC SetUserVerification @0,@1,@2,@3", userID, 8, DateTime.Now, 1);
                // Test social media alert
                db.Execute("EXEC TestAlertSocialMediaVerification @0", userID);
                LcHelpers.ReturnJsonResult(0, "Account successfully verified through Facebook!");
            } else {
                // Verification failed
                /*var debugInfo = " Facebook:" + user.first_name + " " + user.last_name;
                debugInfo += " = " + (string)db.QueryValue(@"
                    SELECT  dbo.fx_concat(dbo.fx_concat(dbo.fx_concat(U.FirstName, U.MiddleIn, ' '), U.LastName, ' '), U.SecondLastName, ' ') as loconame
                    FROM    Users As U
                                INNER JOIN
                            UserProfile As P
                                ON U.UserID = P.UserID
                    WHERE   U.UserID = @0
                                AND
                            P.Email = @1
                ", userID, facebookemail);*/
                // + debugInfo
                LcHelpers.ReturnJsonResult(2802, "Facebook verification failed: Facebook full name don't match current Loconomics user full name.", true);
            }
        }
    }
}
