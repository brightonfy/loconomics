@using WebMatrix.Data;
@using WebMatrix.WebData;
@{
   
    var showHeader = PageData["ShowHeader"] ?? true;
    var showTools = PageData["ShowTools"] ?? true;
    string redirect =  N.W(Request["ReturnUrl"]) ??
        N.W(PageData["Redirect"]) ??
        N.W(Request["Redirect"]);
    Session["RegisterWaitConfirmation"] = PageData["RegisterWaitConfirmation"] ?? true;
    
    var facebookAppId = Facebook.AppId;
    var facebookRedirectUri = LcUrl.LangUrl + "Account/Facebook/";
    var facebookPermissions = "email"; //"COMMA_SEPARATED_LIST_OF_PERMISSION_NAMES";
    // "SOME_ARBITRARY_BUT_UNIQUE_STRING";
    var facebookState = Session["facebookState"] = Guid.NewGuid().ToString();
    
    // Setup Validation
    // Validate the user's username
    Validation.RequireField("username", "You must specify a user name.");
    // Validate the user's password
	Validation.RequireField("password", "You must specify a password.");
    

    /* OAuth provider login disabled currently -need review when enable-
    if (IsPost){
        // is this a OAuth sign in request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty()) {
            OAuthWebSecurity.RequestAuthentication(provider, LcUrl.LangPath + "Account/RegisterService/");
            return;
        }
    }*/

    if (IsPost) {
        try {
            
            var result = LcAuthHelper.Login(this);
            
            // Everything fine, do redirection:
            // We return a json with result OK and redirect link (Code=1),
            // and response end just after this:
            LcHelpers.ReturnJsonResult(1, N.W(result.redirectUrl) ?? LcUrl.LangPath);
            
        } catch (HttpException ex) {
            
            // Documented posible codes are:
            // HttpCode:400
            // Validation error, left the page send the html with the errors.
            // Or incorrect user/password, show message
            // HttpCode:409
            // Account locked or not confirmed
            
            // On any case, show the error message and left the page render the html
            // with all the information
            // but avoiding repeat the validation tittle for the case of a validation error
            // that uses that on the exception message
            if (ex.Message != LcRessources.ValidationSummaryTitle) {
                ModelState.AddFormError(ex.Message);
            }
        }
    }
}
<article id="loginBox" class="account-popup">
    @if(showHeader){
    <hgroup class="title">
        <h1>Log in to Loconomics</h1>
    </hgroup>
    }
    <section>
        <form class="choice-option ajax ajax-box login changes-notification-disabled" data-success-post-message="Logged successfully!" method="post" action="@(LcUrl.LangPath)Account/$Login/@(Request.Url.Query)">
            @* If one or more validation errors exist, show an error *@
            @Html.ValidationSummary(null, true, null)
            <input type="hidden" name="Redirect" value="@redirect" />

            @LcHelpers.GetValidationScripts()
            <script type="text/javascript">
                $(document).ready(function () {
                    if (window.location.hash) {
                        var log = $('form.login');
                        var act = $('form.login').attr('action');
                        if (/\?/.test(act))
                            log.attr('action', act + "&HASH=" + window.location.hash.substring(1));
                        else
                            log.attr('action', act + "?HASH=" + window.location.hash.substring(1));
                    }
                    $('#loginBox [autofocus]').focus();
                });
            </script>

            <fieldset>
                <legend>Log in to Your Account</legend>
                <ul>
                    <li class="username">
                        <label for="username" autofocus @if(!ModelState.IsValidField("username")){<text>class="error-label"</text>}>E-mail address:</label>
                        <input type="text" id="username" class="@(ModelState.IsValidField("Ausername") ? "" : "input-validation-error")" name="username" value="@Request["username"]" title="Username" @Validation.GetHtml("username")/>
                        @* Write any username validation errors to the page *@
                        @Html.ValidationMessage("username")
                    </li>
                    <li class="password">
                        <label for="password" @if(!ModelState.IsValidField("password")){<text>class="error-label"</text>}>Password:</label>
                        <input type="password" id="password" class="@(ModelState.IsValidField("Apassword") ? "" : "input-validation-error")" name="password" title="Password" @Validation.GetHtml("password")/>
                        @* Write any password validation errors to the page *@
                        @Html.ValidationMessage("password")
                    </li>
                    <li class="remember-me">
                        <input type="checkbox" id="rememberMe" name="rememberMe" value="true" title="Remember Me" @if (Request["rememberMe"].AsBool()) {<text>checked="checked"</text>} />
                        <label class="checkbox" for="rememberMe">Remember me next time</label>
                    </li>
                    <li class="actions">
                        <button type="submit" class="main-action">Login</button>
                    </li>
                </ul>
            </fieldset>
        </form>
        <p class="choice-or">or</p>
        <div class="social choice-option">
            @RenderPage("_FacebookConnectButton.cshtml", new { Redirect = redirect } )
        </div>
        @if(showTools){
        <div class="account-tools">
            <a class="forgot-password" href="@(LcUrl.LangPath)Account/ForgotPassword/">Forgot password?</a>
            <a class="register" href="@(LcUrl.LangPath)Account/Register/?Redirect=@Uri.EscapeDataString(redirect ?? "")">Need an account?</a>
        </div>
        }
    </section>
</article>