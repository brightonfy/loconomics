@using WebMatrix.WebData;
@using System.Text.RegularExpressions;
@{
    LcHelpers.SecurePage();
    
    Page.Title = "Make your life better!";
    
    /*
     * Selecting page to render dynamically
     */
    var u = LcData.UserInfo.GetUserRow();
    var isInOnboarding = false;
    var page = UrlData[0].ToLower();
    var fileToRender = "";
    
    if (String.IsNullOrEmpty(page)) {
        page = "default";
    }

    var pages = new List<string> {
        "default", "welcome", "availability", "promote", "your-work", "about-you",
        "payments", "privacy", "messages", "todos", "membership"
    };
    if (pages.Contains(page)) {

        isInOnboarding = checkOnboardingPage(u, page);
        
        fileToRender = LcUrl.RenderLangPath + "$dashboard/$" + page + ".cshtml";
        //// Set menu option selected
        //PageData["menu-item"] = page;
    } else {
        string folder = "$dashboard/";
        string file =  LcHelpers.JoinNotEmptyStrings("/", UrlData.ToArray<string>()) + ".cshtml";
        if (File.Exists(Server.MapPath(LcUrl.RenderLangPath + folder + file))) {
            if (Regex.IsMatch(file, @"\/\$") || file.StartsWith("$") || file == "AboutYou/ChangePhoto.cshtml" || file == "YourWork/UploadPhoto.cshtml") {
                @RenderPage(LcUrl.RenderLangPath + folder + file);
                return;
            } else {
                fileToRender = LcUrl.RenderLangPath + folder + file;
            }
        } else {
            throw new HttpException(404, "Page not found");
        }
    }
    
    // Only apply page layout after analizy url params (to avoid partial pages to use full layout)
    Layout = LcUrl.RenderLangPath + "_SiteLayout.cshtml";
    LcAssets.AddStyle(LcUrl.AppPath + "Styles/dashboard", !LcHelpers.InDev);
    LcAssets.AddScript(LcUrl.AppPath + "Scripts/dashboard", !LcHelpers.InDev);
   
    // Some layout configurations
    var baseUrl = LcUrl.LangPath + "dashboard/";
    PageData["BodyClass"] = "Dashboard";
    
    // SelectedPage: use page as value, changing default by dashboard.
    var selectedPage = page == "default" ? "dashboard" : page;
    
    PageData["ShowWelcomeHeader"] = isInOnboarding;
}
@functions {
    bool checkOnboardingPage(dynamic u, string page){
        var onboardingStep = (string)u.OnboardingStep;

        var isInOnboarding = LcData.OnboardingSteps.ContainsKey(onboardingStep ?? "");
        
        // If in onboarding, we redirect to the current step (last reached by the user)
        // if this page requested is not in the onboarding steps or is further in the
        // list:
        if (isInOnboarding &&
            page != onboardingStep)
        {
            var thisPageIndex = LcData.OnboardingSteps.ContainsKey(page) ? LcData.OnboardingSteps[page].Index : 999;
            var currentIndex = LcData.OnboardingSteps[onboardingStep].Index;
            // If is not the welcome step (0) and is a greater step from current, go the the current one:
            if (currentIndex > 0 && thisPageIndex > currentIndex) {
                Response.Redirect(LcUrl.LangPath + "dashboard/" + onboardingStep + "/");
            }
            // If is welcome step (0) and is a greater than the 1 first, go to the current (welcome)
            // (we explicitely let the page:1 to let it begin the process)
            else if (currentIndex == 0 && thisPageIndex > 1) {
                Response.Redirect(LcUrl.LangPath + "dashboard/" + onboardingStep + "/");
            }
        }
        
        return isInOnboarding;
    }
}

<div id="container" class="DashboardSection changes-notification-enabled js-changesNotificationEnabled clearfix">
    
    @RenderPage("$dashboard/_$Sidebar.cshtml", new {
        BaseUrl = baseUrl,
        ActiveProfile = !isInOnboarding,
        SelectedPage = selectedPage
    })

    @if (isInOnboarding)
    {
        @RenderPage("$dashboard/_$OnboardingSteps.cshtml", new {
            BaseUrl = baseUrl,
            Step = selectedPage
        })
    }

    <div id="main" class="DashboardSection-page">
        @RenderPage(fileToRender, new { IsInOnboarding = isInOnboarding })        
    </div><!-- #main -->

</div>