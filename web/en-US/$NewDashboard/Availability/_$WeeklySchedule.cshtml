@using Braintree;
@using WebMatrix.Data;
@{
    LcHelpers.ProviderPage();
    
    var PageState = PageData["PageState"] ?? ModelState;
    var doReturn = PageState == ModelState;

    var userId = WebSecurity.CurrentUserId;
    
    // Data
    
    if (IsPost && Validation.IsValid()) {
        // Json.Decode doesn't work as expected with Arrays, getting and empty object instead, 
        // breaking the code.
        //var workhours = Json.Decode(Request["workhours"]);
        dynamic workhours = Newtonsoft.Json.JsonConvert.DeserializeObject(Request["workhours"]);

        if (workhours.status != "available") {
            ModelState.AddFormError("Work hours availability information: status not allowed");
        }

        if (PageState.IsValid) {
            
            LcCalendar.SaveWorkHoursJsonData(userId, workhours);
                
            // Testing the alert
            using (var db = Database.Open("sqlloco")) {
                db.Execute("EXEC TestAlertAvailability @0", userId);
            }
            
            if (doReturn) {
                LcHelpers.ReturnJsonResult(5, LcRessources.ShortDataSaved);
            }
        }
    }
}
<fieldset class="DashboardWeeklySchedule">

    <label class="DashboardWeeklySchedule-allTime"><input type="checkbox" name="alltime" value="True" @LcHelpers.IsChecked(true, Request["alltime"]) /> All days/times</label>

    @RenderPage(LcUrl.LangPath + "Calendar/$Weekly.cshtml", new { User = userId, Type = "workHours" })

    <fieldset>
        <legend>I require:</legend>


    </fieldset>

</fieldset>