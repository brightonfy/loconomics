@*
    Allow edit or create an usereducation record.
 *@
@using WebMatrix.Data;
@{
    LcHelpers.ProviderPage();
    
    var isSubform = PageData["IsSubform"] ?? Request["subform"].AsBool();

    var u = LcData.UserInfo.GetUserRow();
    var educationID = Request["EducationID"].AsInt();
    var idprefix = "editEducation" + educationID.ToString();

    if (Request["Action"] == "delete") {

        // Delete
        using(var db = Database.Open("sqlloco")) {
            db.Execute(@"
                DELETE FROM UserEducation
                WHERE UserEducationID = @0
                      AND UserID = @1

                -- ReCheck Alert
                EXEC TestAlertEducation @1
            ", educationID, u.UserID);
        }
        LcHelpers.ReturnJsonResult(0, "Deleted");
        // ENDS page execution
    }

    // Validation rules
    Validation.RequireField("institution", LcRessources.RequiredField("School"));
    Validation.Add("startyear", Validator.Range(1900, 2900, "Start year is invalid, please re-enter"));
    Validation.Add("endyear", Validator.Range(1900, 2900, "End year is invalid, please re-enter"));

    // Save posted data
    if (IsPost && Validation.IsValid()) {
        var institution = (Request["institution"] ?? "").Trim();
        
        if (String.IsNullOrEmpty(institution)) {
            ModelState.AddError("institution", LcRessources.RequiredField("School"));
        }
        
        if (ModelState.IsValid) {
            
            using (var db = Database.Open("sqlloco")) {
                // Gets the ID for 'institution', creating a new one automatically or from
                // existing one.
                int institutionID = db.QueryValue(@"
                    DECLARE @id int
                    SELECT @id = InstitutionID
                    FROM    Institution
                    WHERE   InstitutionName like @0

                    IF @id is null BEGIN
                        INSERT INTO Institution (
                            InstitutionName
                            ,StateProvinceID
                            ,CountryID
                            ,CreatedDate
                            ,UpdatedDate
                            ,ModifiedBy
                        ) VALUES (
                            @0
                            ,@1
                            ,@2
                            ,getdate()
                            ,getdate()
                            ,'UserID' + Cast(@3 as varchar)
                        )

                        SET @id = @@IDENTITY
                    END

                    SELECT @id As ID
                ", institution,
                u.StateProvinceID,
                u.CountryID,
                u.UserID);

                // Save it
                db.Execute(@"
                    IF EXISTS (SELECT UserEducationID FROM UserEducation WHERE UserEducationID = @0 AND UserID = @1)
                        UPDATE UserEducation SET
                            InstitutionID = @2
                            ,DegreeCertificate = @3
                            ,FieldOfStudy = @4
                            ,FromYearAttended = @5
                            ,ToYearAttended = @6
                            ,Active = 1
                            ,ModifiedDate = getdate()
                            ,ModifiedBy = 'UserID:' + Cast(@1 as varchar)
                        WHERE UserEducationID = @0 AND UserID = @1
                    ELSE
                        INSERT INTO UserEducation (
                            UserID
                            ,InstitutionID
                            ,DegreeCertificate
                            ,FieldOfStudy
                            ,FromYearAttended
                            ,ToYearAttended
                            ,CreatedDate
                            ,ModifiedDate
                            ,ModifiedBy
                            ,Active
                        ) VALUES (
                            @1
                            ,@2
                            ,@3
                            ,@4
                            ,@5
                            ,@6
                            ,getdate()
                            ,getdate()
                            ,'UserID:' + Cast(@1 as varchar)
                            ,1
                        )

                    -- ReCheck Alert
                    EXEC TestAlertEducation @1
                ", educationID, u.UserID,
                    institutionID,
                    Request["degree"],
                    Request["fieldofstudy"],
                    Request["startyear"] == "" ? null : (int?)Request["startyear"].AsInt(),
                    Request["endyear"] == "" ? null : (int?)Request["endyear"].AsInt()
                );
            }

            // All was fine, AJAX-JSON response
            if (ModelState.IsValid) {
                LcHelpers.ReturnJsonResult(5, LcRessources.ShortDataSaved);
            }
        }
    }
    
    // Load the education record
    dynamic education = null;
    using (var db = Database.Open("sqlloco")) {
        education = db.QuerySingle(LcData.sqlSelectFromUserEducation +
        @"
            WHERE   UserEducationID = @0
        ", educationID);
    }
    
    var formAction = LcUrl.LangPath + "$NewDashboard/AboutYou/$EducationEdit/?EducationID=" + educationID;
}
@helper PrintYears(string name, object val) {
    <select name="@name" @Validation.GetHtml(name)>
        <option value="">-</option>
        @for(int i = DateTime.Today.Year; i >= 1900; i--) {
            <option @LcHelpers.IsSelected(i, val) value="@i">@i</option>
        }
    </select>
}

@if (isSubform) {
    @Html.Raw("<")<text>fieldset data-ajax-fieldset-action="@(formAction)&subform=true" class="crudl-form ajax ajax-box"></text>
} else {
    @Html.Raw("<")<text>form action="@formAction" method="post" class="crudl-form ajax ajax-box" id="@idprefix"></text>
}

    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)

    <ul>
        <li class="institution">
            <label for="@(idprefix)-institution">School</label>
            <input id="@(idprefix)-institution" type="text" name="institution" value="@(Request["institution"] ?? (education == null ? "" : education.InstitutionName))"
                 @Validation.GetHtml("institution") />
        </li>
        <li class="degree">
            <label for="@(idprefix)-degree">Degree/Certificate</label>
            <input id="@(idprefix)-degree" type="text" name="degree" value="@(Request["degree"] ?? (education == null ? "" : education.DegreeCertificate))"
                @Validation.GetHtml("degree") />
        </li>
        <li class="fieldofstudy">
            <label for="@(idprefix)-fieldofstudy">Field of study</label>
            <input id="@(idprefix)-fieldofstudy" type="text" name="fieldofstudy" value="@(Request["fieldofstudy"] ?? (education == null ? "" : education.FieldOfStudy))"
                @Validation.GetHtml("fieldofstudy") />
        </li>
        <li class="years">
            <label>Years attended</label>
            @PrintYears("startyear", Request["startyear"] ?? (education == null ? 0 : education.FromYearAttended))
            -
            @PrintYears("endyear", Request["endyear"] ?? (education == null ? 0 : education.ToYearAttended))
        </li>
    </ul>

    <div class="actions">
        <button type="button" class="button cancel-action crudl-cancel">Cancel</button>
        <button class="button main-action crudl-save @(isSubform ? "ajax-fieldset-submit" : "")">Save</button>
    </div>

    <script type="text/javascript">
        jQuery(function ($) {
            $('[name=institution]').autocomplete({
                source: LcUrl.JsonPath + 'GetInstitutions/Autocomplete/',
                autoFocus: false,
                delay: 200,
                minLength: 5
            });
        });
    </script>

@if(isSubform) {
    @Html.Raw("</fieldset>")
} else {
    @Html.Raw("</form>")
}