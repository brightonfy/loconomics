@using System.Linq;
@using System.Web;
@using System.Web.WebPages;
@using System.Web.WebPages.Html;
@using System.Collections;
@using System.Collections.Generic;
@*
    Getting User Upcoming Appointments
*@
@using WebMatrix.Data;
@{   
    dynamic result = new Dictionary<string, dynamic>();
    
    try {
        
        switch (Request.HttpMethod) {
            case "GET":
                
                throw new HttpException(405, "GET is not allowed");

            case "POST":
 
                result = doPost();
                break;
                
            case "PUT":
                
                throw new HttpException(405, "PUT is not allowed");
                
            case "DELETE":
                
                throw new HttpException(405, "DELETE is not allowed");
        }
        
    } catch(HttpException http) {
        
        Response.StatusCode = http.GetHttpCode();
        
        result["errorMessage"] = http.Message;
        if (!ModelState.IsValid) {
            result["errorSource"] = "validation";
            result["errors"] = ModelState.Errors();
        }
        
    } catch(Exception ex){

        result["errorMessage"] = ex.Message;
    }
    
    // Output data
    LcHelpers.ReturnJson(result);
}
@functions {
    dynamic doPost() {
        
        return LcAuthHelper.Login(this);
    }
}