@using WebMatrix.Data;
@{
    LcMessaging.SecureTemplate();
    
    Layout = LcUrl.RenderLangPath + "_EmailLayout.cshtml";
    Page.Title = "Loconomics.com - Provider Payment Account Notification";
    
    var providerID = Request["ProviderID"].AsInt();
    
    Braintree.WebhookNotification notification = null;
    var account = LcData.GetProviderPaymentAccount(providerID);
    
    if (account != null) {    
        var gw = LcPayment.NewBraintreeGateway();
            
        try {
            notification = gw.WebhookNotification.Parse(account.bt_signature, account.bt_payload);
        } catch {}
    }
    
    // Data for the EmailLayout:
    PageData["messageTitle"] = "Provider Payment Account Notification";
    // Create URL:
    PageData["viewOnSiteUrl"] = LcUrl.SiteUrl + LcData.UserInfo.GetUserPublicURL(providerID);
}
<div>
    <ul>
        <li><strong>Provider User ID:</strong> @account.ProviderUserID</li>
        <li><strong>Provider ID at Braintree (MerchantAccountId):</strong> @account.MerchantAccountID</li>
        <li><strong>Status:</strong> @account.Status</li>
        <li><strong>Braintree Message:</strong> @account.Message</li>
    </ul>
    @if (!String.IsNullOrEmpty(account.Message) || (notification != null && notification.Errors.Count > 0))
    {
    <p>Error(s) communicated by Braintree:</p>
    <ul>
        @if (!string.IsNullOrEmpty(account.Message)) {
            <li>@account.Message</li>
        }
        @if (notification != null) {
            foreach(var err in notification.Errors.All()) {
                <li><span>(@(err.Code))</span> @err.Message</li>
            }
        }
    </ul>
    }
</div>