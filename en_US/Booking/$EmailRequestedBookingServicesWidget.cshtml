@using WebMatrix.Data;
@{
    dynamic booking = PageData[0];
    string myUserType = PageData[1];
    
    if (booking == null || booking["BookingRequestID"] == null) {
        throw new Exception("No data to bound RequestedBookingServices");
    }

    var getServicesIncluded = @"
        SELECT  S.Name
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                ServiceAttribute As S
                  ON S.ServiceAttributeID = P.ServiceAttributeID
                    -- Avoid show service attributes related to options
                    AND P.PricingOptionID = 0
        WHERE   P.PricingEstimateID = @0
                 AND S.LanguageID = @1 AND S.CountryId = @2
    ";
    var getPricingVars = @"
        SELECT  V.CustomerPricingVariableDisplayText As Name, P.CustomerPricingDataInput As Quantity,
                P.TimeEstimate As Time, P.PriceEstimate As Price
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                PricingVariable As V
                  ON V.PricingVariableID = P.PricingVariableID
        WHERE   P.PricingEstimateID = @0
                 AND V.LanguageID = @1 AND V.CountryId = @2
    ";
    var getPricingOptions = @"
        SELECT  V.CustomerPricingOptionDisplayText As Name, P.CustomerPricingDataInput As Quantity,
                P.TimeEstimate As Time, P.PriceEstimate As Price
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                PricingOption As V
                  ON V.PricingOptionID = P.PricingOptionID
        WHERE   P.PricingEstimateID = @0
                 AND V.LanguageID = @1 AND V.CountryId = @2
    ";
    var getPackages = @"
        SELECT  PP.ProviderPackageID
                ,PP.ProviderPackageName As Name
                ,PP.ProviderPackageDescription As Description
                ,PP.ProviderPackagePrice As Price
                ,PP.ProviderPackageServiceDuration As ServiceDuration
                ,PP.FirstTimeClientsOnly
                ,PP.NumberOfSessions
                ,P.PriceEstimate
                ,P.CustomerPricingDataInput
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                ProviderPackage As PP
                  ON PP.ProviderPackageID = P.ProviderPackageID
        WHERE   P.PricingEstimateID = @0
                    AND 
                PP.LanguageID = @1 AND PP.CountryID = @2
    ";
     
    dynamic services = null, pvars = null, poptions = null, packages = null;
    using (var db = Database.Open("sqlloco")) {         
        services    = db.Query(getServicesIncluded, booking.PricingEstimateID, LcData.GetCurrentLanguageID(), LcData.GetCurrentCountryID());
        pvars       = db.Query(getPricingVars, booking.PricingEstimateID, LcData.GetCurrentLanguageID(), LcData.GetCurrentCountryID());
        poptions    = db.Query(getPricingOptions, booking.PricingEstimateID, LcData.GetCurrentLanguageID(), LcData.GetCurrentCountryID());
        packages    = db.Query(getPackages, booking.PricingEstimateID, LcData.GetCurrentLanguageID(), LcData.GetCurrentCountryID());
    }
     
    // auxiliar vars in view generation
    int i = 0;
    string iprint = "";
}
@helper printQuantityIfNeeded(string q){
    decimal quantity = 0;
    decimal.TryParse(q, out quantity);
    if (quantity > 1) {
        @("(" + quantity.ToString() + " items)")
    }
}
    <div style="@LcEmailTemplateHelper.StyleMessageSection()">
        @if (services != null && services.Count > 0)
        {
        <h5 @LcEmailTemplateHelper.StyleH5("font-size: 1.1em;margin: 8px 0 0;color: #6c6c6c;")>Services to be performed:</h5>
        <ul  @LcEmailTemplateHelper.StyleUlOl()>
            @foreach (var service in services)
            {
                <li style="margin-left: 20px;width: 205px;display: inline-block;">@service.Name</li>
            }
        </ul>
        }
        @if (packages != null && packages.Count > 0)
        {
            <h5 @LcEmailTemplateHelper.StyleH5("font-size: 1.1em;margin: 8px 0 0;color: #6c6c6c;")>Packages:</h5>
            <table border="0" style="border:none;width:100%">
                @foreach (var pak in packages)
                {
                <tr>
                    <td style="@LcEmailTemplateHelper.StylePricingSummaryConcept()">
                        @pak.Name (@pak.NumberOfSessions session/s, @pak.ServiceDuration minutes each)
                        @{
                            var quantity = ((string)pak.CustomerPricingDataInput).AsInt();
                        }
                        @if (quantity > 1)
                        {
                            <span>(@quantity packages * @pak.Price.ToString("c") each)</span>
                        }
                    </td>
                    <td style="@LcEmailTemplateHelper.StylePricingSummaryPrice()">
                        @pak.PriceEstimate.ToString("c")
                    </td>
                </tr>
                }
            </table>
        }
        
        <h5 @LcEmailTemplateHelper.StyleH5("font-size: 1.1em;margin: 8px 0 0;color: #6c6c6c;")>Special instructions:</h5>
        <p @LcEmailTemplateHelper.StyleResetP()>@booking.SpecialRequests</p>

        <h5 @LcEmailTemplateHelper.StyleH5("font-size: 1.1em;margin: 8px 0 0;color: #6c6c6c;")>Additional services and pricing summary:</h5>
        <table border="0" style="border:none;width:100%">
            @foreach (var pitem in poptions)
            {
            <tr>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryConcept()">@pitem.Name @printQuantityIfNeeded(pitem.Quantity)</td>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryPrice()">@pitem.Price.ToString("c")</td>
            </tr>
            }
            @if (pvars != null && pvars.Count > 0)
            {
            <tr>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryConcept()">
                    @{
                        i = 0;
                        iprint = "";
                        decimal varsTime = 0;
                        foreach (var pitem in pvars)
                        {
                            if (i > 0)
                            {
                                iprint = "; ";
                            }
                            i++;
                                        @(iprint + pitem.Name + " " + @pitem.Quantity)
                            varsTime += pitem.Time;
                        }
                        @(" (" + booking.ServiceDuration.ToString() + " hours @ " + booking.HourlyPrice.ToString("c") + "/hr)")
                    }
                </td>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryPrice()">@((varsTime * booking.HourlyPrice).ToString("c"))</td>
            </tr>
            }
            <tr>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryConcept()">Locnomics service fee (includes credit card processing costs)</td>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryPrice()">@booking.FeePrice.ToString("c")</td>
            </tr>
            <tr style="@LcEmailTemplateHelper.StylePricingSummaryTotal()">
                <td style="@LcEmailTemplateHelper.StylePricingSummaryConcept()">
                @switch(myUserType) {
                    case "provider":
                        <text>
                        Payment (direct deposit scheduled for @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                        to checking account @("****" + LcEncryptor.Decrypt(booking.PaymentProviderAccountLastDigits)))
                        </text>
                    break;
                    case "customer":
                        <text>
                        Payment (scheduled for @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                        from credit card @("****" + LcEncryptor.Decrypt(booking.PaymentCustomerCardLastDigits)))
                        </text>
                    break;
                    default:
                        <text>
                        Total to be payed on @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                        </text>
                    break;
                }
                </td>
                <td style="@LcEmailTemplateHelper.StylePricingSummaryPrice()">@booking.TotalPrice.ToString("c")</td>
            </tr>
        </table>

        <h5 @LcEmailTemplateHelper.StyleH5("font-size: 1.1em;margin: 8px 0 0;color: #6c6c6c;")>Location and contact information:</h5>
        <div>
            @*<p>
            x.y miles away (z1 minutes driving time, z2 minutes public tranport)
            </p>*@
            <p>
            Full location and contact information will be shown after you accept a time above.
            </p>
        </div>
    </div>
