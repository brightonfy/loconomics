@using WebMatrix.Data;
@{
    var p = PageData["providerrow"] ?? DashboardFunctions.GetUserRow(Request["providerid"].AsInt());
    var c = PageData["customerrow"] ?? DashboardFunctions.GetUserRow();
    var pos = PageData["positionrow"] ?? DashboardFunctions.GetUserPos(Request["providerid"].AsInt(),
        Request["positionid"].AsInt());
    //var customerid = c.UserID;
    
    if (p == null || c == null || pos == null){
        var inputdataerrormessage = "No enought input data to show results";
        if (IsPost){
            CommonHelpers.ReturnJsonError(-1, inputdataerrormessage);
        }else{
            throw new Exception(inputdataerrormessage);
        }
    }
  
    var sqlattribute = "exec GetServiceAttributes @0,@1,1,1";
    
    dynamic services, serviceswithfees;
    
    using (var db = Database.Open("sqlloco")){
        // Getting the 'Services routinely included' (cat=2)
        services = db.Query(sqlattribute, pos.PositionID, 2);
        
        // Getting the 'Services upon request' (cat=3)
        serviceswithfees = db.Query(sqlattribute, pos.PositionID, 3);
    }
    
    // TODO Add validation rules or do manual validation (we have dynamic fields)
    
    if (IsPost){
        if (ModelState.IsValid){
            // TODO Process form data and insert into database
            // Insert the data or update the existent
            
            
            // OK: All was successfull saved and next wizard step require to be loaded, but
            //  instead return a JSON success code, we must continue processing the page
            //  to load the Wizard Component and to let him save their data too, or return
            //  html with errors.
            //  If Wizard save sucessfull the data, it will call something like:
            //CommonHelpers.ReturnJsonResult(0, null);
        }
    }
}

<p class="info">
    Please review the items below and be as accurate as possible to help your provider do a great job.
    The price and time require are estimates only and may change depending on actual work performed.   
</p>
<form action="@(UrlUtil.LangPath)Booking/$Services/" method="post" class="services" id="booking-services">
    <input type="hidden" name="providerid" value="@p.UserID"/>
    <input type="hidden" name="positionid" value="@pos.PositionID"/>
    <fieldset class="select-services">
        <legend>Select the services you'd like performed:</legend>
        <fieldset class="attribute-category attribute-category-1">
            <legend>Services regulary included:</legend>
            <ul>
                @foreach(var att in services){
                    <li><label><input type="checkbox" name="booking-services-attribute-cat1-@att.ServiceAttributeID"/>@att.ServiceAttribute</label></li>
                }
            </ul>
        </fieldset>
        <fieldset class="attribute-category attribute-category-2">
            <legend>Services upon request:</legend>
            <ul>
                @foreach(var att in serviceswithfees){
                    <li><label><input type="checkbox" name="booking-services-attribute-cat2-@att.ServiceAttributeID"/>@att.ServiceAttribute</label></li>
                }
            </ul>
        </fieldset>
    </fieldset>
    <fieldset class="special-instructions">
        <legend>Please include any special instructions to help your provider do a great job:</legend>
        <textarea name="booking-services-special-instructions">I would like mints on my pillows, thanks!</textarea>
    </fieldset>
    @*RenderPage("_ExamplePricingWizard.cshtml")*@
    @RenderPage(UrlUtil.LangPath + "PricingWizard/$BookingFieldset.cshtml")
    <fieldset class="actions">
        <button data-wizard-next-step="#schedule" class="button schedule-service-button next main-action">Schedule service</button>
    </fieldset>
</form>