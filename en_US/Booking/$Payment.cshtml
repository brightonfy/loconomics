@{
    var p = PageData["providerrow"] ?? DashboardFunctions.GetUserRow(Request["providerid"].AsInt());
    var c = PageData["customerrow"] ?? DashboardFunctions.GetUserRow();
    var pos = PageData["positionrow"] ?? DashboardFunctions.GetUserPos(Request["providerid"].AsInt(),
        Request["positionid"].AsInt());
    //var customerid = c.UserID;
    
    if (p == null || c == null || pos == null){
        var inputdataerrormessage = "No enought input data to show results";
        if (IsPost){
            CommonHelpers.ReturnJsonError(-1, inputdataerrormessage);
        }else{
            throw new Exception(inputdataerrormessage);
        }
    }
    
    // Check if is a valid booking process (session not expired or erro at first step)
    var bookingRequestID = Session["BookingRequestID"] is int ? (int)Session["BookingRequestID"] : 0;
    if (bookingRequestID <= 0) {
        /* Several options to do here
            * - Show error (strange message for user, need restart again introducing first his login)
            * X Silently redirect to start booking again
            * - Request login via ajax, re-send form data, looking in the database for a 'timeouted'
            *   bookingrequest for this customer at this provider and position, recover it to continue
            *   processing the form (if there is no bookingrequestid again, do second option).
            */
        //ModelState.AddFormError("Booking request is not valid, maybe the session time expired");
        CommonHelpers.ReturnJsonResult(1, 
            UrlUtil.LangPath + "Booking/?ProviderID=" + p.UserID.ToString() +
            "&PositionID=" + pos.PositionID.ToString());
    }

    // TODO Add validation rules
    
    if (IsPost && Validation.IsValid()){
        // TODO Add manual validation checks and prepare data
        
        if (ModelState.IsValid){
            // TODO Insert data into the database
            
            using (var db = Database.Open("sqlloco")) {
                try {
                    
                    /*
                     * Send customer payment data to Braintree, 
                     * using our UserID as identifier.
                     */
                    
                    /*
                     * Create, save and send Message
                     */
                    
                    
                } catch (Exception ex) {
                    CommonHelpers.ReturnJsonError(-1, ex.Message);
                }
            }
            // Return OK result
            CommonHelpers.ReturnJsonResult(0, null);
        }
    }
    
    /*
     * Get Data
     */
    var getBookingRequest = @"
        SELECT  TOP 1
                B.PricingEstimateID,
                B.SpecialRequests, B.PricingEstimateID,
                L.AddressLine1, L.AddressLine2, L.City, L.PostalCodeID, L.CountryID,
                SP.StateProvinceName, SP.StateProvinceCode,
                E1.StartTime As PreferredDateStart, E1.EndTime As PreferredDateEnd,
                E2.StartTime As AlternativeDate1Start, E2.EndTime As AlternativeDate1End,
                E3.StartTime As AlternativeDate2Start, E3.EndTime As AlternativeDate2End,
                P.ServiceDuration, P.HourlyPrice, P.SubtotalPrice, P.FeePrice, P.TotalPrice
        FROM    BookingRequest As B
                 INNER JOIN
                ServiceAddress As L
                  ON B.ServiceAddressID = L.ServiceAddressID
                 INNER JOIN
                CalendarEvents As E1
                  ON E1.ID = B.PreferredDateID
                 INNER JOIN
                CalendarEvents As E2
                  ON E2.ID = B.AlternativeDate1ID
                 INNER JOIN
                CalendarEvents As E3
                  ON E3.ID = B.AlternativeDate2ID
                 INNER JOIN
                PricingEstimate As P
                  ON P.PricingEstimateID = B.PricingEstimateID
                 INNER JOIN
                StateProvince As SP
                  ON SP.StateProvinceID = L.StateProvinceID
        WHERE   B.CustomerUserID = @0 AND B.ProviderUserID = @1
                 AND B.PositionID = @2 AND B.BookingRequestID = @3
    ";
     var getServicesIncluded = @"
        SELECT  S.Name
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                ServiceAttribute As S
                  ON S.ServiceAttributeID = P.ServiceAttributeID
        WHERE   P.PricingEstimateID = @0
                 AND S.CountryId = @1 AND S.LanguageID = @2
    ";
    var getPricingVars = @"
        SELECT  V.CustomerPricingVariableDisplayText As Name, P.CustomerPricingDataInput As Quantity
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                PricingVariable As V
                  ON V.PricingVariableID = P.PricingVariableID
        WHERE   P.PricingEstimateID = @0
                 AND V.CountryId = @1 AND V.LanguageID = @2
    ";
    var getPricingOptions = @"
        SELECT  V.CustomerPricingOptionDisplayText As Name, P.CustomerPricingDataInput As Quantity
        FROM    PricingEstimateDetail As P
                 INNER JOIN
                PricingOption As V
                  ON V.PricingOptionID = P.PricingOptionID
        WHERE   P.PricingEstimateID = @0
                 AND V.CountryId = @1 AND V.LanguageID = @2
    ";
    dynamic summary, services, pvars, poptions;
    using (var db = Database.Open("sqlloco")) {
        summary     = db.QuerySingle(getBookingRequest, c.UserID, p.UserID, pos.PositionID, bookingRequestID);
        services    = db.Query(getServicesIncluded, summary.PricingEstimateID, 1, 1);
        pvars       = db.Query(getPricingVars, summary.PricingEstimateID, 1, 1);
        poptions    = db.Query(getPricingOptions, summary.PricingEstimateID, 1, 1);
    }
    // auxiliar vars in view generation
    int i = 0;
    string iprint = "";
}
<p class="info">
    Please review the summary and provide your payment details below. You will be charged immediately.  We withhold payment to your provider until after the services are performed for your safety.
</p>
<form action="@(UrlUtil.LangPath)Booking/$Payment/" method="post" class="payment" id="booking-payment">
    <input type="hidden" name="providerid" value="@p.UserID"/>
    <input type="hidden" name="positionid" value="@pos.PositionID"/>
    @CommonHelpers.GetValidationScripts()
    @CommonHelpers.SetupStarRatingPlugin()
    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
    <fieldset class="billing-info box">
        <legend>Billing information:</legend>
        <ul>
            <li class="name-on-card">
                <label>Name as on card:<input type="text" name="name-on-card" @Validation.GetHtml("name-on-card")/></label>
            </li>
            <li class="street-address-line-1">
                <label>Street address line 1:<input type="text" name="street-address-line-1" @Validation.GetHtml("street-address-line-1")/></label>
            </li>
            <li class="street-address-line-2">
                <label>Street address line 2:<input type="text" name="street-address-line-2" @Validation.GetHtml("street-address-line-2")/></label>
            </li>
            <li class="city">
                <label>City:<input type="text" name="city" @Validation.GetHtml("city")/></label>
            </li>
            <!-- Collapsed next elements code to avoid white spaces that create excesive width on IE -->
            <li class="state"><label>State:<select name="state" @Validation.GetHtml("state")>
                        <option value="ca">California</option>
                    </select></label></li>
            <li class="zip">
                <label>Zip Code:<input type="text" name="zip" @Validation.GetHtml("zip")/></label>
            </li>
            <li class="card-number">
                <label>Card number:<input type="text" name="card-number" @Validation.GetHtml("card-number")/></label>
            </li>
            <!-- Collapsed next elements code to avoid white spaces that create excesive width on IE -->
            <li class="card-exp"><label>Exp:<select name="card-exp-month" @Validation.GetHtml("card-exp-month")>
                        <option value="4">Apr</option>
                    </select></label><select name="card-exp-year">
                        <option value="2014">2014</option>
                    </select></li>
            <li class="save-to-my-payments">
                <label class="save"><input type="checkbox" name="save-payment"/>Save</label>
                <label class="save-as">payment details as:<input type="text" name="save-payment-as" @Validation.GetHtml("save-payment-as")/></label>
            </li>
        </ul>
    </fieldset>
    <fieldset class="your-provider box">
        <legend>Your provider:</legend>
        <h6 class="provider-and-position"><span class="provider-name">@p.FirstName</span>-<span class="provider-position">@pos.PositionSingular</span></h6>
        <img class="avatar provider-avatar" alt="Provider photo" src="@Href(UrlUtil.LangPath + "Profile/Photo/?UserID=" + p.UserID)"/>      
        @RenderPage(UrlUtil.LangPath + "Reviews/$UserRatingSummaryWidget.cshtml", new { ReviewedID = p.UserID, PositionID = pos.PositionID })
        <div class="provider-features-lists">
            <div class="years-experience">
                <h5>Years experience:</h5>
                <ul><li>0.5 years</li></ul>
            </div>
            <div class="licenses">
                <h5>Licenses:</h5>
                <ul><li>CA License</li><li>HSA certified</li></ul>
            </div>
            <div class="experience-level">
                <h5>Experience level:</h5>
                <ul><li>Expert</li></ul>
            </div>
        </div>
    </fieldset>
    <fieldset class="services-summary box">
        <legend>Summary of services to be performed:</legend>
        <ul>
            <li class="services-list">
                <strong>Services:</strong>
                @*Sweeping, mopping, vacuuming, dusting, bed-making, dishes, trash emptying, toilets*@
                @{
                    i = 0;
                    iprint = "";
                    foreach (var service in services) {
                        if (i > 0) {
                            iprint = ", ";
                        }
                        i++;
                        @(iprint + service.Name)
                    }
                }
            </li>
            <li class="special-instructions">
                <strong>Special instructions:</strong>
                @summary.SpecialRequests
            </li>
            <li class="location">
                <strong>Location:</strong>
                @*187 Bocana St., San Francisco, CA 94110*@
                @summary.AddressLine1 @(summary.AddressLine2), @(summary.City), @summary.StateProvinceCode @summary.PostalCodeID
            </li>
            <li class="details">
                <strong>Details:</strong>
                @*Home with 3 bedrooms, 2 bathrooms, 1 kitchen, 2 living areas, and has cats.*@
                @{
                    i = 0;
                    iprint = "";
                    foreach (var pitem in pvars) {
                        if (i > 0) {
                            iprint = "; ";
                        }
                        i++;
                        @(iprint + pitem.Name + " " + @pitem.Quantity)
                    }
                    iprint = "";
                    if (pvars.Count > 0) {
                        iprint = "; ";
                    }
                    i = 0;
                    foreach (var pitem in poptions) {
                        if (i > 0) {
                            iprint = "; ";
                        }
                        i++;
                        @(iprint + pitem.Name + "" + @pitem.Quantity)
                    }
                 }
            </li>
        </ul>
        @*<div class="acti
                }ons">
            <button class="button edit">Edit</button>
        </div>*@
    </fieldset>
    <fieldset class="appt-time-price box">
        <legend>Appointment time and price:</legend>
        <div class="schedule">
            <h6>Ranked in order of preference:</h6>
            <ol>
                <li class="preferred-option">@*Monday, April 15th, 2012, 11:00am to 2:00pm*@
                    @(summary.PreferredDateStart.ToLongDateString()),
                    @summary.PreferredDateStart.ToShortTimeString() to
                    @summary.PreferredDateEnd.ToShortTimeString()
                </li>
                <li class="alternative-option-1">
                    @(summary.AlternativeDate1Start.ToLongDateString()),
                    @summary.AlternativeDate1Start.ToShortTimeString() to
                    @summary.AlternativeDate1End.ToShortTimeString()
                </li>
                <li class="alternative-option-2">
                    @(summary.AlternativeDate2Start.ToLongDateString()),
                    @summary.AlternativeDate2Start.ToShortTimeString() to
                    @summary.AlternativeDate2End.ToShortTimeString()
                </li>
            </ol>
        </div>
        <table class="calculation">
            <tr><th>Estimated time required:</th><td class="time-required">@summary.ServiceDuration hours</td></tr>
            <tr>
                <th><span class="time-required">@summary.ServiceDuration hours</span> @('@') <span class="hour-price">$@summary.HourlyPrice</span></th>
                <td class="subtotal-price">$@summary.SubtotalPrice</td>
            </tr>
            <tr>
                <th>Loconomics service fee:</th>
                <td class="fee-pricee">$@summary.FeePrice</td>
            </tr>
            <tr>
                <th>Total estimated price:</th>
                <td class="total-price">$@summary.TotalPrice</td>
            </tr>
        </table>
    </fieldset>
    <fieldset class="actions">
        <button data-wizard-next-step="@Href(UrlUtil.LangPath + "Dashboard/MyProviders/")" class="button complete-booking next finish main-action">Complete booking</button>
    </fieldset>
</form>
