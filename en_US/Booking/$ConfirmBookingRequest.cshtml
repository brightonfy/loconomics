@using WebMatrix.Data;
@{
    CommonHelpers.SecurePage();
    
    var u = DashboardFunctions.GetUserRow();
    var brID = Request["BookingRequestID"];
    var dateType = Request["ConfirmedDateType"];
    
    var sqlGetBookingDates = @"
        SELECT  TOP 1
                R.PreferredDateID,
                R.AlternativeDate1ID,
                R.AlternativeDate2ID
        FROM    BookingRequest As R
        WHERE   R.ProviderUserID = @0
                 AND
                R.BookingRequestID = @1
    ";
    var sqlConfirmBooking = @"
        DECLARE @BookingRequestID int, @ConfirmedDateID int
        SET @BookingRequestID = @0
        SET @ConfirmedDateID = @1

        BEGIN TRY
            BEGIN TRAN

            /*
             * Creating the Confirmed Booking Record
             */
            INSERT INTO Booking (
                BookingRequestID, ConfirmedDateID,
                BookingStatusID,
                TotalPricePaidByCustomer, TotalServiceFeesPaidByCustomer, 
                TotalPaidToProvider, TotalServiceFeesPaidByProvider, 
                PricingAdjustmentApplied,
                CreatedDate, UpdatedDate, ModifiedBy
            ) VALUES (
                @BookingRequestID, @ConfirmedDateID,
                1, --confirmed
                -- Initial price data to null
                -- (booking request prices are estimated, here only paid prices go)
                null, null, null, null,
                0, -- not applied price adjustement (now, almost)
                getdate(), getdate(), 'sys'
            )

            -- TODO: REVIEW, I think we don't need save BookingID at BookingRequest, but just for now...
            DECLARE @BookingID int
            SET @BookingID = @@Identity

            /*
             * Updating Booking Request status
             */
            UPDATE  BookingRequest
            SET     BookingRequestStatusID = 7, -- accepted
                    BookingID = @BookingID
            WHERE   BookingRequestID = @BookingRequestID

            --TODO: we will remove non needed CalendarEvents after accept one of them? If yes, we must 
            -- set to null the PreferredDateID, AlternativeDate1ID, AlternativeDate2ID at BookingRequest
            -- and remove the two unneded from CalendarEvents:
            /*
            DELETE FROM CalendarEvents
            WHERE ID IN (
                SELECT TOP 1 PreferredDateID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID AND PreferredDateID <> @ConfirmedDateID
                UNION
                SELECT TOP 1 AlternativeDate1ID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID AND AlternativeDate1ID <> @ConfirmedDateID
                UNION
                SELECT TOP 1 AlternativeDate2ID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID AND AlternativeDate2ID <> @ConfirmedDateID
            )
            */

            COMMIT TRAN

            -- We return sucessful operation (Error=0)
            SELECT 0 As Error, '' As ErrorMessage
        END TRY
        BEGIN CATCH
            IF @@TRANCOUNT > 0
                ROLLBACK TRAN
            -- We return error number and message
            SELECT ERROR_NUMBER() As Error, ERROR_MESSAGE() As ErrorMessage
        END CATCH
    ";
    
    using (var db = Database.Open("sqlloco")) {
        var dateID = 0;
        var dates = db.QuerySingle(sqlGetBookingDates, u.UserID, brID);
        switch (dateType.ToUpper()) {
            case "PREFERRED":
                dateID = dates.PreferredDateID;
                break;
            case "ALTERNATIVE1":
                dateID = dates.AlternativeDate1ID;
                break;
            case "ALTERNATIVE2":
                dateID = dates.AlternativeDate2ID;
                break;
        }
        if (dateID > 0) {
            var result = db.QuerySingle(sqlConfirmBooking, brID, dateID);
            
            // Return JSON result: If result.Error is 0, result will be 'all is fine!'
            // but is not, we need negative numbers (is our convention for json errors code)
            CommonHelpers.ReturnJsonError(0 - result.Error, result.ErrorMessage);
        } else {
            /* What? 
             * - BookingRequestID and UserID (as ProviderUserID) don't match?
             * - ConfirmedDateType is not correct?
             */
            CommonHelpers.ReturnJsonError(-1, "Impossible to confirm that Booking Request and date");
        }
    }
}