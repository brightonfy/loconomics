@using WebMatrix.Data;
@{
    dynamic booking = PageData[0];
    string myUserType = PageData[1];
    var u = LcData.UserInfo.GetUserRow();
    
    if (booking == null || booking["BookingRequestID"] == null) {
        throw new Exception("No data to bound RequestedBookingServices");
    }

    dynamic summary = LcData.Booking.GetBookingRequestForUser(booking.BookingRequestID, u.UserID, u.IsAdmin);
    var pricingSummary = LcData.Booking.GetPricingSummary(summary);
    var pricingSummaryGroups = LcData.Booking.GetPricingSummaryGroups(summary.PricingEstimateID, summary);
    
    string strServices = LcData.Booking.GetBookingRequestServices(booking.BookingRequestID, booking.PricingEstimateID);
    string strVarsOpts = LcData.Booking.GetBookingRequestDetails(booking.BookingRequestID, booking.PricingEstimateID);
    string strPackAddons = LcData.Booking.GetBookingRequestPackages(booking.BookingRequestID, booking.PricingEstimateID);
}
@helper printQuantityIfNeeded(string q){
    decimal quantity = 0;
    decimal.TryParse(q, out quantity);
    if (quantity > 1) {
        @("(" + quantity.ToString() + " items)")
    }
}

    <div class="requested-booking-services message-section">

        <h5>Payment</h5>
        <div class="payment">
            @switch(myUserType) {
                case "provider":
                    <text>
                    Payment (direct deposit scheduled for @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                    to checking account @("****" + LcEncryptor.Decrypt(booking.PaymentProviderAccountLastDigits)))
                    </text>
                break;
                case "customer":
                    <text>
                    Payment (scheduled for @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                    from credit card @("****" + LcEncryptor.Decrypt(booking.PaymentCustomerCardLastDigits)))
                    </text>
                break;
                default:
                    <text>
                    Total to be payed on @String.Format("{0:d}", booking.PaymentDate ?? "<date not available>")
                    </text>
                break;
            }
        </div>

        <h5>Pricing estimate</h5>
        @if (myUserType == "provider")
        {
            @LcPricingView.ProviderPricingSummary(null, pricingSummary, pricingSummaryGroups, 0)
        }
        else if (myUserType == "customer")
        {
            @LcPricingView.CustomerPricingSummary(null, pricingSummary, pricingSummaryGroups, 0)
        }

        @if (!String.IsNullOrEmpty(strServices))
        {
            <h5>Services requested:</h5>
            <div class="services">
                @strServices
            </div>
        }
        
        @if (!String.IsNullOrEmpty(strVarsOpts))
        {
            <h5>Estimate for</h5>
            <div class="estimate">
                @strVarsOpts
            </div>
        }

        @if (!String.IsNullOrEmpty(strPackAddons))
        {
            <h5>Packages and Add-Ons:</h5>
            <div class="packages">
                @strPackAddons
            </div>
        }
        
        <h5>Special instructions:</h5>
        <p class="special-instructions">@booking.SpecialRequests</p>

        <h5>Location and contact information:</h5>
        <div class="location">
            <p>
            x.y miles away (z1 minutes driving time, z2 minutes public tranport)
            </p>
            <p>
            Full location and contact information will be shown after you accept a time above.
            </p>
        </div>

        <h5>Cancellation policy</h5>
        <div class="cancellation-policy">
            @RenderPage("$CancellationPolicyInfoWidget.cshtml", new { 
                    CancellationPolicyID = booking.CancellationPolicyID,
                    DisplayForUserType = myUserType })
        </div>
    </div>