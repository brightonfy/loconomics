@using WebMatrix.Data;
@{
    CommonHelpers.SecurePage();
    
    var u = DashboardFunctions.GetUserRow();
    var brID = Request["BookingRequestID"].AsInt();
    
    var sqlCheckBookingRequest = @"
        SELECT  TOP 1 R.BookingRequestID
        FROM    BookingRequest As R
        WHERE   R.ProviderUserID = @0
                 AND
                R.BookingRequestID = @1
                -- Not Denied Booking Request
                 AND
                R.BookingRequestStatusID <> 7
    ";
    var sqlDeclineBooking = @"
        -- Parameters
        DECLARE @BookingRequestID int
        SET @BookingRequestID = @0

        DECLARE @ServiceAddressID int

        BEGIN TRY
            BEGIN TRAN

            -- Get Service Address ID to be (maybe) removed later
            SELECT  @ServiceAddressID = ServiceAddressID
            FROM    BookingRequest
            WHERE   BookingRequestID = @BookingRequestID

            /*
             * Updating Booking Request status, and removing references to the 
             * user selected dates.
             */
            UPDATE  BookingRequest
            SET     BookingRequestStatusID = 5, -- denied/declined
                    PreferredDateID = null,
                    AlternativeDate1ID = null,
                    AlternativeDate2ID = null,
                    ServiceAddressID = null
            WHERE   BookingRequestID = @BookingRequestID

            -- Removing CalendarEvents:
            DELETE FROM CalendarEvents
            WHERE ID IN (
                SELECT TOP 1 PreferredDateID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID
                UNION
                SELECT TOP 1 AlternativeDate1ID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID
                UNION
                SELECT TOP 1 AlternativeDate2ID FROM BookingRequest
                WHERE BookingRequestID = @BookingRequestID
            )

            -- Removing Service Address, if is not an user saved location (it has not NickName)
            DELETE FROM ServiceAddress
            WHERE ServiceAddressID = @ServiceAddressID
                   AND
                  NickName is null

            COMMIT TRAN

            -- We return sucessful operation with Error=0
            SELECT 0 As Error
        END TRY
        BEGIN CATCH
            IF @@TRANCOUNT > 0
                ROLLBACK TRAN
            -- We return error number and message
            SELECT ERROR_NUMBER() As Error, ERROR_MESSAGE() As ErrorMessage
        END CATCH
    ";
    
    using (var db = Database.Open("sqlloco")) {
        var checkID = db.QueryValue(sqlCheckBookingRequest, u.UserID, brID);
        if (checkID != null && (int)checkID == brID) {
            var result = db.QuerySingle(sqlDeclineBooking, brID);

            if (result.Error == 0) {
                if (Request.IsAjaxRequest()){
                    // An ajax redirect is performed to return the updated BookingRequestDetails html to the user
                    CommonHelpers.ReturnJsonResult(3, UrlUtil.LangPath + String.Format(
                        "Booking/$BookingRequestDetails/?BookingRequestID={0}", brID ), false);
                } else {
                    Response.Redirect(UrlUtil.LangPath + String.Format(
                        "Dashboard/Bookings/$!BookingRequest-{0}", brID), false);
                }
                // Send message
                LcMessaging.SendBookingRequestDenegation(brID, true);
                Response.End();
            } else {
                if (Request.IsAjaxRequest()){
                    // Return JSON result:
                    // We need negative numbers to indicate an error (is our convention for json 'Code')
                    CommonHelpers.ReturnJsonError(0 - result.Error, result.ErrorMessage);
                } else {
                    throw new HttpException(500, "Error declining the booking request: " + result.ErrorMessage);
                }
            }
        } else {
            if (Request.IsAjaxRequest()){
                /* What? 
                 * - BookingRequestID and UserID (as ProviderUserID) don't match?
                 * - BookingRequest is already confirmed?
                 */
                CommonHelpers.ReturnJsonError(-1, "Impossible to decline that Booking Request. Is already confirmed?");
            } else {
                throw new HttpException(500, "Impossible to decline that Booking Request. Is already confirmed?");
            }
        }
    }
}