@using System.Text.RegularExpressions;
@{
 
    if (WebSecurity.IsAuthenticated) {
        Layout = "~/en_US/_SiteLayout.cshtml";
        var UserID  = WebSecurity.CurrentUserId;
    }else{
        Response.Redirect("~/en_US/Account/Login");
    }

    var userID = "";
    var providerID = "";
    var positionID = "";
    var pricingTypeID = "";
    var estimateVarID = "";
    var servicePricingTypeID = 0;
    var errors = "";
    var sysdate = DateTime.Now;
    var EstimateResult = 0;
    var estimateVarValue = 0;
    
    if(IsPost){
        var db = Database.Open("sqlloco");

        userID = Convert.ToString(WebSecurity.CurrentUserId);
        positionID =  Request["PositionID"];
        pricingTypeID = Request["pricingtype"];
        providerID =  Request["ProviderID"];
        string[] varValues = Context.Request.Form.GetValues("varValue");
        string[] varIDs = Context.Request.Form.GetValues("varID");
        
        //Get the service pricing type relation
        var SQLServicePricingType = @"SELECT ServicePricingTypeID 
                       FROM dbo.servicepricingtype 
                       WHERE ProviderID=@0 and PositionID=@1 and PricingTypeID=@2";
        var servicePricingType = db.QuerySingle(SQLServicePricingType, providerID, positionID, pricingTypeID);

        servicePricingTypeID = Convert.ToInt32(servicePricingType.ServicePricingTypeID);
            
        //Read estimate profile from providerestimatevar 
        var SQLSelectVar = @"SELECT pep.EstimateVarValue as varValue, ev.UserDescription FROM dbo.providerestimateprofile pep
                        JOIN dbo.estimatevar ev  ON ev.EstimateVarID = pep.EstimateVarID
                        WHERE pep.ServicePricingTypeID=@0 AND pep.EstimateVarID=@1";
        var estimateProfile = db.QuerySingle(SQLSelectVar, servicePricingTypeID, estimateVarID);
        if(ModelState.IsValid) {
            for(int i=0;i<varIDs.Length;i++){
                estimateVarID = varIDs[i];
               
                
                //Validate is a Number
                var match = Regex.Match(varValues[i], @"^([0-9]*\.?[0-9]{1,2}?)+");
                if(!match.Success && varValues[i]!=""){
                    ModelState.AddError("varValue", estimateProfile.UserDescription+" must be a number");
                }else{ 
                    estimateVarValue = (varValues[i]!="" ? Convert.ToInt32(varValues[i]):0);
                }            
                
                //FORMULA
                EstimateResult += (estimateProfile.varValue==null?0: Convert.ToInt32(estimateProfile.varValue)) * (estimateVarValue==null?0:estimateVarValue);
            }
        }
        if(ModelState.IsValid){
            Response.Redirect("~/en_ES/EstimateRequest.cshtml?EstimateResult=" + EstimateResult + "&PositionID=" + positionID + "&ProviderID=" + providerID);
        }
        db.Close();
    }
}

<script type="text/javascript">
    $(document).ready(function () {

        var isResult = (getURLParameter("EstimateResult") != "null");

        //Load the Pricing Type drop down
        $('#pricingtype').addOption(0, "Loading....").attr('disabled', true);
        $.getJSON('ListPricingTypes', function (data) {
            var estimatetypes = data;
            $.each(estimatetypes, function (index, estimatetype) {
                var val = estimatetype.PricingTypeID;
                var text = estimatetype.Description;
                /*Debug
                $("#debugval").append(val);
                $("#debugtext").append(text);
                End Debug*/
                $('#pricingtype').addOption(val, text, false);
            });

            $('#pricingtype').addOption(0, "Select type").attr('disabled', false);

            var firstselected = true;
            $('#pricingtype').change(function () {
                if (firstselected) {
                    firstselected = false;
                    $('#pricingtype').removeOption(0);
                };
            });

        });

        //Paint and load Estimate Var List

        //aux function to get data from the url string
        function getURLParameter(name) {
            return decodeURI(
               (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]);
        }

        //Get the position ID
        var positionID = getURLParameter("PositionID");

        //Check pricing type changes
        $('#pricingtype').change(
            function () {
                var pricingTypeID = $('#pricingtype').val();

                //Reset the form
                $(".inputrow").remove();
                //Get estimation variables for the Position and pricing type.
                $.getJSON('ListUserEstimateVars', { PositionID: positionID, PricingTypeID: pricingTypeID },
                     function (data) {
                         var estimatevars = data;

                         //paint var tags(input/select)
                         var count = 0;
                         $.each(estimatevars, function (index3, estimatevar) {
                             var varID = estimatevar.EstimateVarID;//indentifies a variable value
                             var groupID = estimatevar.GroupID;//identifies a variable group for radio lists and dropdowns
                             var name = estimatevar.UserDescription;//description showed to the user
                             var tag = estimatevar.UserTag;//Tells wich Html representation should be painted(simple input, radio list, dropdown)
                             var value = estimatevar.Value;//Default value for the variable.
                             //Paint simple input
                             if (tag == "input") {
                                 if (!$('#label' + groupID).length) {
                                     $('.inputfields').after('<br/><label class="inputrow" id=label' + groupID + ' for=' + groupID + '><b>' + name + '<b/></label>');
                                 };
                                 $('#label' + groupID).append('<br/><input class="inputrow" id="varValue" name="varValue" type="text">');
                             };
                             //Paint radio list input
                             if (tag == "radiolist") {
                                 if (!$('#label' + groupID).length) {
                                     $('.inputfields').after('<label class="inputrow" id=label' + groupID + ' for=' + groupID + '><b>' + name + '<b/></label><br/>');
                                 };
                                 $('#label' + groupID).append('<br/><label>' + value + '<label/><input class="inputrow" type="radio" id=' + groupID + ' name=' + groupID + '>');
                             };
                             //Paint dropdown input
                             if (tag == "dropdown") {
                                 if (!$('#label' + groupID).length) {
                                     $('.inputfields').after('<label class="inputrow" id=label' + groupID + ' for=select' + groupID + '><b>' + name + '<b/></label>');
                                     $('#label' + groupID).append('<br/><select class="inputrow" id=select' + groupID + '/>');
                                 };
                                 $('#select'+groupID).append('<option value='+count+'>'+value+'<option/>');
                             };
                         });

                     }
                );
            }
        );
        //Paint the result retrived by the server
        if (isResult) {
            $("#result").append(getURLParameter("EstimateResult") + ' $ (USD)');
            update = false;
        }

    });
</script>

<div id="container" class="sign-up">
    <div id="main">

        @* If at least one validation error exists, notify the user *@
        @Html.ValidationSummary(errors)

        <h1>Request free quote</h1>
	    <form id="EstimateRequest" show action="" method="post">
		    <img class="inset" src="~/img/media-placeholder.png" alt="" />
		    <p>Tell us what you need</p>
      
            <label for="pricingTypeLabel"><b>Pincing Type</b></label>
            <select id="pricingtype" name="pricingtype"></select><br />
            <p class="inputfields" hidden="hidden"></p>
            <p id="result"><b>Estimated Cost:</b> </p>
            <fieldset class="buttons">
                <button id="advancer1" class="next fancy" type="submit">Get Estimate</button>
                <button id="advancer2" class="next fancy" type="submit" disabled="disabled">Continue</button>
				<input type="submit" class="hidden" hidden='hidden' />
			</fieldset>
        </form>
   </div>
</div>