@{
    var size = PageData["Size"] ?? "mini"; // medium, large
    var withContactData = PageData["WithContactData"] ?? false;
    var userID = PageData["UserID"] ?? 0;
    var data = PageData["Data"];
    var dataPrefix = PageData["DataPrefix"] ?? "";
    var userType = PageData["UserType"] ?? "user"; // customer, provider
    var addCssClasses = PageData["AddCssClasses"] ?? "";
    var extraInfo = PageData["ExtraInfo"];
    var withGoogleMap = PageData["WithGoogleMap"] ?? true;
    var useAbsoluteUrls = PageData["UseAbsoluteUrls"] ?? false;
    var positionID = (int)(PageData["PositionID"] ?? -1);
    var positionData = PageData["PositionData"];
    var urlBase = useAbsoluteUrls ? UrlUtil.SiteUrl : "";
    var withFullRating = PageData["WithFullRating"] ?? false;

    if (positionData != null) {
        // Preserve integrity of position-related parameters:
        positionID = positionData.PositionID;
    }
    if (withContactData) {
        addCssClasses += " user-contact-data";
    }
    
    if (data == null) {
        // TODO: review how works GetUserRowWithContactData and why GetUserRow returns contact data too but from different table:
        //if (withContactData) {
        //    data = DashboardFunctions.GetUserRowWithContactData(userID);
        //} else {
            data = DashboardFunctions.GetUserRow(userID);
        //}
        dataPrefix = "";
    }
    
    if (Array.IndexOf<string>(new string[] { "mini", "medium", "large" }, size) == -1) {
        throw new Exception("Size is not valid: " + size);
    }
    if (Array.IndexOf<string>(new string[] { "user", "customer", "provider" }, userType) == -1) {
        throw new Exception("UserType is not valid: " + userType);
    }
}
@helper printGoogleMap(string location){
    <iframe class="google-map" width="120" height="120" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="http://maps.google.com/?q=@(location);z=16&amp;output=embed"></iframe>
}
@functions{
    string getLocationForGoogleMaps(dynamic data){
        return CommonHelpers.JoinNotEmptyStrings(", ", data.AddressLine1, data.City, data.StateProvinceCode, "United States");
    }
}
@if (size == "medium")
{
    <div class="@userType medium-user-info @addCssClasses @(withFullRating ? "with-full-rating" : "")">
        <div class="user-micro-summary">
            <h5 class="user-public-name">@CommonHelpers.GetUserDisplayName(data, dataPrefix) @(positionData == null ? "" : " - " + positionData.PositionSingular)</h5>
            <span class="member-since">Member since @data[dataPrefix + "MemberSinceDate"].ToString("MMMM yyyy")</span>
        </div>
        
        <img class="avatar mini-avatar" alt="@data[dataPrefix + "FirstName"]'s Photo" src="@(urlBase + UrlUtil.LangPath)Profile/Photo/@data[dataPrefix + "UserID"]" width="55" height="55" />
        
        @if (withContactData) {
            <div class="user-contact-data">
                <div class="user-full-name">Name: <span class="value">@data[dataPrefix + "FirstName"] @data[dataPrefix + "MiddleIn"] @data[dataPrefix + "LastName"]</span></div>
                <div class="user-address">Address: <span class="value">@data[dataPrefix + "AddressLine1"] @data[dataPrefix + "AddressLine2"]</span></div>
                <div class="user-location">@CommonHelpers.JoinNotEmptyStrings(", ", data[dataPrefix + "City"], @data[dataPrefix + "StateProvinceCode"], @data[dataPrefix + "PostalCode"])</div>
                <div class="user-mobile-phone">Mobile phone: <span class="value">@data[dataPrefix + "MobilePhone"]</span></div>
                <div class="user-email">Email address: <span class="value">@data[dataPrefix + "Email"]</span></div>
            </div>
            if (withGoogleMap) {
                @printGoogleMap(getLocationForGoogleMaps(data))
            }
        }
        else {
        <p class="user-text">
            @if (!String.IsNullOrWhiteSpace(data[dataPrefix + "PublicBio"])) {
                @data[dataPrefix + "PublicBio"]
            } else {
                <text>User doesn't provide information about itself.</text>
                <br />
                <text>It's strongly recommended for all users to write a public bio.</text>
                @*Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec lorem turpis, volutpat id adipiscing placerat, convallis sit amet orci. Donec quis enim nunc. Etiam iaculis porttitor sodales. Ut vel nisl vel augue cursus viverra vitae sed lectus. Nunc varius vehicula felis, in tincidunt lorem venenatis*@
            }
        </p>
        }

        @if (withFullRating)
        {
            @RenderPage(UrlUtil.LangPath + "Reviews/$UserRatingSummaryWidget.cshtml", new { ReviewedID = data[dataPrefix + "UserID"], PositionID = positionID })
        }
        else
        {
            if (userType == "customer")
            {
            <div class="user-rating global-rating">
                @RenderPage(UrlUtil.LangPath + "Reviews/$UserRatingSummaryWidget.cshtml", new
           {
               ReviewedID = data[dataPrefix + "UserID"],
               PositionID = 0,
               ReviewedData = data,
               ReviewedDataPrefix = dataPrefix,
               RatingSummaryMode = "summary"
           })
            </div>
            }
            else if (userType == "provider")
            {
            <div class="user-rating global-rating">
                @RenderPage(UrlUtil.LangPath + "Reviews/$UserRatingSummaryWidget.cshtml", new
           {
               ReviewedID = data[dataPrefix + "UserID"],
               PositionID = positionID,
               ReviewedData = data,
               ReviewedDataPrefix = dataPrefix,
               RatingSummaryMode = "summary"
           })
            </div>
            }
        }

        <a target="_blank" class="view-profile" href="@(urlBase + UrlUtil.LangPath)Profile/?UserID=@data[dataPrefix + "UserID"]">View full profile</a>
    </div>
}
@* Mini size is the same for all userType's *@
else if (size == "mini") {
    <div class="@userType mini-user-info @addCssClasses @(withFullRating ? "with-full-rating" : "")">
        <img class="avatar mini-avatar" alt="@data[dataPrefix + "FirstName"]'s Photo" src="@(urlBase + UrlUtil.LangPath)Profile/Photo/@data[dataPrefix + "UserID"]" width="55" height="55" />
        <h5 class="user-public-name">@data[dataPrefix + "FirstName"] @(CommonHelpers.GetInitialLetter(data[dataPrefix + "LastName"])) @(positionData == null ? "" : " - " + positionData.PositionSingular)</h5>
        @if (!String.IsNullOrWhiteSpace(extraInfo)) {
            <div class="extra-info">@extraInfo</div>
        } else {
            <a target="_blank" class="view-profile" href="@(urlBase + UrlUtil.LangPath)Profile/?UserID=@data[dataPrefix + "UserID"]">View profile</a>
        }
        @if (withFullRating)
        {
            @RenderPage(UrlUtil.LangPath + "Reviews/$UserRatingSummaryWidget.cshtml", new { ReviewedID = data[dataPrefix + "UserID"], PositionID = positionID })
        }
    </div>
} else {
    <strong>User Info Widget: option not implemented!</strong>
}