@using WebMatrix.Data;
@{
    var p = LcData.UserInfo.GetRequestedUserRow();
    var pos = PageData["position"];
    
    var dataCats = LcData.GetServiceCatsAndItsAttributes(pos.PositionID, "provider-services", pos.UserID);
    
    // TODO: Get Customer Type Id   
    var clienttypeid = PageData["ClientTypeID"] = 1;
        
    var providerPrice = LcData.GetProviderPrice(p.UserID, pos.PositionID, clienttypeid);
    
    var minimumBookingTime = 0M;
    using (var db = Database.Open("sqlloco")){       
        minimumBookingTime = db.QueryValue(@"
            SELECT  MinTime
            FROM    CalendarProviderAttributes
            WHERE   UserID = @0
        ", p.UserID) ?? 0;
    }
}
@helper printAttList(dynamic cat){
    <ul class="attributes-list">
        @foreach (var att in cat["ServiceAttributes"]) {
            if (att["UserChecked"]) {
            <li title="@att["ServiceAttribute"]" data-description="@att["ServiceAttributeDescription"]">@att["ServiceAttribute"]</li>
            }
        }
    </ul>
}
@helper printAttListLangs(dynamic cat, dynamic levelsCat){
    var selected = levelsCat["UserSelectedLevels"];
    var levelsIndex = levelsCat["LevelsIndex"];
    <ul class="attributes-list">
        @foreach (var att in cat["ServiceAttributes"]) {
            if (att["UserChecked"]) {
                string levelStr = null;
                if (selected.ContainsKey(att["ServiceAttributeID"])) {
                    var levelId = selected[att["ServiceAttributeID"]];
                    levelStr = levelsCat["ServiceAttributes"][levelsIndex[levelId]]["ServiceAttribute"];
                }
                <li title="@att["ServiceAttribute"]" data-description="@att["ServiceAttributeDescription"]">@att["ServiceAttribute"] @(levelStr == null ? "" : "(" + levelStr + ")")</li>
            }
        }
    </ul>
}
@helper printCatTitle(dynamic cat){
    <h5 title="@cat["ServiceAttributeCategoryName"]" data-description="@cat["ServiceAttributeCategoryDescription"]">
        @cat["ServiceAttributeCategoryName"]
    </h5>
}
            <div class="position-summary">
                <div class="actions book">
                    <a class="book-action main-action" href="@Href(UrlUtil.LangPath + "Booking/?providerid=" + p.UserID + "&positionid=" + pos.PositionID)">Book now</a>
                </div>
                <span class="hour-price">
                        @if (providerPrice.IsHourly)
                        {
                            <span class="price">@String.Format("{0:C}", providerPrice.Price)</span> <text>/h</text>
                        }
                        else
                        {
                            <span class="price-since">from:</span> <span class="price">@String.Format("{0:C}", providerPrice.Price)</span>
                        }
                </span>
                <a class="calculate-price" href="@Href(UrlUtil.LangPath + "Booking/?providerid=" + p.UserID + "&positionid=" + pos.PositionID)">Calculate for your needs</a>
                
                <div class="provider-features-lists">
                    @if (minimumBookingTime > 0)
                    {
                        <div class="min-booing-time">
                            <h5>Minimum booking time:</h5>
                            <!--<a class="button view-more" href="#">More</a>-->
                            <ul class="attributes-list"><li>
                                @(minimumBookingTime) @(minimumBookingTime == 1 ? "hour" : "hours")
                                </li></ul>
                        </div>
                    }
                    
                    @* Experience Level special treatment: just like in Dashboard/Services, is on the top, because "doesn't understand DisplayRank" *@
                    @if (dataCats.ContainsKey(LcData.ServiceAttCatIDExperienceLevel) && dataCats[LcData.ServiceAttCatIDExperienceLevel]["ServiceAttributes"].Count > 0)
                    {
                        var cat = dataCats[LcData.ServiceAttCatIDExperienceLevel];
                        <div class="experience-level">
                            @printCatTitle(cat)
                            <!--<a class="button view-more" href="#">More</a>-->
                            @printAttList(cat)
                        </div>
                    }
                    
                    @foreach (var cat in dataCats)
                    {
                        // Select:
                        // - Special cats or cats selected for sidebar
                        // - Cats with content (checked by user attributes)
                        // - Real cats, with ID greater than zero (zero is not valid, negative is for virtual cats, as LanguageLevels)
                        // - On Experience Level category, do nothing, experience level was printed previous this iteration already, not duplicate!
                        if ((LcData.SpecialServicesAttCats.Contains(cat.Key) || cat.Value["SideBarCategory"] == true) &&
                            cat.Value["ServiceAttributes"].Count > 0 &&
                            cat.Key > 0 &&
                            cat.Key != LcData.ServiceAttCatIDExperienceLevel)
                        {
                            <div>
                                @printCatTitle(cat.Value)
                                <!--<a class="button view-more" href="#">More</a>-->
                                @switch ((int)cat.Key)
                                {
                                    case LcData.ServiceAttCatIDLanguages:
                                        @printAttListLangs(cat.Value, dataCats[LcData.ServiceAttCatIDLanguageLevel])
                                        break;
                                    default:
                                        @printAttList(cat.Value)
                                        break;
                                }
                            </div>
                        }
                    }

                    @*if (dataCats.ContainsKey(LcData.ServiceAttCatIDExperienceLevel) && dataCats[LcData.ServiceAttCatIDExperienceLevel]["ServiceAttributes"].Count > 0)
                    {
                        var cat = dataCats[LcData.ServiceAttCatIDExperienceLevel];
                        <div class="experience-level">
                            @printCatTitle(cat)
                            <!--<a class="button view-more" href="#">More</a>-->
                            @printAttList(cat)
                        </div>
                    }*@
                    @*if (dataCats.ContainsKey(LcData.ServiceAttCatIDLanguages) && dataCats[LcData.ServiceAttCatIDLanguages]["ServiceAttributes"].Count > 0)
                    {
                        var cat = dataCats[LcData.ServiceAttCatIDLanguages];
                        <div class="languages-spoken">
                            @printCatTitle(cat)
                            <!--<a class="button view-more" href="#">More</a>-->
                            @printAttListLangs(cat, dataCats[LcData.ServiceAttCatIDLanguageLevel])
                        </div>
                    }*@

                    @*if (dataCats.ContainsKey(LcData.ServiceAttCatIDExperience) && dataCats[LcData.ServiceAttCatIDExperience]["ServiceAttributes"].Count > 0)
                    {
                        var cat = dataCats[LcData.ServiceAttCatIDExperience];
                        <div class="years-experience">
                            @printCatTitle(cat)
                            <!--<a class="button view-more" href="#">More</a>-->
                            @printAttList(cat)
                        </div>
                    }*@
                    @*if (dataCats.ContainsKey(LcData.ServiceAttCatIDClientTypes) && dataCats[LcData.ServiceAttCatIDClientTypes]["ServiceAttributes"].Count > 0)
                    {
                        var cat = dataCats[LcData.ServiceAttCatIDClientTypes];
                        <div class="client-types">
                            @printCatTitle(cat)
                            <!--<a class="button view-more" href="#">More</a>-->
                            @printAttList(cat)
                        </div>
                    }*@
                </div>
            </div>
