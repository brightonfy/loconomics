@using WebMatrix.WebData

@{
    WebSecurity.RequireAuthenticatedUser();

    // Set the layout page and page title
    Layout = UrlUtil.LangPath + "_SiteLayout.cshtml";
    Page.Title = "Change Password";

    bool isSuccess = false;
    var currentPassword = Request["currentPassword"];
    var newPassword = Request["newPassword"];
    var confirmPassword = Request["confirmPassword"];

    var oAuthLoggedIn = Convert.ToBoolean(Session["OAuthLoggedIn"]);

    // Add Validation scripts
    Scripts.Add(UrlUtil.AppPath + "Scripts/jquery.validate.min.js");
    Scripts.Add(UrlUtil.AppPath + "Scripts/jquery.validate.unobtrusive.min.js");
    
    // Setup validation
    Validation.RequireField("currentPassword", "Please enter your current password.");
    Validation.RequireField("newPassword", "Please enter a new password.");
    Validation.Add("confirmPassword",
        Validator.Required("Please confirm your new password."),
        Validator.EqualsTo("newPassword", "The password confirmation does not match the new password."));
    
    if (IsPost) {
        if (Validation.IsValid()) {
            if (WebSecurity.ChangePassword(WebSecurity.CurrentUserName, currentPassword, newPassword)) {
                isSuccess = true;
            } else {
                ModelState.AddFormError("An error occurred when attempting to change the password. Please contact the site owner.");
            }
        } else {
             ModelState.AddFormError("Password change failed. Please correct the errors and try again.");
        }
    }
}

  <div id="container" class="clearfix">


@if (!oAuthLoggedIn) { 
    <hgroup class="title">
        <h1>Change Password.</h1>
        <h2>Use the form below to change your password.</h2>
    </hgroup>

    if (isSuccess) {
        <p class="message-success">
            Your password has been updated!
        </p>
    }

    <form method="post" action="">
        @Html.ValidationSummary()
        
        <fieldset>
            <legend>Change Password Form</legend>
            <ul>
                <li class="current-password">
                    <label for="currentPassword" @if (!ModelState.IsValidField("currentPassword")) {<text>class="error-label"</text>}>Current Password:</label>
                    <input type="password" id="currentPassword" name="currentPassword" title="Current password" @Validation.GetHtml("currentPassword")/>
                    @Html.ValidationMessage("currentPassword")
                </li>
                <li class="new-password">
                    <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>New Password:</label> 
                    <input type="password" id="newPassword" name="newPassword" title="New password" @Validation.GetHtml("newPassword")/>
                    @Html.ValidationMessage("newPassword")
                </li>
                <li class="confirm-password">
                    <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Confirm Password:</label> 
                    <input type="password" id="confirmPassword" name="confirmPassword" title="Confirm new password" @Validation.GetHtml("confirmPassword")/>
                    @Html.ValidationMessage("confirmPassword")
                </li>
            </ul>
            <input type="submit" value="Change Password" title="Change password" />
            <p>
                Click <a href="@Href(UrlUtil.LangPath + "Account/ForgotPassword/")" title="Forgot password page">here</a> if you've forgotten your password.
            </p>
        </fieldset>
    </form>
}


@*<p>
    Click <a href="@Href(UrlUtil.LangPath + "Account/AssociateServiceAccount/")" title="Associate OAuth Account">here</a> to associate this account with an third party service login.
</p>
<p>
    Click <a href="@Href(UrlUtil.LangPath + "Account/DisassociateServiceAccount/")" title="Disassociate OAuth Account">here</a> to disassociate this account from an third party service login.
</p>*@


</div>