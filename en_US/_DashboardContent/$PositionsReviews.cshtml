@using WebMatrix.Data;
@{
    LcHelpers.ProviderPage();
    // Current position data record:
    var p = LcData.UserInfo.GetUserCurrentPos();
    var n = p.PositionID;
    // Current user data record:
    var u = LcData.UserInfo.GetUserRow();
    var redirectURL = LcHelpers.GetRedirectURLFromReferrer("/alerts");
    var positionEnabled = false;
    var positionStatus = p.StatusID;
    
    var idprefix = "position#" + n + "-reviews";
    
    if (Validation.GetHtml("clientsemails") == null) {
        Validation.RequireField("clientsemails", LcRessources.RequiredField("Email addresses list"));
    }
    
    if (IsPost && Validation.IsValid()) {
        
        var emails = LcValidators.ReadEmailAddressList(Request["clientsemails"]);
        if (emails == null){
            ModelState.AddError("clientsemails", "There are errors in the email list. Please, use a comma to separate emails and verify all are valid addresses.");
        }
        if (ModelState.IsValid) {
            foreach (string email in emails) {
                LcMessaging.SendMail(email,
                    String.Format("Loconomics.com - Write {0} {1} a reference", u.FirstName, u.LastName),
                    LcMessaging.ApplyTemplate(UrlUtil.LangPath + "Email/EmailProviderReference/", new Dictionary<string,object>{
                        { "ProviderUserID", u.UserID }
                        ,{ "PositionID", p.PositionID }
                }));
            }
            // Set VerificationID:12 for this user as confirmed just with only sent references requests (see issue #8 comment https://github.com/djorgensen/Loconomics/issues/8#issuecomment-6807651
            using (var db = Database.Open("sqlloco")){
                db.Execute(@"EXEC SetUserVerification @0,@1,@2,@3", p.UserID, 12, DateTime.Now, 2);
                db.Execute("EXEC TestAlertReferenceRequests @0, @1", p.UserID, p.PositionID);
            }
            
            int newStatus = LcData.UserInfo.GetUserPositionStatus(p.UserID, p.PositionID);
            positionEnabled = (newStatus == 1 && newStatus != positionStatus);
            if (positionEnabled) {
                redirectURL = null;
            }
            string success = positionEnabled
                ? LcRessources.GetText("DataSavedAndPositionEnabled", p.PositionSingular, LcData.UserInfo.GetMyPublicURL())  
                : LcRessources.MessageSent;
            if (!String.IsNullOrEmpty(redirectURL)) {
                LcHelpers.ReturnJsonResult(4, new { SuccessMessage = success, RedirectURL = redirectURL } );
            } else {
                LcHelpers.ReturnJsonResult(0, success);
            }
        }
    }
}
<p class="setting-instructions">
To let customers know you’ve done some great work in the past, we’ll start by allowing you to invite your past clients
to write you a reference. Invite as many as you’d like, and we’ll post the first five to your profile.
</p>
<div>
<form action="@(UrlUtil.LangPath)Dashboard/$PositionsReviews/" method="post" class="positionreviews ajax ajax-box" id="position#@(n)-reviews">
    <input type="hidden" name="PositionID" value="@p.PositionID"/>
    <input type="hidden" name="RedirectURL" value="@(redirectURL)" />
    @LcHelpers.GetValidationScripts()
    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
    <fieldset class="references">
        <ul>
            <li>
                <label for="@idprefix-clientsemails">Please enter the e-mail addresses of past clients, and we'll send them a request (don’t worry, we will not spam them):</label>
                <textarea id="@idprefix-clientsemails" @Validation.GetHtml("clientsemails") name="clientsemails" placeholder="type e-mail addresses separated by commas">@Request["clientsemails"]</textarea>
            </li>
        </ul>
    </fieldset>
    @*<fieldset>
        <legend>Testing the Reviews/ReviewsGrid</legend>
        <h3>Reviews</h3>
        @RenderPage(UrlUtil.LangPath + "Reviews/$ReviewsGrid.cshtml", u.UserID, p.PositionID)
    </fieldset>*@
    <fieldset class="actions">
        <button class="save main-action" type="submit">Send</button>
    </fieldset>
</form>
</div>