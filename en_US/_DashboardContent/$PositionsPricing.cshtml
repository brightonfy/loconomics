@using WebMatrix.Data;
@{
    // Current provider data record:
    var p = DashboardFunctions.GetUserRow();
    // Current position data record:
    var pos = DashboardFunctions.GetUserCurrentPos();
    var n = pos.PositionID;
    
    if (p == null || pos == null){
        var inputdataerrormessage = "No enought input data to show results";
        if (IsPost){
            CommonHelpers.ReturnJsonError(-1, inputdataerrormessage);
        }else{
            throw new Exception(inputdataerrormessage);
        }
    }
    
    string pageToLoad = "";

    using (var db = Database.Open("sqlloco")){
        
        // TODO: Get Customer Type Id   
        var clienttypeid = PageData["ClientTypeID"] = 1;
        
        // Get our Pricing Type ID:
        int pricingtypeid = LcData.GetPositionPricingTypeID(pos.PositionID, clienttypeid);

        switch (pricingtypeid) {
            case 1: // Hours
                pageToLoad = "_ProviderHoursType.cshtml";
                break;
            case 2: // Custom
                pageToLoad = "_ProviderCustomType.cshtml";
                break;
            case 3: // Packages
                pageToLoad = "$ProviderPackagesType.cshtml";
                break;
            case 4: // Invoice
                pageToLoad = "_ProviderInvoiceType.cshtml";
                break;
        }
    }
    
    var idprefix = PageData["idprefix"] = "position#" + n + "-pricing";
}
<p class="setting-instructions">
Transparent pricing is the key to a successful job.  We’re here to help you and your clients determine an accurate price and time estimate.  Do your best to input on average for each of the questions asked below.  Let us know if you need help or have feedback.  
</p>

@*
<script type="text/javascript">
    if (!pricingWizardProviderSetupLoaded) var pricingWizardProviderSetupLoaded;
    if (!pricingWizardProviderSetupLoaded)
        Modernizr.load(UrlUtil.AppPath + 'Scripts/PricingWizard.ProviderSetup.js');
    else
        if (InitPricingWizardProviderSetup)
            InitPricingWizardProviderSetup();
</script>*@
<div>
    @RenderPage(UrlUtil.LangPath + "PricingWizard/" + pageToLoad, new { PricingWizardClasses = "positionpricing" })
</div>
