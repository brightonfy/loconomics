@using WebMatrix.Data;
@using WebMatrix.WebData;
@functions{
    void UpdateDb(int userId, bool hasPhoto){
        using (var db = Database.Open("sqlloco")){
            // We set the name, now ever fixed as '$avatar', without extension, to allow TestAlertPhoto validate this,
            // no more because is not need.
            db.Execute(@"
                UPDATE  users
                SET     photo=@0
                WHERE   UserID=@1
                -- Check Alerts:
                EXEC TestAlertPhoto @1
            ", hasPhoto ? "$avatar" : null, userId);
        }
    }
    void SaveAvatar(Stream photo, string virtualPath){
        var avatarNamePrefix = "$avatar";
        
        // Check folder or create
        var folder = Server.MapPath(virtualPath);
        if (!Directory.Exists(folder)) {
            Directory.CreateDirectory(folder);
        }
        
        // Remove previous photos, original and sized/adapted, all start with avatarNamePrefix
        // File.Delete doesn't allow wildcards, find and delete each one
        foreach (var f in Directory.GetFiles(folder, avatarNamePrefix + "*", SearchOption.TopDirectoryOnly))
            File.Delete(f);

        // Save original photo as avatarNamePrefix in jpg format
        using (var img = System.Drawing.Image.FromStream(photo)) {
            img.Save(folder + avatarNamePrefix + ".jpg", System.Drawing.Imaging.ImageFormat.Jpeg);
            /*byte[] content = new byte[photo.Length];
            Request.InputStream.Read(content, 0, (int)photo.Length);
            File.WriteAllBytes(folder + avatarNamePrefix, content);*/
            photo.Dispose();
        
            // Save image with profile size (-176x184) and grayscale (-gray)
            using (var modImg = LcImaging.Grayscale(LcImaging.Resize(img, 176, 184, LcImaging.SizeMode.Cover, LcImaging.AnchorPosition.Center))) {
                modImg.Save(folder + avatarNamePrefix + "-176x184-gray.jpg", System.Drawing.Imaging.ImageFormat.Jpeg);
            }
            // Same as previous but for hi-res 2x devices: (real pixel sizes is double, 352x368, but preserve the original size name to recognize it better adding the @2x suffix
            using (var modImg = LcImaging.Grayscale(LcImaging.Resize(img, 352, 368, LcImaging.SizeMode.Cover, LcImaging.AnchorPosition.Center))) {
                modImg.Save(folder + avatarNamePrefix + "-176x184-gray@2x.jpg", System.Drawing.Imaging.ImageFormat.Jpeg);
            }
            
            // NOTE Creation of images with more sizes (for small user widgets on reviews/bookings/etc) or filters go here
        }
    }
}
@{
    LcHelpers.SecurePage();
    var userId = WebSecurity.CurrentUserId;
    var ajaxEnabled = true;
    bool processed = false;
    string virtualPath = UrlUtil.AppPath + "img/userphotos/u" + userId.ToString() + "/";
    
    // Delete file support:
    if (Request["delete"].AsBool()) {
        // We don't need the upload staff here, simply update database removing all file, both
        // managed by next common function:
        UpdateDb(userId, false);
        
        LcHelpers.ReturnJsonResult(0, "Photo was removed");
    }
    
    // qq File uploader support, XHR Upload
    if (!String.IsNullOrEmpty(Request["qqfile"])){
        string fileName = (string)Request["qqfile"];
        
        try{
            SaveAvatar(Request.InputStream, virtualPath);
        } catch(Exception ex) {
            ModelState.AddFormError(ex.Message);
        }
        
        // File saved, change the user preference at the database:
        UpdateDb(userId, true);
        
        processed = true;
    } else if (IsPost){

        var fileuploaded = Request.Files["qqfile"] ?? Request.Files["avatar"];
            
        if (fileuploaded == null || String.IsNullOrEmpty(fileuploaded.FileName)) {
            ModelState.AddFormError("Please, select an image");
        }

        if (ModelState.IsValid) {
            System.IO.FileInfo fileinfo = new FileInfo(fileuploaded.FileName);
            
            try{
                SaveAvatar(fileuploaded.InputStream, virtualPath);
            } catch(Exception ex) {
                ModelState.AddFormError(ex.Message);
            }
            
            // File saved, change the user preference at the database:
            UpdateDb(userId, true);
        }
        
        processed = true;
    } else {
        // Manage normal GET
    }

    if (processed) {
        if (ModelState.IsValid) {
            if (ajaxEnabled) {
                // NOTE: There is some issues with IE managing this result with contenttype=json
                // because of this, here we use directly the Json helper instead our helper
                //LcHelpers.ReturnJson(
                Json.Write(
                    new Dictionary<string, object>(){
                        { "success", "File was saved" }
                    },
                Response.Output);
                Response.End();
                
                /*LcHelpers.ReturnJson(
                    new Dictionary<string, object>(){
                        { "success", "File was saved" }
                    }
                );*/
            }
        } else {
            if (ajaxEnabled) {
                // NOTE: IE problems with contentype=json, use JsonHelper directly:
                //LcHelpers.ReturnJson(
                Json.Write(
                    new Dictionary<string, object>(){
                        { "error", LcRessources.GetText("an-error", String.Join("; ", ModelState.Values.First().Errors)) }
                    },
                    Response.Output);
                Response.End();
            }
        }
    }
}
<html>
    <head>
        <script src="@Href(UrlUtil.AppPath + "Scripts/jquery/jquery-1.7.2.min.js")" type="text/javascript"></script>
        <script src="@Href(UrlUtil.AppPath + "Scripts/fileuploader/fileuploader.js")" type="text/javascript"></script>
        <link rel="stylesheet" href="@Href(UrlUtil.AppPath + "Scripts/fileuploader/fileuploader.css")"/>

        <script type="text/javascript">
            @Html.Raw(UrlUtil.ToJsVar())
        </script>
        <style type="text/css">
            body {
                font-family: "Alte Haas Grotesk", Helvetica, Arial, sans-serif;
            }
            .qq-upload-button {
                width: 100%;
                border: none;
                display: block;
                font-size: 1em;
                cursor: pointer;
            }
            .qq-upload-list {
                margin: 15px 0 !important;
                max-height: 120px !important;
                overflow: auto;
            }
        </style>

        <script type="text/javascript">
            @if (ajaxEnabled)
            {
            <text>
            var a = jQuery.noConflict();
            a(document).ready(function () {
                var uploader = new qq.FileUploader({
                    element: document.getElementById('change-photo-file-uploader'),
                    // path to server-side upload script
                    action: UrlUtil.LangPath + 'Dashboard/ChangePhoto/',
                    allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
                    onComplete: function (id, fileName, responseJSON) {
                        window.parent.reloadUserPhoto();
                    }
                });
            });
            </text>
            }
            else if (IsPost)
            {
                <text>
                reloadUserPhoto();
                window.close();
                </text>
            }
        </script>
    </head>
    <body>
        <div class="change-photo">
            <div id="change-photo-file-uploader">
                @if(!ajaxEnabled) {
                <form action="@(UrlUtil.LangPath)Dashboard/ChangePhoto/" method="post" enctype="multipart/form-data">
                    @Html.ValidationSummary()
                    <label>Choose an image from your computer: <input type="file" name="avatar" /></label>
                    <button class="button main-action" type="submit">Upload!</button>
                </form>
                }
            </div>
            <div id="delete-photo">
                <button type="button" class="qq-upload-button">Remove photo</button>
                <script type="text/javascript">
                    jQuery('#delete-photo > button').click(function () {
                        window.parent.deleteUserPhoto();
                    })
                    .hover(function () {
                        jQuery(this).addClass('qq-upload-button-hover');
                    }, function () {
                        jQuery(this).removeClass('qq-upload-button-hover');
                    });
                </script>
            </div>
        </div>
    </body>
</html>