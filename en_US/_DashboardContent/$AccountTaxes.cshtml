@using Braintree;
@using WebMatrix.Data;
@{
    var idprefix = "account-taxes";
    var user = PageData["userow"] ?? DashboardFunctions.GetUserRow();
    
    BraintreeGateway gateway = null;
    Customer customer = null;
    dynamic taxentities = null, tintypes = null;
    
    try{
        gateway = LcPayment.NewBraintreeGateway();
    } catch {
        ModelState.AddFormError("There was an error communicating with our secure data store, please try again later.");
    }
    
    if (ModelState.IsValid) {
        if (!IsPost) {
            // Try to get the data from this customer, if was previosly saved or user exist at Braintree
            try {
                customer = gateway.Customer.Find(user.UserID.ToString());
                PageData["customer"] = customer;
            }
            //} catch (Braintree.Exceptions.NotFoundException ex){ // Customer don't exist exception
            catch { }
        } else {
     
            // Get form data:
            var tinData = new Dictionary<string, string>();
            foreach (var k in Request.Form.AllKeys) {
                // "tin-" general prefix
                if (k.StartsWith("tin-")) {
                    tinData.Add(k, Request.Form[k]);
                }
            }
            
            CustomerRequest request = new CustomerRequest{
                //need to pass in the userid from the cookie
                Id = user.UserID.ToString(),
                CustomFields = tinData
            };

            var result = gateway.Customer.Create(request);
            if (result.IsSuccess()){
                CommonHelpers.ReturnJsonResult(0, "Data saved!");
            } else {
                foreach (var row in result.Errors.DeepAll())
                {
                    if (Context.IsDebuggingEnabled) {
                        ModelState.AddFormError(row.Code.ToString() + ": " + row.Message);
                    } else {
                        ModelState.AddFormError(row.Message);
                    }
                }
            }
        }
    }
    using (var db = Database.Open("sqlloco")) {
        taxentities = db.Query(@"
            SELECT  TaxEntityTypeID, TaxEntityTypeName
            FROM    TaxEntityType
            WHERE   LanguageID = @0 AND CountryID = @1
        ", 1, 1);
        tintypes = db.Query(@"
            SELECT  TINTypeID, TINTypeAbbr, TINTypeName
            FROM    TINType
            WHERE   LanguageID = @0 AND CountryID = @1
        ", 1, 1);
    }
}
@functions{
    string getTaxData(string fieldname) {
        var c = (Customer)PageData["customer"];
        if (c != null && c.CustomFields.ContainsKey(fieldname)) {
            return (string)c.CustomFields[fieldname];
        } else {
            return Request[fieldname];
        }
    }
}
@helper printEntityType(int entityID, string name){
    <li><label><input type="radio" name="tin-taxentitytype" value="@entityID" @CommonHelpers.IsChecked(getTaxData("tin-taxentitytype"), entityID.ToString())/>@name</label></li>
}
@* 
<p class="setting-instructions">
</p>
*@
<form method="post" id="@idprefix-form" action="@(UrlUtil.LangPath)Dashboard/$AccountTaxes/" class="ajax ajax-box">
    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
    <fieldset id="@idprefix-fs-taxinfo" class="tax-info">
        <legend>Please complete the IRS Form W-9 below:</legend>
        <ul>
            <li><label for="@idprefix-fullname">Full Name:</label><input id="@idprefix-fullname" type="text" name="tin-fullname" value="@getTaxData("tin-fullname")"/><span class="info">(corresponding to your Tax Identification Number)</span></li>
            <li><label for="@idprefix-businessname">Business Name:</label><input id="@idprefix-businessname" type="text" name="tin-businessname" value="@getTaxData("tin-businessname")"/><span class="info">(only if different from above)</span></li>
            <li>Mailing Address:</li>
            <li><label for="@idprefix-streetaddress">Street, Apt:</label><input id="@idprefix-streetaddress" type="text" name="tin-streetaddress" value="@getTaxData("tin-streetaddress")"/></li>
            <li><label for="@idprefix-city">City:</label><input id="@idprefix-city" type="text" name="tin-city" value="@getTaxData("tin-city")"/></li>
            <li><label for="@idprefix-state">State:</label>
                <select id="@idprefix-state" name="tin-state">
                    @CommonHelpers.StateProvinceOptions(getTaxData("tin-state"))
                </select>
            </li>
            <li><label for="@idprefix-zipcode">Zip Code:</label><input id="@idprefix-zipcode" type="text" name="tin-zipcode" value="@getTaxData("tin-zipcode")"/></li>
            <li class="tax-entity-type">
                <span>Tax Entity Type:</span>
                <ul>
                    @foreach (var entity in taxentities)
                    {
                        @printEntityType(entity.TaxEntityTypeID, entity.TaxEntityTypeName)
                    }
                </ul>
            </li>
            <li class="tax-clasification">
                <label for="@idprefix-tax-clasification">Choose the tax clasification:</label>
                <select id="@idprefix-tax-clasification" name="tin-tax-classification">
                    <option value="C" @CommonHelpers.IsSelected(getTaxData("tin-tax-classification"), "C")>C Corporation</option>
                    <option value="S" @CommonHelpers.IsSelected(getTaxData("tin-tax-classification"), "S")>S Corporation</option>
                    <option value="P" @CommonHelpers.IsSelected(getTaxData("tin-tax-classification"), "P")>Partnership</option>
                </select>
            </li>
            <li class="tax-exempt-payee"><label>Exempt payee: <input type="checkbox" @CommonHelpers.IsChecked(getTaxData("tin-exempt-payee"), "true") name="tin-exempt-payee" value="true"/></label></li>
        </ul>
    </fieldset>
    <fieldset id="@idprefix-fs-part1">
        <legend>Part 1: Taxpayer Identification Number (TIN):</legend>
        <span class="info">(This is a secure form. Your Tax ID Number will be stored in encrypted form.)</span>
        <input type="text" name="tin-number" value="@getTaxData("tin-number")"/>
        @foreach (var tintype in tintypes)
        {
        <label><input type="radio" name="tin-type" @CommonHelpers.IsChecked(getTaxData("tin-type"), tintype.TINTypeID.ToString()) value="@tintype.TINTypeID"/><abbr title="@tintype.TINTypeName">@tintype.TINTypeAbbr</abbr></label>
        }
    </fieldset>
    <fieldset id="@idprefix-fs-part2">
        <legend>Part 2: Certification</legend>
        <div class="info">
        <p>
            Under penalties of perjury, I certify that:
        </p>
        <p>
            The number shown on this form is my correct taxpayer identification number ( or I am waiting for a number to be issued to me ), and
        </p>
        <p>
            I am not subject to backup withholding because: (a) I am exempt from backup withholding, or (b) I have not been notified by 
            the Internal Revenue Service (IRS) that I am subject to backup withholding as a result of a failure to report all interest or dividends, or 
            (c) the IRS has notified me that I am no longer subject to backup withholding, and
        </p>
        <p>
            I am a U.S. person (including a U.S. resident alien).
        </p>
        </div>
        <fieldset class="signature">
            <label for="@idprefix-signature">Your Signature:</label><input id="@idprefix-signature" type="text" name="tin-signature" value="@getTaxData("tin-signature")"/><span class="info">(typing in your name acts as your signature)</span>
        </fieldset>
        <p class="info">
            The date and time of submission and your computer's IP address will be recorded when you click Submit.
        </p>
    </fieldset>
    <fieldset class="actions">
        <button class="save main-action" type="submit">Submit</button>
    </fieldset>
</form>