@using WebMatrix.Data;
@using WebMatrix.WebData;
@{
    dynamic alerts = null;
    using (var db = Database.Open("sqlloco")) {
        alerts = db.Query(@"
            SELECT *
            FROM    Alert As A
                     INNER JOIN
                    UserAlert As UA
                      ON A.AlertID = UA.AlertID
            WHERE   UA.UserID = @0
        ", WebSecurity.CurrentUserId);
    }
}
@functions{ string getCompleteAlertUrl(dynamic alert){
    switch ((string)alert.AlertName) {
        case "personalinfo":
        case "socialmediaverification":
        case "basicinfoverification":
            return (UrlUtil.LangPath + "Dashboard/Account/#account-personal");
        case "backgroundcheck":
            return (UrlUtil.LangPath + "Dashboard/Positions/#position" + alert.PositionID + "-backgroundcheck");
        case "photo":
            return ("javascript:$('#changephoto').click()");
        case "payment":
            return (UrlUtil.LangPath + "Dashboard/Account/#account-payments");
        case "taxdocs":
            return (UrlUtil.LangPath + "Dashboard/Account/#account-taxes");
        case "availability":
            return (UrlUtil.LangPath + "Dashboard/Calendar/#availability-form");
        case "pricingdetails":
            return (UrlUtil.LangPath + "Dashboard/Positions/#position" + alert.PositionID + "-pricing");
        case "providerlogin":
            return (UrlUtil.LangPath + "Dashboard/Account/#account-terms");
        case "positionservices":
            return (UrlUtil.LangPath + "Dashboard/Positions/#position" + alert.PositionID + "-services");
        case "referencerequests":
            return (UrlUtil.LangPath + "Dashboard/Positions/#position" + alert.PositionID + "-reviews");
        case "professionallicense":
            return (UrlUtil.LangPath + "Dashboard/Positions/#position" + alert.PositionID + "-licenses");
        case "verifyemail":
        default:
            return null;
    }
 }
}
@if (alerts != null && alerts.Count > 0)
{
<div id="dashboard-alerts">
    <a class="more previous" href="#previous">Previous alerts</a>
    <ul>
        @foreach (var alert in alerts)
        {
            var completeUrl = getCompleteAlertUrl(alert);
            <li>
                <h5>@alert.AlertHeadlineDisplay</h5>
                <p>@alert.AlertTextDisplay</p>
                @if (completeUrl != null){
                    <a class="more" href="@completeUrl">Complete &gt;&gt;</a>
                }
            </li>
        }
    </ul>
    <a class="more next" href="#next">Next alerts</a>
</div><!-- dashboard-alerts -->
}