@using Braintree;
@using WebMatrix.Data;
@{
    var idprefix = "account-payments-bankinfo";
    var user = PageData["userow"] ?? DashboardFunctions.GetUserRow();
    
    BraintreeGateway gateway = null;
    Customer customer = null;
    
    try{
        gateway = LcPayment.NewBraintreeGateway();
    } catch {
        ModelState.AddFormError("There was an error communicating with our secure data store, please try again later.");
    }
    
    if (ModelState.IsValid) {
        if (!IsPost) {
            // Try to get the data from this customer, if was previosly saved or user exist at Braintree
            try {
                customer = gateway.Customer.Find(user.UserID.ToString());
                PageData["customer"] = customer;
            }
            //} catch (Braintree.Exceptions.NotFoundException ex){ // Customer don't exist exception
            catch { }
        } else {
     
            // Get form data:
            var tinData = new Dictionary<string, string>();
            foreach (var k in Request.Form.AllKeys) {
                // "tin-" general prefix
                if (k.StartsWith("bank_")) {
                    tinData.Add(k, Request.Form[k]);
                }
            }
            
            CustomerRequest request = new CustomerRequest{
                //need to pass in the userid from the cookie
                Id = user.UserID.ToString(),
                CustomFields = tinData
            };

            var result = gateway.Customer.Create(request);
            if (result.IsSuccess()){
                CommonHelpers.ReturnJsonResult(0, "Data saved!");
            } else {
                foreach (var row in result.Errors.DeepAll())
                {
                    if (Context.IsDebuggingEnabled) {
                        ModelState.AddFormError(row.Code.ToString() + ": " + row.Message);
                    } else {
                        ModelState.AddFormError(row.Message);
                    }
                }
            }
        }
    }
}
@functions{
    string getData(string fieldname) {
        var c = (Customer)PageData["customer"];
        if (c != null && c.CustomFields.ContainsKey(fieldname)) {
            return (string)c.CustomFields[fieldname];
        } else {
            return Request[fieldname];
        }
    }
}
<p class="setting-instructions">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer justo lorem, egestas quis fermentum a, rutrum sed justo. Duis nulla tellus.
</p>
<form method="post" id="@idprefix-form">
    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
    <div class="col col-2 col-2-1">
        <fieldset id="@idprefix-fs-contactinfo" class="contact-info">
            <legend>Name on account:</legend>
            <ul>
                <li><label for="@idprefix-bankaccount-firstname">First Name:</label><input id="@idprefix-bankaccount-firstname" type="text" name="bank_firstname" value="@getData("bank_firstname")"/></li>
                <li><label for="@idprefix-bankaccount-middleinitial">Middle Initial:</label><input id="@idprefix-bankaccount-middleinitial" type="text" name="bank_middleinitial" value="@getData("bank_middleinitial")"/></li>
                <li><label for="@idprefix-bankaccount-lastname">Last Name:</label><input id="@idprefix-bankaccount-lastname" type="text" name="bank_lastname" value="@getData("bank_lastname")"/></li>
            </ul>
        </fieldset>
        <fieldset id="@idprefix-fs-bankinfo">
            <legend>Bank Name and Address:</legend>
            <ul>
                <li><label for="@idprefix-bankname">Bank Name:</label><input id="@idprefix-bankname" type="text" name="bank_bankname" value="@getData("bank_bankname")"/></li>
                <li><label for="@idprefix-streetaddress1">Street Address 1:</label><input id="@idprefix-streetaddress1" type="text" name="bank_streetaddress1" value="@getData("bank_streetaddress1")"/></li>
                <li><label for="@idprefix-streetaddress2">Street Address 2:</label><input id="@idprefix-streetaddress2" type="text" name="bank_streetaddress2" value="@getData("bank_streetaddress2")"/></li>
                <li><label for="@idprefix-city">City:</label><input id="@idprefix-city" type="text" name="bank_city" value="@getData("bank_city")"/></li>
                <li><label for="@idprefix-state">State:</label>
                    <select id="@idprefix-state" name="bank_state">
                        @CommonHelpers.StateProvinceOptions(getData("bank_state"))
                    </select>
                </li>
                <li><label for="@idprefix-zipcode">Zip Code:</label><input id="@idprefix-zipcode" type="text" name="bank_zipcode" value="@getData("bank_zipcode")"/></li>
                <li><label for="@idprefix-phone">Phone:</label><input id="@idprefix-phone" type="text" name="bank_phone" value="@getData("bank_phone")"/></li>
            </ul>
        </fieldset>
    </div>
    <div class="col col-2 col-2-2">
        <fieldset id="@idprefix-fs-accountnumber">
            <legend>Bank Account Number:</legend>
            <ul>
                <li><label for="@idprefix-accountnumber-aba">ABA Routing Number (9 digits):</label><input type="text" id="@idprefix-accountnumber-aba" name="bank_aba" value="@getData("bank_aba")"/></li>
                <li><label for="@idprefix-accountnumber-accountnumber">Account Number:</label><input type="text" id="@idprefix-accountnumber-accountnumber" name="bank_accountnumber" value="@getData("bank_accountnumber")"/></li>
            </ul>
        </fieldset>
        <fieldset id="@idprefix-fs-accounttype">
            <legend>Bank Account Type:</legend>
            <ul>
                <li><input type="radio" id="@idprefix-accounttype-checking" name="bank_accounttype" @CommonHelpers.IsChecked(getData("bank_accounttype"), "checking") value="checking"/><label for="@idprefix-accounttype-checking">Checking</label></li>
                <li><input type="radio" id="@idprefix-accounttype-savings" name="bank_accounttype" @CommonHelpers.IsChecked(getData("bank_accounttype"), "savings") value="savings"/><label for="@idprefix-accounttype-savings">Savings</label></li>
            </ul>
        </fieldset>
    </div>
    <fieldset class="actions">
        <button class="save main-action" type="submit">Submit</button>
    </fieldset>
</form>