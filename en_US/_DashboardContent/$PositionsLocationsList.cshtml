@using WebMatrix.Data;
@{
    var u = LcData.UserInfo.GetUserRow();
    var p = LcData.UserInfo.GetUserCurrentPos();
    var n = p.PositionID;

    if (IsPost){
        
        using (var db = Database.Open("sqlloco")) {
            // Set addresses as Active or not depending on the yes/no buttons
            db.Execute(@"
                UPDATE  ServiceAddress
                SET     Active = @2
                WHERE   UserID = @0
                         AND PositionID = @1
                         AND TravelFromLocation = 1
            ", u.UserID, p.PositionID, Request["positionlocations-itravel"].AsBool());
            db.Execute(@"
                UPDATE  ServiceAddress
                SET     Active = @2
                WHERE   UserID = @0
                         AND PositionID = @1
                         AND ServicesPerformedAtLocation = 1
            ", u.UserID, p.PositionID, Request["positionlocations-iworkon"].AsBool());
        }
    }
    
    dynamic workLocations = null, travelLocations = null;

    var sqlcondWorkLocations = " AND ServicesPerformedAtLocation = 1";
    var sqlcondTravelLocations = " AND TravelFromLocation = 1";

    using (var db = Database.Open("sqlloco")) {
        workLocations = db.Query(LcData.sqlGetAddresses + sqlcondWorkLocations, u.UserID, p.PositionID);
        travelLocations = db.Query(LcData.sqlGetAddresses + sqlcondTravelLocations, u.UserID, p.PositionID);
    }
    
    bool itravelActive = false, iworkonActive = false;
    foreach (var l in travelLocations){
        if (l.Active) {
            itravelActive = true;
            break;
        }
    }
    foreach (var l in workLocations){
        if (l.Active) {
            iworkonActive = true;
            break;
        }
    }
}
@helper printAddress(string contId, dynamic address){
    var cid = String.IsNullOrWhiteSpace(contId) ? "" : "id='" + contId + "'";

        <div class="address" @Html.Raw(cid) data-location-id="@address.AddressID" data-location-name="@address.AddressName">
            <span class="address-name">@address.AddressName</span>
            <span class="address-line">
                <span class="address-line1">@address.AddressLine1</span>
                <span class="address-line2">@address.AddressLine2</span>
            </span>
            <span class="address-city">@address.City</span>
            <span class="address-state">@address.StateProvinceCode</span>
            <span class="address-zipcode">@address.PostalCode</span>
            @if (address.TravelFromLocation) {
            <div class="travel-options">
                <span class="travel-radius-label">Transport radius: <span class="travel-radius">@address.ServiceRadiusFromLocation</span></span>
                <span class="travel-transport-label">I travel using primarly: <span class="travel-transport">@address.TransportTypeName</span></span>
            </div>
            }
            <div class="tools">
                <a href="#" class="edit">Edit</a>
                <a href="#" class="map">Map</a>
                <a href="#" class="delete">Remove</a>
            </div>
        </div>
}
<div class="lc-ressources">
    <div class="confirm-delete-location-message">Are you sure do you want to remove this location?</div>
    <div class="delete-location-loading-message">The location is being removed...</div>
</div>

    <form action="@(UrlUtil.LangPath)Dashboard/$PositionsLocations/" method="post" class="ajax ajax-box" id="position#@(n)-locations">
        <input type="hidden" name="PositionID" value="@p.PositionID"/>
        @LcHelpers.GetValidationScripts()
        @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
        <div class="col col-2 col-2-1">
            <fieldset class="positionlocations-itravel has-confirm locations-set" data-location-type="travel">
                <legend>I travel to clients:</legend>
                <div class="confirm positionlocations-itravel-confirm">
                    <label>Yes<input type="radio" @LcHelpers.IsChecked(true, itravelActive) name="positionlocations-itravel" value="True"/></label>
                    <label>No<input type="radio" @LcHelpers.IsChecked(false, itravelActive) name="positionlocations-itravel" value="False"/></label>
                </div>
                <a href="#" class="addlocation" data-extra-query="itravel=True">Add location</a>
                <fieldset class="positionlocations-itravelfrom">
                    <legend>I travel to clients from this location:</legend>
                    <ul class="travel-locations">
                    @foreach (var location in travelLocations)
                    {
                        <li>
                            @printAddress(null, location)
                        </li>
                    }
                    </ul>
                </fieldset>
            </fieldset>
        </div>
        <div class="col col-2 col-2-2">
            <fieldset class="positionlocations-servicelocations has-confirm locations-set" data-location-type="work">
                <legend>I perform services at specific locations:</legend>
                <div class="positionlocations-servicelocations-confirm confirm">
                    <label>Yes<input @LcHelpers.IsChecked(true, iworkonActive) type="radio" name="positionlocations-iworkon" value="True"/></label>
                    <label>No<input @LcHelpers.IsChecked(false, iworkonActive) type="radio" name="positionlocations-iworkon" value="False"/></label>
                </div>
                <a href="#" class="addlocation" data-extra-query="iworkon=True">Add location</a>
                <ul class="work-locations">
                    @foreach (var location in workLocations)
                    {
                        <li>
                            @printAddress(null, location)
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <fieldset class="actions">
            <button class="save main-action" type="submit">Save</button>
        </fieldset>
    </form>
