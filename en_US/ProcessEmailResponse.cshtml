@*
    This page recives a message body, reciver ID and a thread ID and delivers and email to the 
    corresponding destination. The message is also stored in the DDBB as part of the conversation(thread)

    INPUT:
    emailResponse: Body of the response email sended to the receiver.
    reciver ID: The receiver ID used to search for the email.
    thread ID: ID of the conversation between provider and user.
*@
@{
    var successMessage = "has been succesfully sent.(Testing Message)";
    var errorMessage = "The email was not sent. The code in the ProcessRequest page must provide an SMTP server name, a user name, a password, and a from address.(Testing Message)";
    var UserID = 0;
    if (WebSecurity.IsAuthenticated)
    {
        Layout = "~/en_US/_SiteLayout.cshtml";
        UserID = WebSecurity.CurrentUserId;
    }
    else
    {
        Response.Redirect("~/en_US/Account/Login");
    }

    var response = "";
    
    var emailResponse = Request["emailResponse"];

    var receiverID = Request["receiverID"];

    var threadID = Request["threadID"];
    int messageID = 0;
    
    //add template and response link to message body
    var responseLink = "http://localhost:1575/LoconomicsJB/en_US/EmailResponse?tmid=";
    
    var db = Database.Open("sqlloco");
    
    var receiversql = "select Email from userprofile up where up.userid = @0";
    var sqluser = "exec GetUserDetails @0";
    
    var receiver = db.QuerySingle(receiversql, receiverID);
    var userrow = db.QuerySingle(sqluser, UserID);
  
    var sysdate = DateTime.Now;

    
    var SQLINSERTMESSAGE=@"INSERT INTO dbo.Messages
                        (body,CreatedDate,UpdatedDate,ModifiedBy)
                        VALUES(@0,@1,@2,@3)";
    var SQLINSERTTHREADMESSAGE=@"INSERT INTO dbo.ThreadMessage
                        (messageID,threadID,fromID,toID,CreatedDate,UpdatedDate,ModifiedBy)
                        VALUES(@0,@1,@2,@3,@4,@5,@6)";
    
    try {
        //store the message in the DDBB(dbo.Messages)
        db.Execute(SQLINSERTMESSAGE, emailResponse, sysdate, sysdate, UserID);
        messageID = Convert.ToInt32(db.GetLastInsertId());
        //store the message-thread relation in the DDBB(dbo.ThreadMessage)
        db.Execute(SQLINSERTTHREADMESSAGE, messageID, threadID, UserID, receiverID, sysdate, sysdate, UserID);
        int tmid = Convert.ToInt32(db.GetLastInsertId()); 
        //add the thread id to the url querystring
        responseLink += Server.UrlEncode(tmid+"");
        
        // Send email
        WebMail.Send(receiver.Email,
            subject: "Loconomics message" ,
            body: emailResponse + " " +responseLink
        );
        response=successMessage;
    }
    catch {
        //TODO: if try block fails revert the transaction
        response=errorMessage;
    }
}
<div id="container">
    <form method="post" action="Default.cshtml">
        <p>Dear, <b>@userrow.FirstName</b>. your message:</p>

        <p><b>@emailResponse</b></p>

       <p>@response</p>
      
        <div>
            <input type="submit" value="Finish" />
        </div>
    </form>
</div>  