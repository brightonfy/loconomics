@{  
    var UserID = 0;
    //TODO: SET THE REQUEST TO PASS POSITION AND PAYMENT INFO
    var positionID = 14;// Request["PositionID"];//14(cleaner) for testing
    var paymentID = 1;// Request["PaymentID"];//1,2,3,4,5 for testing
    
    if (WebSecurity.IsAuthenticated){
        Layout = "~/en_US/_SiteLayout.cshtml";
        UserID = WebSecurity.CurrentUserId;
        Page.Title = "Customer Reviews.";
    }else{
        Response.Redirect("~/en_US/Account/Login?Redirect=~/en_US/ReviewsPage");
    }

    if(IsPost){
        var answer1 = Request["Question1"];
        var answer2 = Request["Question2"];
        var rating1 = Request["rating1"] == null ? "0" : Request["rating1"];
        var rating2 = Request["rating2"] == null ? "0" : Request["rating2"];
        var rating3 = Request["rating3"] == null ? "0" : Request["rating3"];
        var rating4 = Request["rating4"] == null ? "0" : Request["rating4"];
        //Hardcoded Rating ID (this should be changed)->create a key/value array with ratings and ratingID
        var rating1ID = 1;
        var rating2ID = 2;
        var rating3ID = 3;
        var rating4ID = 4;
        
        var publicreview = Request["Public Review"];
        var privatereview = Request["Private Review"];
        
        
        //STORE DATA IN THE DATA BASE
        var db = Database.Open("sqlloco");
        var SQLCHECK = @"SELECT rp.ReviewID
                        FROM dbo.UserReviews r
                        WHERE r.PaymentID=@0";
        var SQLSELECT = @"SELECT rs.ratingID, rs.score , rs.totalRatings
                        FROM dbo.ReviewScores rs
                        WHERE rs.positionID=@0 AND rs.userID=@1";
        var SQLINSERTSCORE = @"INSERT INTO dbo.ReviewScores
                            (ratingID,positionID,userID,score,totalRatings)
                            VALUES (@0,@1,@2,@3,@4)";
        var SQLINSERTREVIEW = @"INSERT INTO dbo.UserReviews 
                            (PublicReview,PrivateReview,Rating1,Rating2,Rating3,Rating4,Answer1,Answer2,CreatedDate,UpdatedDate,ModifiedBy) 
                            VALUES (@0,@1,@2,@3,@4,@5,@6,@7,@8,@9,@10)";
        try
        {
            var reviewID = db.Query(SQLCHECK,paymentID);
            //New review
            if(reviewID==null){
               
                //Look for existing scores
                var scores = db.Query(SQLSELECT,positionID,UserID);
                if(scores!=null){
                    //Update Scores
                    var newscore = 0;
                    foreach(var value in scores){
                        //update score
                        newscore = 0;
                        var score = Convert.ToInt32(value.score);
                        var totalRatings = Convert.ToInt32(value.totalRatings);
                        //TODO change if senteces for a key/value selection
                        if(value.ratingID=rating1ID){
                            newscore = ((score*totalRatings) + (Convert.ToInt32(rating1))) / (totalRatings + 1);
                        };
                        if (value.ratingID = rating2ID)
                        {
                            newscore = ((score*totalRatings) + (Convert.ToInt32(rating2))) / (totalRatings + 1);
                        };
                        if (value.ratingID = rating3ID)
                        {
                            newscore = ((score*totalRatings) + (Convert.ToInt32(rating3))) / (totalRatings + 1);
                        };
                        if (value.ratingID = rating4ID)
                        {
                            newscore = ((score*totalRatings) + (Convert.ToInt32(rating4))) / (totalRatings + 1);
                        };
                        //Save the updated scores
                        db.Execute(SQLINSERTSCORE,value.ratingID,positionID,UserID,newscore,totalRatings+1);
                    }
                }else{
                    //First scores for the positionID
                    db.Execute(SQLINSERTSCORE, rating1ID, positionID, UserID, rating1, 1);
                    db.Execute(SQLINSERTSCORE, rating2ID, positionID, UserID, rating2, 1);
                    db.Execute(SQLINSERTSCORE, rating3ID, positionID, UserID, rating3, 1);
                    db.Execute(SQLINSERTSCORE, rating4ID, positionID, UserID, rating4, 1);
                };
                //Store Data
                db.Execute(SQLINSERTREVIEW, publicreview, privatereview, rating1, rating2, rating3, rating4, answer1, answer2, System.DateTime.Now, System.DateTime.Now, UserID);
                    
            }else{
                //TODO: SEND ERROR MESSAGE TO THE USER: THE REVIEW FOR THIS SERVICE ALREADY EXIST
            };              
        }catch{
            Response.Redirect("~/en_US/ReviewsConfirmationPage?status=error");
        }
        Response.Redirect("~/en_US/ReviewsConfirmationPage?status=success");   
    }

}

  <div id="container" class="home clearfix"> 
    <div id="main" class="">
		<h1>@Page.Title</h1>
		<form id="userreview " action="@Href("~/en_US/ReviewsPage")" method="post">
			
            @Html.Label("Question1")
            <br />
            @Html.Label("yes")
            @Html.RadioButton("Question1",true,true)
            @Html.Label("no")
            @Html.RadioButton("Question1",false)
            <br />
            @Html.Label("Question2")
            <br />
            @Html.Label("yes")
            @Html.RadioButton("Question2",true,true)
            @Html.Label("no")
            @Html.RadioButton("Question2",false)
            <br />
            @Html.Label("rating1 ")
            <br /> 
            <input name="rating1" type="radio" class="star" value="1"/>
            <input name="rating1" type="radio" class="star" value="2"/>
            <input name="rating1" type="radio" class="star" value="3"/>
            <input name="rating1" type="radio" class="star" value="4"/>
            <input name="rating1" type="radio" class="star" value="5"/>
            <br /> 
            @Html.Label("rating2 ")
            <br /> 
            <input name="rating2" type="radio" class="star" value="1"/>
            <input name="rating2" type="radio" class="star" value="2"/>
            <input name="rating2" type="radio" class="star" value="3"/>
            <input name="rating2" type="radio" class="star" value="4"/>
            <input name="rating2" type="radio" class="star" value="5"/>
            <br />
            @Html.Label("rating3 ")
            <br /> 
            <input name="rating3" type="radio" class="star" value="1"/>
            <input name="rating3" type="radio" class="star" value="2"/>
            <input name="rating3" type="radio" class="star" value="3"/>
            <input name="rating3" type="radio" class="star" value="4"/>
            <input name="rating3" type="radio" class="star" value="5"/>
            <br />
             @Html.Label("rating4 ")
             <br /> 
            <input name="rating4" type="radio" class="star" value="1"/>
            <input name="rating4" type="radio" class="star" value="2"/>
            <input name="rating4" type="radio" class="star" value="3"/>
            <input name="rating4" type="radio" class="star" value="4"/>
            <input name="rating4" type="radio" class="star" value="5"/>
            <br />
            @Html.Label("Public Review")
            <br />
            @Html.TextArea("Public Review")
            <br />
            @Html.Label("Private Review")
            <br />
            @Html.TextArea("Private Review")
            <br />
            <input type="submit" value="Post Review" />
		</form>
    </div><!-- #main -->

  </div><!-- #container -->








