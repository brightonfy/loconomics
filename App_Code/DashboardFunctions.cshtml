@using WebMatrix.Data;
@using WebMatrix.WebData;
@functions {

    /* General: some functions created with code from old 'provider-dashboard-profile.cshtml' file
    */

    /* Get a data row with the User information identified with 'userId' from the database
    */
    public static dynamic GetUserRow(int userId) {

        // Commented unused vars:
        //var stringPosted = "Nothing";
        //var theDate = DateTime.Now.ToString("yyyy-MM-dd");
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow:" + userId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqluser = 
                    //"exec GetUserDetails @0";
                    // NOTE: UserID is needed!
                    // NOTE2: remove location details from this table and query, use GetUserWithContactData
                    @"
                        SELECT
                            a.UserID,
                            FirstName, 
                            LastName,
                            SecondLastName,
                            MiddleIn,
                            PostalCode,
                            Photo,
                            PreferredLanguageID,
                            PreferredCountryID,
                            IsCustomer,
                            IsProvider,
                            MobilePhone,
                            AlternatePhone,
                            AddressLine1,   
                            AddressLine2,
                            City,
                            StateProvinceID,
                            a.CountryID,
                            PostalCode,
                            a.CreatedDate As MemberSinceDate,
                            PublicBio,
                            BirthYear,
                            GenderID
                            ,UP.Email
                            --,ADD_Details 
                        from users A
                             INNER JOIN
                            UserProfile As UP
                              ON UP.UserID = A.UserID
                            -- left join dbo.userprofilepositionadditional b 
                            --  ON a.userid = b.userid
                        where a.UserID = @0
                    ";
                u = db.QuerySingle(sqluser, userId);
            }
            PageData["userow:" + userId.ToString()] = u;
        }
        return u;
    }
    public static dynamic GetUserRowWithContactData(int userId) {
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow:" + userId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqluser = 
                    //"exec GetUserDetails @0";
                    // NOTE: UserID is needed!
                    @"
                        SELECT
                            U.UserID
                            ,U.FirstName
                            ,U.LastName
                            ,U.MiddleIn
                            ,U.CreatedDate As MemberSinceDate
                            ,U.PublicBio
                            ,U.MobilePhone
                            ,P.Email
                            ,U.BirthYear
                            ,U.GenderID

                            ,Photo
                            ,PreferredLanguageID
                            ,PreferredCountryID
                            ,IsCustomer
                            ,IsProvider
                            ,MobilePhone
                            ,AlternatePhone

                            ,L.AddressLine1
                            ,L.AddressLine2
                            ,L.City
                            ,SP.StateProvinceName
                            ,SP.StateProvinceCode
                            ,PC.PostalCode

                        FROM
                            Users As U
                             INNER JOIN
                            UserProfile As P
                              ON P.UserID = U.UserID
                             LEFT JOIN
                            ServiceAddress As L
                              ON L.UserID = U.UserID
                                AND L.PreferredAddress = 1
                             LEFT JOIN
                            StateProvince As SP
                              ON SP.StateProvinceID = L.StateProvinceID
                             LEFT JOIN
                            PostalCode As PC
                              ON PC.PostalCodeID = L.PostalCodeID

                        WHERE U.UserID = @0
                    ";
                u = db.QuerySingle(sqluser, userId);
            }
            PageData["userow:" + userId.ToString()] = u;
        }
        return u;
    }
    /* Get a data row with the current user information from the database
    */
    public static dynamic GetUserRow() {
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow"];
        if (u == null){
            u = GetUserRow(WebSecurity.CurrentUserId);
            PageData["userow"] = u;
        }
        return u;
    }
    /* Get a data object with the Positions rows of the user identified with 'userId' from the database
    */
    public static dynamic GetUserPos(int userId){
        
        var poss = PageData["userposrows:" + userId.ToString()];
        if (poss == null) {
            using (var db = Database.Open("sqlloco")) {
                var sqlpositions = "select a.UserID, a.PositionID, case when a.Active = 0 then 'not active' else 'active' end as active, PositionSingular, a.UpdatedDate  from dbo.userprofilepositions a join  positions c on a.PositionID = c.PositionID and a.CountryID = c.CountryID and a.LanguageID = c.LanguageID where a.UserID = @0 and c.LanguageID = 1 and c.CountryID = 1";
                poss = db.Query(sqlpositions, userId);
            }
            PageData["userposrows:" + userId.ToString()] = poss;
        }
        return poss;
    }
    /* Get a data object with the Positions rows of the current user from the database
    */
    public static dynamic GetUserPos(){
        var poss = PageData["posrows"];
        if (poss == null) {
            poss = GetUserPos(WebSecurity.CurrentUserId);
            PageData["posrows"] = poss;
        }
        return poss;
    }
    /* Get a data object with the Position row of the user 'userId' with PositionId 'posId' from the database
     */
    public static dynamic GetUserPos(int userId, int posId) {
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userpos:" + userId.ToString() + ":" + posId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqlpositions = @"
                    SELECT  a.UserID, a.PositionID, case when a.Active = 0 then 'not active' else 'active' end as active, 
                            PositionSingular, a.UpdatedDate
                    FROM    dbo.userprofilepositions a join positions c on a.PositionID = c.PositionID 
                    WHERE   a.UserID = @0 and a.PositionID = @1 and c.LanguageID = 1 and c.CountryID = 1";
                u = db.QuerySingle(sqlpositions, userId, posId);
            }
            PageData["userpos:" + userId.ToString() + ":" + posId.ToString()] = u;
        }
        return u;
    }
    public static dynamic GetUserCurrentPos() {
        if (PageData["position"] == null) {
            PageData["position"] = GetUserPos(WebSecurity.CurrentUserId, Request["positionid"].AsInt());
        }
        return PageData["position"];
    }
    public static string CssCurrent(string a, string b){
        return (a == b ? "current" : "");
    }
}