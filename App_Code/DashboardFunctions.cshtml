@using WebMatrix.Data;
@using WebMatrix.WebData;
@functions {

    /* General: some functions created with code from old 'provider-dashboard-profile.cshtml' file
    */

    /* Get a data row with the User information identified with 'userId' from the database
    */
    public static dynamic GetUserRow(int userId) {

        // Commented unused vars:
        //var stringPosted = "Nothing";
        //var theDate = DateTime.Now.ToString("yyyy-MM-dd");
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow:" + userId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqluser = 
                    //"exec GetUserDetails @0";
                    // NOTE: UserID is needed!
                    @"
                        SELECT
                            a.UserID,
                            FirstName, 
                            LastName,
                            SecondLastName,
                            MiddleIn,
                            PostalCode,
                            Photo,
                            PreferredLanguageID,
                            PreferredCountryID,
                            IsCustomer,
                            IsProvider,
                            MobilePhone,
                            AlternatePhone,
                            AddressLine1,   
                            AddressLine2,
                            City,
                            StateProvinceID,
                            a.CountryID,
                            PostalCode,
                            ADD_Details 
                        from users a 
                        left join dbo.userprofilepositionadditional b 
                        on a.userid = b.userid  where a.UserID = @0
                    ";
                u = db.QuerySingle(sqluser, userId);
            }
            PageData["userow:" + userId.ToString()] = u;
        }
        return u;
    }
    /* Get a data row with the current user information from the database
    */
    public static dynamic GetUserRow() {
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow"];
        if (u == null){
            u = GetUserRow(WebSecurity.CurrentUserId);
            PageData["userow"] = u;
        }
        return u;
    }
    /* Get a data object with the Positions rows of the user identified with 'userId' from the database
    */
    public static dynamic GetUserPos(int userId){
        
        var poss = PageData["userposrows:" + userId.ToString()];
        if (poss == null) {
            using (var db = Database.Open("sqlloco")) {
                var sqlpositions = "select a.UserID, a.PositionID, case when a.Active = 0 then 'not active' else 'active' end as active, PositionSingular, a.UpdatedDate  from dbo.userprofilepositions a join  positions c on a.PositionID = c.PositionID and a.CountryID = c.CountryID and a.LanguageID = c.LanguageID where a.UserID = @0 and c.LanguageID = 1 and c.CountryID = 1";
                poss = db.Query(sqlpositions, userId);
            }
            PageData["userposrows:" + userId.ToString()] = poss;
        }
        return poss;
    }
    /* Get a data object with the Positions rows of the current user from the database
    */
    public static dynamic GetUserPos(){
        var poss = PageData["posrows"];
        if (poss == null) {
            poss = GetUserPos(WebSecurity.CurrentUserId);
            PageData["posrows"] = poss;
        }
        return poss;
    }
    /* Get a data object with the Position row of the user 'userId' with PositionId 'posId' from the database
     */
    public static dynamic GetUserPos(int userId, int posId) {
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userpos:" + userId.ToString() + ":" + posId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqlpositions = @"
                    SELECT  a.UserID, a.PositionID, case when a.Active = 0 then 'not active' else 'active' end as active, 
                            PositionSingular, a.UpdatedDate
                    FROM    dbo.userprofilepositions a join positions c on a.PositionID = c.PositionID 
                    WHERE   a.UserID = @0 and a.PositionID = @1 and c.LanguageID = 1 and c.CountryID = 1";
                u = db.QuerySingle(sqlpositions, userId, posId);
            }
            PageData["userpos:" + userId.ToString() + ":" + posId.ToString()] = u;
        }
        return u;
    }
    public static dynamic GetUserCurrentPos() {
        if (PageData["position"] == null) {
            PageData["position"] = GetUserPos(WebSecurity.CurrentUserId, Request["positionid"].AsInt());
        }
        return PageData["position"];
    }
    /* Function create with copying the code from the old 'provider-dashboard-profile.cshtml' file,
        must be used in the appropiated Dashboard page by back-end code.
      TODO: Un-used function
    */
    public static void ProcessProfileForm(){
        if(IsPost){
            var UserID = WebSecurity.CurrentUserId;
            var db = Database.Open("sqlloco");
            
            var sqlupdatephoto ="update users set Photo = @0 where UserID = @1";
            var sqlupdateabout ="update dbo.userprofilepositionadditional set ADD_Details = @0  where UserID = @1";
            WebImage photo = null;
            var newFileName = "";
            var imagePath = "";
            var imageThumbPath  = "";
            var aboutMe = Request.Form["aboutMeText"];
            photo = WebImage.GetImageFromRequest();
            db.Query(sqlupdateabout,aboutMe,UserID);
            if(photo != null){
                newFileName = Guid.NewGuid().ToString() + "_" +
                Path.GetFileName(photo.FileName);
                imagePath = @"img\" + newFileName;
                photo.Save(UrlUtil.AppPath + imagePath);
                imageThumbPath = @"img\thumbs\" + newFileName;
                photo.Resize(width: 180, height: 180, preserveAspectRatio: true,
                preventEnlarge: true);
                photo.Save(UrlUtil.AppPath + imageThumbPath);
                db.Query(sqlupdatephoto,imageThumbPath,UserID);
            }
        }
    }
    public static string CssCurrent(string a, string b){
        return (a == b ? "current" : "");
    }
}