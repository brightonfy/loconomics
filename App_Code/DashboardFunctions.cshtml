@using WebMatrix.Data;
@using WebMatrix.WebData;
@functions {

    /* General: some functions created with code from old 'provider-dashboard-profile.cshtml' file
    */

    /* Get a data row with the User information identified with 'userId' from the database
    */
    public static dynamic GetUserRow(int userId) {

        // Commented unused vars:
        //var stringPosted = "Nothing";
        //var theDate = DateTime.Now.ToString("yyyy-MM-dd");
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow:" + userId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqluser = 
                    //"exec GetUserDetails @0";
                    // NOTE: UserID is needed!
                    // NOTE2: remove location details from this table and query, use GetUserWithContactData
                    @"
                        SELECT
                            a.UserID,
                            FirstName, 
                            LastName,
                            SecondLastName,
                            MiddleIn,
                            (dbo.fx_concat(dbo.fx_concat(dbo.fx_concat(FirstName, dbo.fx_concatBothOrNothing(MiddleIn, '.', ''), ' '), LastName, ' '), SecondLastName, ' ')) As FullName,
                            Photo,
                            PreferredLanguageID,
                            PreferredCountryID,
                            coalesce(IsAdmin, cast(0 as bit)) As IsAdmin,
                            IsCustomer,
                            IsProvider,
                            (CASE WHEN IsProvider=1 AND (
                                SELECT count(*) FROM UserProfilePositions As UPS WHERE UPS.UserID = A.UserID AND UPS.Active=1
                                ) > 0 THEN Cast(1 As bit)
                                ELSE Cast(0 As bit)
                            END) As IsActiveProvider,
                            MobilePhone,
                            AlternatePhone,
                            AddressLine1,   
                            AddressLine2,
                            A.City,
                            A.StateProvinceID,
                            SP.StateProvinceName,
                            SP.StateProvinceCode,
                            A.CountryID,
                            PC.PostalCode,
                            A.PostalCodeID,
                            a.CreatedDate As MemberSinceDate,
                            PublicBio,
                            BirthYear,
                            GenderID
                            ,UP.Email
                            ,IAuthZumigoVerification
                            ,IAuthZumigoLocation
                            --,ADD_Details 
                        from users A
                             INNER JOIN
                            UserProfile As UP
                              ON UP.UserID = A.UserID
                             LEFT JOIN
                            StateProvince As SP
                              ON SP.StateProvinceID = A.StateProvinceID
                             LEFT JOIN
                            PostalCode As PC
                              ON PC.PostalCodeID = A.PostalCodeID
                            -- left join dbo.userprofilepositionadditional b 
                            --  ON a.userid = b.userid
                        where a.UserID = @0
                    ";
                u = db.QuerySingle(sqluser, userId);
            }
            PageData["userow:" + userId.ToString()] = u;
        }
        return u;
    }
    public static dynamic GetUserRowWithContactData(int userId) {
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow:" + userId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqluser = 
                    //"exec GetUserDetails @0";
                    // NOTE: UserID is needed!
                    @"
                        SELECT
                            U.UserID
                            ,U.FirstName
                            ,U.LastName
                            ,SecondLastName
                            ,MiddleIn
                            ,(dbo.fx_concat(dbo.fx_concat(dbo.fx_concat(FirstName, dbo.fx_concatBothOrNothing(MiddleIn, '.', ''), ' '), LastName, ' '), SecondLastName, ' ')) As FullName
                            ,U.CreatedDate As MemberSinceDate
                            ,U.PublicBio
                            ,U.MobilePhone
                            ,P.Email
                            ,U.BirthYear
                            ,U.GenderID

                            ,Photo
                            ,PreferredLanguageID
                            ,PreferredCountryID
                            ,coalesce(IsAdmin, cast(0 as bit)) As IsAdmin
                            ,IsCustomer
                            ,IsProvider
                            ,(CASE WHEN IsProvider=1 AND (
                                SELECT count(*) FROM UserProfilePositions As UPS WHERE UPS.UserID = U.UserID AND UPS.Active=1
                                ) > 0 THEN Cast(1 As bit)
                                ELSE Cast(0 As bit)
                            END) As IsActiveProvider
                            ,MobilePhone
                            ,AlternatePhone

                            ,L.AddressLine1
                            ,L.AddressLine2
                            ,L.City
                            ,SP.StateProvinceName
                            ,SP.StateProvinceCode
                            ,PC.PostalCode

                        FROM
                            Users As U
                             INNER JOIN
                            UserProfile As P
                              ON P.UserID = U.UserID
                             LEFT JOIN
                            ServiceAddress As L
                              ON L.UserID = U.UserID
                                AND L.PreferredAddress = 1
                             LEFT JOIN
                            StateProvince As SP
                              ON SP.StateProvinceID = L.StateProvinceID
                             LEFT JOIN
                            PostalCode As PC
                              ON PC.PostalCodeID = L.PostalCodeID

                        WHERE U.UserID = @0
                    ";
                u = db.QuerySingle(sqluser, userId);
            }
            PageData["userow:" + userId.ToString()] = u;
        }
        return u;
    }
    /* Get a data row with the current user information from the database
    */
    public static dynamic GetUserRow() {
        if (!WebSecurity.IsAuthenticated) return null;
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userow"];
        if (u == null){
            PageData["userow"] = u = GetUserRow(WebSecurity.CurrentUserId);
        }
        return u;
    }
    public static dynamic GetRequestedUserRow(int userid = 0) {
        var u = PageData["requesteduserrow"];
        if (u == null || u != null && userid > 0 && u.UserID != userid) {
            if (userid == 0) {
                userid = Request["userid"].AsInt();
            }
            PageData["requesteduserrow"] = u = GetUserRow(userid);
        }
        return u;
    }
    /* Get a data object with the Positions rows of the user identified with 'userId' from the database
    */
    public static dynamic GetUserPos(int userId, bool onlyActivePositions = false){
        
        var poss = PageData["userposrows:" + userId.ToString()];
        if (poss == null) {
            using (var db = Database.Open("sqlloco")) {
                var sqlpositions = @"
                    SELECT a.UserID, a.PositionID, 
                        case when a.Active = 0 then 'not active' else 'active' end as active,
                        PositionSingular, a.UpdatedDate, a.PositionIntro
                    FROM dbo.userprofilepositions a join
                        positions c on a.PositionID = c.PositionID and a.CountryID = c.CountryID and a.LanguageID = c.LanguageID
                    WHERE a.UserID = @0 and c.LanguageID = 1 and c.CountryID = 1
                        AND (@1 = 0 OR a.Active = 1)
                ";
                poss = db.Query(sqlpositions, userId, onlyActivePositions ? 1 : 0);
            }
            PageData["userposrows:" + userId.ToString()] = poss;
        }
        return poss;
    }
    /* Get a data object with the Positions rows of the current user from the database
    */
    public static dynamic GetUserPos(bool onlyActivePositions = false){
        var poss = PageData["posrows"];
        if (poss == null) {
            poss = GetUserPos(WebSecurity.CurrentUserId);
            PageData["posrows"] = poss;
        }
        return poss;
    }
    /* Get a data object with the Position row of the user 'userId' with PositionId 'posId' from the database
     */
    public static dynamic GetUserPos(int userId, int posId) {
        
        // Implemented a basic, per-page, cache, faster and simplified for each page
        var u = PageData["userpos:" + userId.ToString() + ":" + posId.ToString()];
        if (u == null){
            using (var db = Database.Open("sqlloco")){
                var sqlpositions = @"
                    SELECT  a.UserID, a.PositionID, case when a.Active = 0 then 'not active' else 'active' end as active, 
                            PositionSingular, a.UpdatedDate, a.PositionIntro
                    FROM    dbo.userprofilepositions a join positions c on a.PositionID = c.PositionID 
                    WHERE   a.UserID = @0 and a.PositionID = @1 and c.LanguageID = 1 and c.CountryID = 1";
                u = db.QuerySingle(sqlpositions, userId, posId);
            }
            PageData["userpos:" + userId.ToString() + ":" + posId.ToString()] = u;
        }
        return u;
    }
    public static dynamic GetUserCurrentPos() {
        if (PageData["position"] == null) {
            PageData["position"] = GetUserPos(WebSecurity.CurrentUserId, Request["positionid"].AsInt());
        }
        return PageData["position"];
    }
    public static dynamic GetCurrentRequestedUserPos() {
        if (PageData["position"] == null) {
            int userid = Request["UserID"].AsInt();
            userid = userid == 0 ? PageData["requesteduserrow"] != null ? PageData["requesteduserrow"].UserID : WebSecurity.CurrentUserId : userid;
            PageData["position"] = GetUserPos(userid, Request["positionid"].AsInt());
        }
        return PageData["position"];
    }
    public static string CssCurrent(string a, string b){
        return (a == b ? "current" : "");
    }
}