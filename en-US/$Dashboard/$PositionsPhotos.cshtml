@using WebMatrix.Data;
@{
    LcHelpers.ProviderPage();
    // Current position data record:
    var p = LcData.UserInfo.GetUserCurrentPos();
    var n = p.PositionID;
    
    string photosFolder = LcUrl.AppPath + "img/userphotos/u" + p.UserID.ToString() + "/";
    Validation.Add("photo-caption", Validator.StringLength(50, 0, "Photo caption must be fewer than 50 characters."));

    if (IsPost) {
        
        var beforePositionStatuses = LcData.UserInfo.GetUserPositionsStatuses((int)p.UserID);
        
        using (var db = Database.Open("sqlloco")) {
            
            var delete = Request["delete-photo"].AsBool();
            var photoID = Request["PhotoID"].AsInt();
            if (delete) {
                // Delete file from database, checking if exist more than one record
                // using the same image file, returning the PhotoAddress when there is
                // no more records sharing that address, and 'empty string' when there is more and
                // cannot be removed (without know the address, cannot be removed ;-)
                string photoAddress = db.QueryValue(@"
                    DECLARE @PhotoID int
                    SET @PhotoID = @0

                    -- Retrieving the PhotoAddress
                    DECLARE @address varchar(2073)
                    SELECT  @address = PhotoAddress
                    FROM    ProviderServicePhoto
                    WHERE   ProviderServicePhotoID = @PhotoID
                             AND UserID = @1 AND PositionID = @2

                    DELETE FROM ProviderServicePhoto WHERE ProviderServicePhotoID = @PhotoID
                            AND UserID = @1 AND PositionID = @2

                    -- Checking if there are more records with the same file, or returning the address
                    IF 0 = (SELECT  count(*)
                            FROM    ProviderServicePhoto
                            WHERE   PhotoAddress like @address
                                    AND UserID = @1 AND PositionID = @2)
                        SELECT @address As PhotoAddress
                    ELSE
                        SELECT '' As PhotoAddress

                    -- Test Alert
                    EXEC TestAlertShowcaseWork @1, @2
                ", photoID, p.UserID, p.PositionID);
                
                if (!String.IsNullOrEmpty(photoAddress)) {
                    // Remove file from user folder
                    try{
                        File.Delete(Server.MapPath(photosFolder + photoAddress));
                    }catch{
                        throw new Exception("Photo file could not be deleted");
                    }
                }
            } else {
                var caption = Request["photo-caption"];
                var isPrimary = Request["is-primary-photo"].AsBool();
        
                db.Execute(@"
                    IF @2 = 1 BEGIN
                        UPDATE ProviderServicePhoto SET
                            IsPrimaryPhoto = 0
                        WHERE   UserID = @3 AND PositionID = @4
                    END

                    UPDATE ProviderServicePhoto SET
                        PhotoCaption = @1
                        ,IsPrimaryPhoto = @2
                    WHERE   ProviderServicePhotoID = @0 AND UserID = @3 AND PositionID = @4

                    -- Test Alert
                    EXEC TestAlertShowcaseWork @3, @4
                ", photoID, caption, isPrimary, p.UserID, p.PositionID);
            }
            // Indiferent if we are on 'delete' task or 'update details', we try to save the photo gallery
            // order (RankPosition field on database) if there are data abou it
            var galleryOrder = Request["gallery-order"];
            if (!String.IsNullOrEmpty(galleryOrder)) {
                // Comma separated values with the html element IDs that have the format 'UserPhoto-PHOTOID'
                // where PHOTOID is a number with the database record ID.
                // Reading that order and sending to the server
                int orderIndex = 0;
                foreach (var go in galleryOrder.Split(',')) {
                    // If we have a valid ID (integer number)
                    var goID = go.Replace("UserPhoto-", "").AsInt();
                    if (goID > 0) {
                        // Save order to the database
                        db.Execute(@"
                            UPDATE  ProviderServicePhoto
                            SET     RankPosition = @1
                            WHERE   ProviderServicePhotoID = @0
                        ", goID, ++orderIndex);
                    }
                }
            }
            
            // Show the profile activation popup with 'next-step' buttons and progress information when need,
            // if not the short message is showed:
            if (!LcHelpers.UseProfileActivationPopup(beforePositionStatuses,
                p.UserID,
                LcRessources.DataSaved,
                LcRessources.OK))
            {
                LcHelpers.ReturnJsonResult(5, LcRessources.ShortDataSaved);
            }
        }
    }
    
    dynamic photos = null;
    using (var db = Database.Open("sqlloco")) {
        photos = db.Query(@"
            SELECT [ProviderServicePhotoID]
                  ,[PhotoCaption]
                  ,[PhotoAddress]
                  ,[IsPrimaryPhoto]
              FROM [providerservicephoto]
              WHERE UserID = @0 AND PositionID = @1 AND Active = 1
              ORDER BY RankPosition
        ", p.UserID, p.PositionID);
    }
}
<p class="setting-instructions">
Nothing like a glossy photo. Images of your hard work help clients visualize what, exactly, you provide. Upload some shots here by dragging and dropping them in the order you’d like. Click “save” to immortalize your work. And, as always, <a href="mailto:providerhelp@loconomics.com">let us know</a> if you have questions or suggestions.
</p>
<div>
<form action="@(LcUrl.LangPath)$Dashboard/$PositionsPhotos/" method="post" class="positionphotos ajax ajax-box" id="position#@(n)-photos">
    <input type="hidden" name="PositionID" value="@p.PositionID"/>
    <input type="hidden" name="gallery-order" value=""/>
    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
    <div id="position[@n]photos-no-photos" class="no-photos">
        <span class="positionphotos-tools-upload">Start by <a href="#">uploading</a> a photo!</span>
    </div>
    <div id="position[@n]photos-no-primary-photo" class="no-primary-photo">
        Select a photo from the right as your primary photo.
    </div>
    <fieldset class="positionphotos-edit">
        <legend>Edit this photo:</legend>
        <input type="hidden" name="PhotoID" value="" />
        <ul>
            <li class="positionphotos-edit-photo"><img alt="Photo to edit" src="@(LcUrl.AppPath)img/theme/user-photo-no-selected.png" /></li>
            <li class="positionphotos-edit-caption">
                <label for="position#@(n)-photos-edit-caption">Caption:</label>
                <input type="text" id="position#@(n)-photos-edit-caption" name="photo-caption"/>
            </li>
            <li class="positionphotos-edit-primary">
                <h6>Make primary photo?</h6>
                <label>Yes<input type="radio" name="is-primary-photo" value="True"/></label>
                <label>No<input type="radio" name="is-primary-photo" value="False"/></label>
            </li>
            <li class="positionphotos-edit-delete">
                <a href="#">Delete this photo</a>
                <input type="hidden" name="delete-photo" value="False" />
            </li>
        </ul>
    </fieldset>
    <fieldset class="positionphotos-gallery">
        <legend>Stored photos:</legend>
        <ol>
            @foreach (var photo in photos)
            {
                <li id="UserPhoto-@photo.ProviderServicePhotoID" class="@(photo.IsPrimaryPhoto ? "selected is-primary-photo" : "")"><a href="#"><img alt="@photo.PhotoCaption" src="@(photosFolder + photo.PhotoAddress)"/></a><a class="edit" href="#">Edit</a></li>
            }
        </ol>
    </fieldset>
    <fieldset class="positionphotos-tools">
        <ul>
            <li class="positionphotos-tools-upload"><a href="#">Upload photos</a></li>
            <li class="positionphotos-tools-arrange">To arrange photos, drag and drop them in the order you'd like and click save.</li>
        </ul>
    </fieldset>
    <fieldset class="actions">
        <button class="save main-action" type="submit">Save</button>
    </fieldset>
    @if (IsPost)
    {
    <script type="text/javascript">
        initPositionPhotos();
    </script>
    }
</form>
</div>