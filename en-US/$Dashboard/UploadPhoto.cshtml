@* Page being called as a Popup-iframe from Position/#Photos to
    upload new provider photos to its personal folder.
 *@
@using WebMatrix.Data;
@using WebMatrix.WebData;
@functions{
    int RegisterUserPhoto(string fileName, int userId, int positionId){
        using (var db = Database.Open("sqlloco")){
            // we update the new photo name
            return (int)db.QueryValue(@"
                INSERT INTO ProviderServicePhoto (
                    UserID
                    ,PositionID
                    ,PhotoAddress
                    ,RankPosition
                    ,CreatedDate
                    ,UpdatedDate
                    ,ModifiedBy
                    ,Active
                    ,IsPrimaryPhoto
                ) VALUES (
	                @0
	                ,@1
	                ,@2
	                ,(SELECT coalesce(max(P2.RankPosition),0) + 1 FROM ProviderServicePhoto As P2 WHERE P2.UserID=@0 AND P2.PositionID=@1)
	                ,getdate()
	                ,getdate()
	                ,'sys'
	                ,1
                    ,0
                )
                SELECT Cast(@@Identity as int)

                -- Test Alert
                EXEC TestAlertShowcaseWork @0, @1
            ", userId, positionId, fileName);
        }
    }
    void SavePhoto(Stream photo, string virtualPath, string fileName){       
        // Check folder or create
        var folder = Server.MapPath(virtualPath);
        if (!Directory.Exists(folder)) {
            Directory.CreateDirectory(folder);
        }
                
        // Save file on disk
        byte[] content = new byte[photo.Length];
        photo.Read(content, 0, (int)photo.Length);
        File.WriteAllBytes(folder + fileName, content);
        photo.Dispose();
    }
    string GetValidFileName(string fileName){
        // Names starting with $ are considered special for us, no allow user to upload a file with that character as prefix:
        return fileName.TrimStart('$');
    }
}
@{
    LcHelpers.SecurePage();
    var userId = WebSecurity.CurrentUserId;
    var positionId = Request["PositionID"].AsInt();
    var ajaxEnabled = true;
    // This is only for Post uploads
    var uploadedFileURI = "";
    var photoID = 0;
    bool processed = false;
    
    string filePathInApp = "img/userphotos/u" + userId.ToString() + "/";
    string virtualPath = LcUrl.RenderAppPath + filePathInApp;
    
    // qq File uploader support, XHR Upload
    if (!String.IsNullOrEmpty(Request["qqfile"])){
        string fileName = GetValidFileName((string)Request["qqfile"]);

        try{
            uploadedFileURI = virtualPath + fileName;
            SavePhoto(Request.InputStream, virtualPath, fileName);
        } catch(Exception ex) {
            ModelState.AddFormError(ex.Message);
        }
        
        // File saved, register it on the database:
        photoID = RegisterUserPhoto(fileName, userId, positionId);
  
        processed = true;
    } else if (IsPost){

        var fileuploaded = Request.Files["qqfile"] ?? Request.Files["avatar"];
            
        if (fileuploaded == null || String.IsNullOrEmpty(fileuploaded.FileName)) {
            ModelState.AddFormError("Please, select an image");
        }
            
        if (ModelState.IsValid) {
            string fileName = GetValidFileName(fileuploaded.FileName);
            
            try{
                uploadedFileURI = virtualPath + fileName;
                SavePhoto(fileuploaded.InputStream, virtualPath, fileName);
            } catch(Exception ex) {
                ModelState.AddFormError(ex.Message);
            }
                
            // File saved, register it on the database:
            photoID = RegisterUserPhoto(fileName, userId, positionId);
        }
            
        processed = true;
    } else {
        // Manage normal GET
    }
    
    if (processed) {
        if (ModelState.IsValid) {
            if (ajaxEnabled) {
                // NOTE: There is some issues with IE managing this result with contenttype=json
                // because of this, here we use directly the Json helper instead our helper
                //LcHelpers.ReturnJson(
                Json.Write(
                    new Dictionary<string, object>(){
                        { "success", "File was saved" }
                        ,{ "fileURI", uploadedFileURI }
                        ,{ "photoID", photoID }
                    },
                Response.Output);
                Response.End();
                
               /*LcHelpers.ReturnJson(
                    new Dictionary<string, object>(){
                        { "success", "File was saved" }
                        ,{ "fileURI", virtualPath + fileName }
                        ,{ "photoID", photoID }
                    }
                );*/
            }
        } else {
            if (ajaxEnabled) {
                // NOTE: IE problems with contentype=json, use JsonHelper directly:
                //LcHelpers.ReturnJson(
                Json.Write(
                    new Dictionary<string, object>(){
                        { "error", LcRessources.GetText("an-error", String.Join("; ", ModelState.Values.First().Errors)) }
                    },
                    Response.Output);
                Response.End();
            }
        }
    }
}
<html>
    <head>
        <script src="@Href(LcUrl.AppPath + "Scripts/jquery/jquery-1.7.2.min.js")" type="text/javascript"></script>
        <script src="@Href(LcUrl.AppPath + "Scripts/jquery/jquery-ui-1.8.21.custom.min.js")" type="text/javascript"></script>
        <link rel="stylesheet" href="@Href(LcUrl.AppPath + "Styles/smoothness/jquery-ui-1.8.21.custom.css")"/>
        <script src="@Href(LcUrl.AppPath + "Scripts/fileuploader/fileuploader.js")" type="text/javascript"></script>
        <link rel="stylesheet" href="@Href(LcUrl.AppPath + "Scripts/fileuploader/fileuploader.css")"/>

        <script type="text/javascript">
            @Html.Raw(LcUrl.ToJsVar())
        </script>

        <script type="text/javascript">
            function reloadUserPhoto(fileName, photoID) {
                // Add image to the gallery, in the parent document! (this is an iframe)
                var gallery = jQuery('.tab-body.current .positionphotos-gallery > ol', window.parent.document);
                var tplImg = '<li id="UserPhoto-@@0"><a href="#"><img alt="Uploaded photo" src="@@1"/></a><a class="edit" href="#">Edit</a></li>';
                gallery.append(tplImg.replace(/@@0/g, photoID).replace(/@@1/g, fileName))
                    // scroll the gallery to see the new element; using '-2' to avoid some browsers automatic scroll.
                    .animate({scrollTop: gallery[0].scrollHeight - gallery.height() - 2}, 1400)
                    .find('li:last-child')
                    .effect("highlight", {}, 1600);
            }
            @if (ajaxEnabled)
            {
            <text>
            var a = jQuery.noConflict();
            a(document).ready(function () {
                var uploader = new qq.FileUploader({
                    element: document.getElementById('change-photo-file-uploader'),
                    // path to server-side upload script
                    action: '@(LcUrl.LangPath)Dashboard/UploadPhoto/?PositionID=@(positionId)',
                    allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
                    onComplete: function (id, fileName, responseJSON) {
                        if (responseJSON.success)
                        reloadUserPhoto(responseJSON.fileURI, responseJSON.photoID);
                    }
                });
            });
            </text>
            }
            else if (IsPost)
            {
                <text>
                reloadUserPhoto('@uploadedFileURI', @photoID);
                window.close();
                </text>
            }
        </script>
    </head>
    <body>
        <div class="change-photo">
            <div id="change-photo-file-uploader">
                @if(!ajaxEnabled) {
                <form id="uploadPhotoForm" action="@(LcUrl.LangPath)$Dashboard/UploadPhoto/?PositionID=@(positionId)" method="post" enctype="multipart/form-data">
                    @Html.ValidationSummary(LcRessources.ValidationSummaryTitle)
                    <label>Choose an image from your computer: <input type="file" name="avatar" /></label>
                    <button class="button main-action" type="submit">Upload!</button>
                </form>
                }
            </div>
        </div>
    </body>
</html>