@using WebMatrix.Data;
@using WebMatrix.WebData;
@{
    LcHelpers.SecurePage();

    var showHeader = PageData["ShowHeader"] ?? true;
    var showTools = PageData["ShowTools"] ?? true;
    bool isSuccess = false;
    var currentPassword = Request["currentPassword"];
    var newPassword = Request["newPassword"];
    var confirmPassword = Request["confirmPassword"];

    var oAuthLoggedIn = Convert.ToBoolean(Session["OAuthLoggedIn"]);
    
    // Setup validation
    Validation.RequireField("currentPassword", "Please enter your current password.");
    Validation.RequireField("newPassword", "Please enter a new password.");
    Validation.Add("confirmPassword",
        Validator.Required("Please confirm your new password."),
        Validator.EqualsTo("newPassword", "The password confirmation does not match the new password."));
    
    if (IsPost) {
        if (Validation.IsValid()) {
            if (WebSecurity.ChangePassword(WebSecurity.CurrentUserName, currentPassword, newPassword)) {
                isSuccess = true;
                if (Request.IsAjaxRequest()) {
                    LcHelpers.ReturnJsonResult(0, null);
                }
            } else {
                ModelState.AddFormError("An error occurred when attempting to change the password.");
            }
        } else {
             ModelState.AddFormError("Password change failed. Please correct the errors and try again.");
        }
    }
}
<article id="changePasswordBox" class="account-popup">
    @if(showHeader){
    <hgroup class="title">
        <h1>Change Password.</h1>
    </hgroup>
    }
    @if (isSuccess)
    {
        <div>Your password has been updated!</div>
    }
    else
    {
        <section>
            <form class="ajax ajax-box change-password changes-notification-disabled" data-success-post-message="Your password has been updated!" method="post" action="@(LcUrl.LangPath)Account/$ChangePassword/">
                @Html.ValidationSummary(null, true, null)
                @LcHelpers.GetValidationScripts()
                <fieldset>
                    <ul>
                        <li class="current-password password">
                            <label for="currentPassword" @if (!ModelState.IsValidField("currentPassword")) {<text>class="error-label"</text>}>Current Password:</label>
                            <input type="password" id="currentPassword" name="currentPassword" title="Current password" @Validation.GetHtml("currentPassword")/>
                            @*Html.ValidationMessage("currentPassword")*@
                        </li>
                        <li class="new-password password">
                            <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>New Password:</label> 
                            <input type="password" id="newPassword" name="newPassword" title="New password" @Validation.GetHtml("newPassword")/>
                            @*Html.ValidationMessage("newPassword")*@
                        </li>
                        <li class="confirm-password password">
                            <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Confirm Password:</label> 
                            <input type="password" id="confirmPassword" name="confirmPassword" title="Confirm new password" @Validation.GetHtml("confirmPassword")/>
                            @*Html.ValidationMessage("confirmPassword")*@
                        </li>
                        <li class="actions">
                            <button type="submit" class="main-action">Change Password</button>
                        </li>
                    </ul>
                </fieldset>
            </form>
            @if(showTools){
            <div class="account-tools">
                <a class="forgot-password" href="@(LcUrl.LangPath)Account/ForgotPassword/">Forgot password?</a>
            </div>
            }
        </section>
    }
</article>