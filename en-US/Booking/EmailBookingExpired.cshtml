@using WebMatrix.Data;
@{
    LcMessaging.SecureTemplate();
    
    // All the data for this email:
    var info = LcEmailTemplateHelper.GetBookingInfo();

    try{
        Layout = LcUrl.RenderLangPath + "_EmailLayout.cshtml";
        Page.Title = "Your Booking Request has Expired";

        // Data for the EmailLayout:
        PageData["messageTitle"] = "Your Booking Request has Expired";
        PageData["messageSubtitle"] = "";
        // Create URL:
        PageData["ViewOnSiteURL"] = info.ViewOnSiteURL;
   
    }catch(Exception ex){
        showError("HEAD", ex);
    }
}
@helper showError(string section, Exception ex) {
    if (LcHelpers.InProduction) {
        @("We're sorry. There was an error generating an email for you about an expired booking request, please go to your dashboard to see it.")
    } else {
        @(section + " ex: " + ex.Message + "::" + ex.StackTrace)
    }
}
@if (info.Booking == null)
{
    throw new Exception("We're unable to find this booking request, please contact us and reference Booking Request ID: " + info.BookingRequestID.ToString());
}
else
{
    try
    {
        <div>
            @{
                PageData["messageSubtitle"] = String.Format(
                    "Booking Request ID: {0} last updated: {1:D} at {2:T}",
                    info.BookingRequestID, info.Booking.UpdatedDate, info.Booking.UpdatedDate
                );
            }
            
            @switch (info.SentTo) {
			    case LcData.UserInfo.UserType.Provider:
                    
                    PageData["messageTitle"] = String.Format("Booking request from {0} has expired", LcHelpers.GetUserDisplayName(info.CustomerUser));
                    
                    <p @LcEmailTemplateHelper.StyleResetP()>Hello again, @LcHelpers.GetUserDisplayName(info.ProviderUser)! <br/><br/>
                    We’re really sorry to have to let you down. @LcHelpers.GetUserDisplayName(info.CustomerUser) did not respond to your request within the alloted time.  Your credit card has not been charged, and your authorization will expire shortly.<br/><br/>
			        <a href="@(LcUrl.LangUrl)">Click here</a>. to search for another provider. <br/><br/>
			        At your service,<br/><br/>
			        The Loconomics team</p>
                    
                    break;
                case LcData.UserInfo.UserType.Customer:
                
                    PageData["messageTitle"] = String.Format("Booking request for {0} has expired", LcHelpers.GetUserDisplayName(info.ProviderUser));

                    <p @LcEmailTemplateHelper.StyleResetP()>Hello @LcHelpers.GetUserDisplayName(info.CustomerUser), <br/><br/>
                    You haven´t replied to the booking request from @LcHelpers.GetUserDisplayName(info.ProviderUser) requesting your @info.Booking.PositionSingular services, within the alloted 18 hours, and as a result it has now expired. We know life is busy, but we need our community members to be responsive to ensure the best possible experience for everybody.<br/><br/>  
			        @LcHelpers.GetUserDisplayName(info.ProviderUser) has also been informed.
                    If you’d like to contact @info.ProviderUser.ObjectPronoun,
                    <a href="@(LcData.UserInfo.GetUserPublicURL(info.Booking.ProviderUserID))">click here</a>.<br/><br/>
			        At your service.<br/><br/>
			        The Loconomics team</p>

                    break;
            }
        </div>
    }
    catch (Exception ex)
    {
        showError("BODY", ex);
    }
}
