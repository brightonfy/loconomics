/**
    AppNav Component (extends .navbar)
**/
@import "nib";

$AppNav-backColor = #53474b;
$AppNav-iconColor = #3d3232;

.AppNav {
    
    left: 0px;
    right: 0px;
    top: 0px;
    position: absolute;
    
    // Logo
    .navbar-brand {
      float: none;
      display: inline-block;
    
      // magic number! For some reason, the only line-height
      // that limits the full height to the navbar-height (44px now)
      line-height: 13px;

      text-indent: -99999px;
      // manually vertical 'visually' centering (depends on icon)
      background: url("../images/logo-loconomics-header-mini.png") no-repeat center 2px;
      hr-image("../images/logo-loconomics-header-mini@2x.png", 100px, 39px);
      min-width: 100px;
      min-height: 39px;
      height: $app-navbar-height;
    }
    
    .navbar-toggle {
      float: none;
      margin-right: 0;
    }
    
    // Special changes on the SmartNavBar
    .SmartNavBar {
        // Header in buttons needs a more simple design, not like the middle title
        .SmartNavBar-btn h1 {
            color: $gray;
            font-weight: normal;
        }
    }

    // Menus
    .App-menus {
        // General menus container
        background: white;
    
        // Individual menus set-up
        > .navbar-collapse {
            position: fixed;
            left: 0px;
            right: 0px;
            overflow: auto;
            bottom: 0px;
            top: $app-navbar-height;
            // iOS7-8.1 requires a explicit z-index:
            z-index: 300;
            // No border
            border-top: none;
        }
    
        > .navbar-collapse.collapsing {
            // Avoid scrollbar during animation
            overflow: hidden;
        }
        
        // Customization of Bootstrap navigation bar for use as menus
        .nav {
            background: $AppNav-backColor;
            margin-top: 0;
            margin-bottom: 0;
            position: relative;
            z-index: 200;
        }
        
        .App-menus-header {
            margin: 0 (0 - $container-padding-right) 0 (0 - $container-padding-left);
            padding: 15px;
            border-bottom: 1px solid White;
            background: $AppNav-backColor;
            color: White;
            
            font-size: 1.1em;
            
            .App-menus-header-user {
                text-align: center;
                font-size: 1em;
                display: block;
                margin: 10px 0 0 0;
            }
            
            .App-menus-header-photo {
                display: block;
                margin: auto;
                text-align: center;
                background: none;

                img {
                    width: 60px;
                    height: 60px;
                    display: inline-block;
                    border: 3px solid White;
                    border-radius: 100%;
                    background: white;
                    overflow: hidden;
                }
            }
        }

        // Main nav and its content
        .navbar-nav {

            padding-top: 10px;
            
            a {
                color: white;
                
                padding: 10px 15px 10px 40px;

                &:hover,
                &:active {
                    color: $gray;
                    background: $gray-lighter;
                    outline: none;
                }
                
                // icons
                > i {
                    color: $AppNav-iconColor;
                    margin-right: 5px;
                }
            }
            li.active > a {
                color: $brand-primary;
            }
        }
    }

    // Changing icon of menu togglers when opened
    transitionNavSetup() {
        transition-property: transform, opacity;
        transition-duration: 300ms;
        transition-timing-function: ease-in-out;
    }
    
    .navbar-toggle,
    > .SmartNavBar > .SmartNavBar-edge {
        // To avoid the rotation from create a larger
        // box, overflow:hidden is required:
        overflow: hidden;
        text-overflow: clip !important;
    }

    .navbar-toggle {
        transitionNavSetup();
    
        > * {
            transitionNavSetup();
            opacity: 1;
    
            // display added for Chrome/Webkit, for some strange reason
            // inline does not hides the children with opacitiy:0 and no transition
            // and 'block' sets the alinment correctly.
            display: block;
    
            > .glyphicon,
            > .icon {
                // Fixing alingment on Chrome/Webkit
                display: block;
            }
        }
        transform: rotate(0deg);

        &:before {
            content: "î€”";
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;

            font-family: "Glyphicons Halflings";
            line-height: $app-navbar-height;
            text-align: center;

            pointer-events: none;
            opacity: 0;
            // The whole button is being rotate so this
            // icon rotation is not required, BUT we
            // simulate better a plus icon becoming
            // a cross using this:
            transform: rotate(45deg);
            transitionNavSetup();
        }

        &[aria-expanded="true"] {

            > * {
                opacity: 0;
            }

            transform: rotate(180deg);

            &:before {
                opacity: 1;
                transform: rotate(0deg);
            }
        }
    }
}

// On AppNav opened, match SmartNavBar style with nav
body.has-appNav-open {
    .SmartNavBar {
        background: $AppNav-backColor;
        border-bottom-color: transparent;
        
        .SmartNavBar-btn {
            color: White;
        }
        
        h1 {
            opacity: 0;
        }
    }
}
// enable CSS transitions for 'open' style
.AppNav {
    .SmartNavBar {
        transition: background .4s $cubic-easing, border .4s $cubic-easing;
        
        .SmartNavBar-btn {
            transition: inherit, color .4s $cubic-easing;
        }
        
        h1 {
            transition: opacity .4s $cubic-easing;
            opacity: 1;
        }
    }
}
