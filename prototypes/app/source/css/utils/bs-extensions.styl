/**
    Styles, classes and mixims that
    extends the Bootstrap core or replace some
    not 'customizable' pieces.
**/

@import 'styleguideVars.styl'

// Added a new semantic color, 'secondary', 
// create the button for that
@import '../../../vendor/bootstrap/styl/mixins/buttons.styl'
$btn-secondary-color = #fff
$btn-secondary-bg = $brand-secondary
$btn-secondary-border = $brand-secondary-dark
.btn-secondary {
    button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border);
}

/**
    The form control static has by default a different padding
    than the real form controls. Must be the same, taking care
    of the border size.
    TODO: Use variables from Bootstrap rather than static values
**/
.form-control-static {
    padding: 7px 13px;
}

/**
    To solve the usability and between-scripts interaction problems 
    of Bootstrap toggle buttons for radio and checkboxes, is better
    replace the use of data-toggle="buttons" on .btn-groups > input[type=radio|checkbox]
    by this utility class .ut-noRadioCheck.
    The Boostrap code for the toggle-buttons breaks when used with other
    scripts like Knockout; using Knockout to keep the 'active' class applied
    on the label (with .btn class) fix interaction and this class
    removes the native UI for the radio and checkbox if unwanted.
**/
.ut-noRadioCheck {
    input[type="radio"],
    input[type="checkbox"] {
        position: absolute;
        left: -99999px;
        // Bootstrap uses the deprecated 'clip' trick rather than a negative position.
        clip: rect(0px, 0px, 0px, 0px);
    }
}