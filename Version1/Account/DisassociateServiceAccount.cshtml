@{
    WebSecurity.RequireAuthenticatedUser();

    Page.Title = "Disassociate OAuth accounts";
    Layout = "~/_SiteLayout.cshtml";

    IList<OAuthAccountData> accounts = null;

    if (IsPost) {
        string provider = Request.Form["provider"];
        string providerUserId = Request.Form["providerUserId"];
        OAuthWebSecurity.DeleteAccount(provider, providerUserId);
    }
    
    string username = WebSecurity.CurrentUserName;
    accounts = OAuthWebSecurity.GetAccountsForUser(username);
    
}
  <div id="container" class="clearfix">

<hgroup class="title">
    <h1>Disassociate.</h1>
    <h2>Choose a service to disassociate with this account.</h2>
</hgroup>

@if (accounts != null && accounts.Count > 0) {
    
<fieldset>
    <legend>Choose a service to disassociate with this account</legend>
    @foreach (var service in accounts) {
        <form action="" method="post">
            <input type="hidden" name="providerUserId" value="@service.ProviderUserId"/>
            <input type="submit" name="provider" id="@service.Provider" value="@service.Provider" title="Disassociate @(service.Provider + " - " + service.ProviderUserId) from this account." />
        </form>
    }
</fieldset>
    
}
else {
    <div class="message-info">
        <p>This account is not associated with any additional services.</p>
    </div>

</div>