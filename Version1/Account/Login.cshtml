@{
    // Set the layout page and page title
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log In";

    // Initialize general page variables
    var username = "";
    var password = "";
    var rememberMe = false;

    // Setup validation.
    // Scripts for client side validation
    Scripts.Add("~/Scripts/jquery-1.6.2.min.js");
    Scripts.Add("~/Scripts/jquery.validate.min.js");
    Scripts.Add("~/Scripts/jquery.validate.unobtrusive.min.js");
    
    // Validate the user's username
    Validation.RequireField("username", "You must specify a user name.");
    // Validate the user's password
	Validation.RequireField("password", "You must specify a password.");

    // If this is a POST request, validate and process data
    if (IsPost) {
        // is this a OAuth sign in request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty()) {
            OAuthWebSecurity.RequestAuthentication(provider, "~/Account/RegisterService.cshtml");
            return;
        }
        else if (Validation.IsValid()) {
            username = Request.Form["username"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();
        
            if (WebSecurity.UserExists(username) && WebSecurity.GetPasswordFailuresSinceLastSuccess(username) > 4 && WebSecurity.GetLastPasswordFailureDate(username).AddSeconds(60) > DateTime.UtcNow) {
                Response.Redirect("~/account/AccountLockedOut");
                return;
            }

            // Attempt to login to the Security object using provided creds
            if (WebSecurity.Login(username, password, rememberMe)) {
                
                // mark the user as logged in via a normal account,
                // as opposed to via an OAuth or OpenID provider.
                Session["OAuthLoggedIn"] = false;

                var returnUrl = Request.QueryString["ReturnUrl"];
                if (returnUrl.IsEmpty()) {
                    Response.Redirect("~/");
                }
                else {
                    Context.RedirectLocal(returnUrl);
                }
            }
            else {
                ModelState.AddFormError("Incorrect Username or password.");   
            }
        }
    }
}
  <div id="container" class="clearfix">

<hgroup class="title">
    <h1>Log in.</h1>
    <h2>Enter your username and password below.</h2>
</hgroup>

<section id="loginForm">
    <form method="post" action="">
        @* If one or more validation errors exist, show an error *@
        @Html.ValidationSummary("There was a problem with your login and/or errors exist in your form.")    
        <fieldset>
            <legend>Log in to Your Account</legend>
            <ul>
                <li class="username">
                    <label for="username" @if(!ModelState.IsValidField("username")){<text>class="error-label"</text>}>Username:</label>
                    <input type="text" id="username" name="username" value="@username" title="Username" @Validation.GetHtml("username")/>
                    @* Write any username validation errors to the page *@
                    @Html.ValidationMessage("username")
                </li>
                <li class="password">
                    <label for="password" @if(!ModelState.IsValidField("password")){<text>class="error-label"</text>}>Password:</label>
                    <input type="password" id="password" name="password" title="Password" @Validation.GetHtml("password")/>
                    @* Write any password validation errors to the page *@
                    @Html.ValidationMessage("password")
                </li>
                <li class="remember-me">
                    <input type="checkbox" id="rememberMe" name="rememberMe" value="true" title="Remember Me" @if (rememberMe) {<text>checked="checked"</text>} />
                    <label class="checkbox" for="rememberMe">Remember Me?</label>
                </li>
            </ul>
            <input type="submit" value="log in" title="Log in"/>
        </fieldset>
    </form>
    <p>
        <a href="@Href("~/Account/Register")">Don't have a Account?</a>
        <a href="@Href("~/Account/ForgotPassword")">Did you forget your password?</a>
    </p>
</section>

<section class="social" id="socialLoginForm">
    <form method="post" action="">
         <fieldset>
            <legend>Log in using another service</legend>
              <input type="submit" name="provider" id="yahoo" value="Yahoo" title="Log in using your Yahoo account." />
              <input type="submit" name="provider" id="google" value="Google" title="Log in using your Google account." />
            </fieldset>
    </form>
</section>
</div>